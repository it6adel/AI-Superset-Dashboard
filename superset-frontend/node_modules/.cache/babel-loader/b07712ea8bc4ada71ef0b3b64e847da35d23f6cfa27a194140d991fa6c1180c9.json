{"ast":null,"code":"import { css as _css } from \"@emotion/react\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { forwardRef, useCallback, useImperativeHandle, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Behavior, ensureIsArray, FeatureFlag, getChartMetadataRegistry, isFeatureEnabled, t, useTheme } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { usePermissions } from 'src/hooks/usePermissions';\nimport { Dropdown } from 'src/components/Dropdown';\nimport { updateDataMask } from 'src/dataMask/actions';\nimport DrillByModal from 'src/components/Chart/DrillBy/DrillByModal';\nimport { useVerboseMap } from 'src/hooks/apiResources/datasets';\nimport { DrillDetailMenuItems } from '../DrillDetail';\nimport { getMenuAdjustedY } from '../utils';\nimport { MenuItemTooltip } from '../DisabledMenuItemTooltip';\nimport { DrillByMenuItems } from '../DrillBy/DrillByMenuItems';\nimport DrillDetailModal from '../DrillDetail/DrillDetailModal';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport var ContextMenuItem;\n(function (ContextMenuItem) {\n  ContextMenuItem[ContextMenuItem[\"CrossFilter\"] = 0] = \"CrossFilter\";\n  ContextMenuItem[ContextMenuItem[\"DrillToDetail\"] = 1] = \"DrillToDetail\";\n  ContextMenuItem[ContextMenuItem[\"DrillBy\"] = 2] = \"DrillBy\";\n  ContextMenuItem[ContextMenuItem[\"All\"] = 3] = \"All\";\n})(ContextMenuItem || (ContextMenuItem = {}));\nconst ChartContextMenu = ({ id, formData, onSelection, onClose, displayedItems = ContextMenuItem.All, additionalConfig }, ref) => {var _getChartMetadataRegi, _getChartMetadataRegi2;\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const { canDrillToDetail, canDrillBy, canDownload } = usePermissions();\n  const crossFiltersEnabled = useSelector(({ dashboardInfo }) => dashboardInfo.crossFiltersEnabled);\n  const [openKeys, setOpenKeys] = useState([]);\n  const [modalFilters, setFilters] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const isDisplayed = (item) => displayedItems === ContextMenuItem.All ||\n  ensureIsArray(displayedItems).includes(item);\n  const [{ filters, clientX, clientY }, setState] = useState({ clientX: 0, clientY: 0 });\n  const [drillModalIsOpen, setDrillModalIsOpen] = useState(false);\n  const [drillByColumn, setDrillByColumn] = useState();\n  const [showDrillByModal, setShowDrillByModal] = useState(false);\n  const [dataset, setDataset] = useState();\n  const verboseMap = useVerboseMap(dataset);\n  const handleDrillBy = useCallback((column, dataset) => {\n    setDrillByColumn(column);\n    setDataset(dataset); // Save dataset when drilling\n    setShowDrillByModal(true);\n  }, []);\n  const handleCloseDrillByModal = useCallback(() => {\n    setShowDrillByModal(false);\n  }, []);\n  const menuItems = [];\n  const showDrillToDetail = isFeatureEnabled(FeatureFlag.DrillToDetail) &&\n  canDrillToDetail &&\n  isDisplayed(ContextMenuItem.DrillToDetail);\n  const showDrillBy = isFeatureEnabled(FeatureFlag.DrillBy) &&\n  canDrillBy &&\n  isDisplayed(ContextMenuItem.DrillBy);\n  const showCrossFilters = isDisplayed(ContextMenuItem.CrossFilter);\n  const isCrossFilteringSupportedByChart = (_getChartMetadataRegi = getChartMetadataRegistry().\n  get(formData.viz_type)) == null ? void 0 : (_getChartMetadataRegi2 = _getChartMetadataRegi.\n  behaviors) == null ? void 0 : _getChartMetadataRegi2.includes(Behavior.InteractiveChart);\n  let itemsCount = 0;\n  if (showCrossFilters) {\n    itemsCount += 1;\n  }\n  if (showDrillToDetail) {\n    itemsCount += 2; // Drill to detail always has 2 top-level menu items\n  }\n  if (showDrillBy) {\n    itemsCount += 1;\n  }\n  if (itemsCount === 0) {\n    itemsCount = 1; // \"No actions\" appears if no actions in menu\n  }\n  if (showCrossFilters) {var _filters$crossFilter;\n    const isCrossFilterDisabled = !isCrossFilteringSupportedByChart ||\n    !crossFiltersEnabled ||\n    !(filters != null && filters.crossFilter);\n    let crossFilteringTooltipTitle = null;\n    if (!isCrossFilterDisabled) {\n      crossFilteringTooltipTitle = _jsxs(_Fragment, { children: [\n        _jsx(\"div\", { children:\n          t('Cross-filter will be applied to all of the charts that use this dataset.') }\n        ),\n        _jsx(\"div\", { children:\n          t('You can also just click on the chart to apply cross-filter.') }\n        )] }\n      );\n    } else\n    if (!crossFiltersEnabled) {\n      crossFilteringTooltipTitle = _jsx(_Fragment, { children:\n        _jsx(\"div\", { children: t('Cross-filtering is not enabled for this dashboard.') }) }\n      );\n    } else\n    if (!isCrossFilteringSupportedByChart) {\n      crossFilteringTooltipTitle = _jsx(_Fragment, { children:\n        _jsx(\"div\", { children:\n          t('This visualization type does not support cross-filtering.') }\n        ) }\n      );\n    } else\n    if (!(filters != null && filters.crossFilter)) {\n      crossFilteringTooltipTitle = _jsx(_Fragment, { children:\n        _jsx(\"div\", { children: t(`You can't apply cross-filter on this data point.`) }) }\n      );\n    }\n    menuItems.push(_jsxs(_Fragment, { children: [\n      _jsx(Menu.Item, { disabled: isCrossFilterDisabled, onClick: () => {\n          if (filters != null && filters.crossFilter) {\n            dispatch(updateDataMask(id, filters.crossFilter.dataMask));\n          }\n        }, children:\n        filters != null && (_filters$crossFilter = filters.crossFilter) != null && _filters$crossFilter.isCurrentValueSelected ? t('Remove cross-filter') : _jsxs(\"div\", { children: [\n          t('Add cross-filter'),\n          _jsx(MenuItemTooltip, { title: crossFilteringTooltipTitle, color: !isCrossFilterDisabled ?\n            theme.colors.grayscale.base :\n            undefined })] }\n        ) }, \"cross-filtering-menu-item\"\n      ),\n      itemsCount > 1 && _jsx(Menu.Divider, {})] }\n    ));\n  }\n  if (showDrillToDetail) {\n    menuItems.push(_jsx(DrillDetailMenuItems, { formData: formData, filters: filters == null ? void 0 : filters.drillToDetail, setFilters: setFilters, isContextMenu: true, contextMenuY: clientY, onSelection: onSelection, submenuIndex: showCrossFilters ? 2 : 1, setShowModal: setDrillModalIsOpen, ...((additionalConfig == null ? void 0 : additionalConfig.drillToDetail) || {}) }));\n  }\n  if (showDrillBy) {\n    let submenuIndex = 0;\n    if (showCrossFilters) {\n      submenuIndex += 1;\n    }\n    if (showDrillToDetail) {\n      submenuIndex += 2;\n    }\n    menuItems.push(_jsx(DrillByMenuItems, { drillByConfig: filters == null ? void 0 : filters.drillBy, onSelection: onSelection, formData: formData, contextMenuY: clientY, submenuIndex: submenuIndex, open: openKeys.includes('drill-by-submenu'), onDrillBy: handleDrillBy, ...((additionalConfig == null ? void 0 : additionalConfig.drillBy) || {}) }, \"drill-by-submenu\"));\n  }\n  const open = useCallback((clientX, clientY, filters) => {var _document$getElementB;\n    const adjustedY = getMenuAdjustedY(clientY, itemsCount);\n    setState({\n      clientX,\n      clientY: adjustedY,\n      filters\n    });\n    // Since Ant Design's Dropdown does not offer an imperative API\n    // and we can't attach event triggers to charts SVG elements, we\n    // use a hidden span that gets clicked on when receiving click events\n    // from the charts.\n    (_document$getElementB = document.getElementById(`hidden-span-${id}`)) == null ? void 0 : _document$getElementB.click();\n  }, [id, itemsCount]);\n  useImperativeHandle(ref, () => ({\n    open\n  }), [open]);\n  return /*#__PURE__*/ReactDOM.createPortal(_jsxs(_Fragment, { children: [\n    _jsx(Dropdown, { dropdownRender: () => _jsx(Menu, { className: \"chart-context-menu\", onOpenChange: setOpenKeys, onClick: () => {\n          setVisible(false);\n          onClose();\n        }, children:\n        menuItems.length ? menuItems : _jsx(Menu.Item, { disabled: true, children: t('No actions') }) }\n      ), trigger: ['click'], onOpenChange: (value) => {\n        setVisible(value);\n        if (!value) {\n          setOpenKeys([]);\n        }\n      }, open: visible, children:\n      _jsx(\"span\", { id: `hidden-span-${id}`, css: /*#__PURE__*/_css({\n          visibility: 'hidden',\n          position: 'fixed',\n          top: clientY,\n          left: clientX,\n          width: 1,\n          height: 1\n        }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:ChartContextMenu;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\") }) }\n    ),\n    showDrillToDetail && _jsx(DrillDetailModal, { initialFilters: modalFilters, chartId: id, formData: formData, showModal: drillModalIsOpen, onHideModal: () => {\n        setDrillModalIsOpen(false);\n      } }),\n    showDrillByModal && drillByColumn && dataset && (filters == null ? void 0 : filters.drillBy) && _jsx(DrillByModal, { column: drillByColumn, drillByConfig: filters == null ? void 0 : filters.drillBy, formData: formData, onHideModal: handleCloseDrillByModal, dataset: { ...dataset, verbose_map: verboseMap }, canDownload: canDownload })] }\n  ), document.body);\n};\nexport default /*#__PURE__*/forwardRef(ChartContextMenu);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}