{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitationsxw\n * under the License.\n */\nimport { ensureIsArray, getColumnLabel, getMetricLabel } from '@superset-ui/core';\nconst PERCENTILE_REGEX = /(\\d+)\\/(\\d+) percentiles/;\nexport const boxplotOperator = (formData, queryObject) => {\n  const { groupby, whiskerOptions } = formData;\n  if (whiskerOptions) {\n    let whiskerType;\n    let percentiles;\n    const percentileMatch = PERCENTILE_REGEX.exec(whiskerOptions);\n    if (whiskerOptions === 'Tukey' || !whiskerOptions) {\n      whiskerType = 'tukey';\n    } else\n    if (whiskerOptions === 'Min/max (no outliers)') {\n      whiskerType = 'min/max';\n    } else\n    if (percentileMatch) {\n      whiskerType = 'percentile';\n      percentiles = [\n      parseInt(percentileMatch[1], 10),\n      parseInt(percentileMatch[2], 10)];\n\n    } else\n    {\n      throw new Error(`Unsupported whisker type: ${whiskerOptions}`);\n    }\n    return {\n      operation: 'boxplot',\n      options: {\n        whisker_type: whiskerType,\n        percentiles,\n        groupby: ensureIsArray(groupby).map(getColumnLabel),\n        metrics: ensureIsArray(queryObject.metrics).map(getMetricLabel)\n      }\n    };\n  }\n  return undefined;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}