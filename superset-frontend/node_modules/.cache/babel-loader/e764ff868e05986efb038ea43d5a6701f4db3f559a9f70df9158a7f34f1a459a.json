{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { formatSelectOptions, sections, sharedControls } from '@superset-ui/chart-controls';\nimport { DEFAULT_FORM_DATA } from './constants';\nimport { legendSection, truncateXAxis, xAxisBounds, xAxisLabelRotation } from '../controls';\nimport { defaultYAxis } from '../defaults';\nconst { logAxis, truncateYAxis, yAxisBounds, opacity } = DEFAULT_FORM_DATA;\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['series'],\n    ['entity'],\n    ['x'],\n    ['y'],\n    ['adhoc_filters'],\n    ['size'],\n    ['orderby'],\n    [\n    {\n      name: 'order_desc',\n      config: {\n        ...sharedControls.order_desc,\n        visibility: ({ controls }) => Boolean(controls.orderby.value)\n      }\n    }],\n\n    ['row_limit']]\n\n  },\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    tabOverride: 'customize',\n    controlSetRows: [\n    ['color_scheme'],\n    ...legendSection,\n    [\n    {\n      name: 'max_bubble_size',\n      config: {\n        type: 'SelectControl',\n        renderTrigger: true,\n        freeForm: true,\n        label: t('Max Bubble Size'),\n        default: '25',\n        choices: formatSelectOptions([\n        '5',\n        '10',\n        '15',\n        '25',\n        '50',\n        '75',\n        '100']\n        )\n      }\n    }],\n\n    [\n    {\n      name: 'tooltipSizeFormat',\n      config: {\n        ...sharedControls.y_axis_format,\n        label: t('Bubble size number format')\n      }\n    }],\n\n    [\n    {\n      name: 'opacity',\n      config: {\n        type: 'SliderControl',\n        label: t('Bubble Opacity'),\n        renderTrigger: true,\n        min: 0,\n        max: 1,\n        step: 0.1,\n        default: opacity,\n        description: t('Opacity of bubbles, 0 means completely transparent, 1 means opaque')\n      }\n    }]]\n\n\n  },\n  {\n    label: t('X Axis'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'x_axis_label',\n      config: {\n        type: 'TextControl',\n        label: t('X Axis Title'),\n        renderTrigger: true,\n        default: ''\n      }\n    }],\n\n    [xAxisLabelRotation],\n    [\n    {\n      name: 'x_axis_title_margin',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        clearable: true,\n        label: t('X AXIS TITLE MARGIN'),\n        renderTrigger: true,\n        default: sections.TITLE_MARGIN_OPTIONS[1],\n        choices: formatSelectOptions(sections.TITLE_MARGIN_OPTIONS)\n      }\n    }],\n\n    [\n    {\n      name: 'xAxisFormat',\n      config: {\n        ...sharedControls.y_axis_format,\n        label: t('X Axis Format')\n      }\n    }],\n\n    [\n    {\n      name: 'logXAxis',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Logarithmic x-axis'),\n        renderTrigger: true,\n        default: logAxis,\n        description: t('Logarithmic x-axis')\n      }\n    }]]\n\n\n  },\n  {\n    label: t('Y Axis'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'y_axis_label',\n      config: {\n        type: 'TextControl',\n        label: t('Y Axis Title'),\n        renderTrigger: true,\n        default: ''\n      }\n    }],\n\n    [\n    {\n      name: 'yAxisLabelRotation',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        clearable: false,\n        label: t('Rotate y axis label'),\n        choices: [\n        [0, '0°'],\n        [45, '45°']],\n\n        default: defaultYAxis.yAxisLabelRotation,\n        renderTrigger: true,\n        description: t('Input field supports custom rotation. e.g. 30 for 30°')\n      }\n    }],\n\n    [\n    {\n      name: 'y_axis_title_margin',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        clearable: true,\n        label: t('Y AXIS TITLE MARGIN'),\n        renderTrigger: true,\n        default: sections.TITLE_MARGIN_OPTIONS[1],\n        choices: formatSelectOptions(sections.TITLE_MARGIN_OPTIONS)\n      }\n    }],\n\n    ['y_axis_format'],\n    [\n    {\n      name: 'logYAxis',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Logarithmic y-axis'),\n        renderTrigger: true,\n        default: logAxis,\n        description: t('Logarithmic y-axis')\n      }\n    }],\n\n    [truncateXAxis],\n    [xAxisBounds],\n    [\n    {\n      name: 'truncateYAxis',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Truncate Y Axis'),\n        default: truncateYAxis,\n        renderTrigger: true,\n        description: t('Truncate Y Axis. Can be overridden by specifying a min or max bound.')\n      }\n    }],\n\n    [\n    {\n      name: 'y_axis_bounds',\n      config: {\n        type: 'BoundsControl',\n        label: t('Y Axis Bounds'),\n        renderTrigger: true,\n        default: yAxisBounds,\n        description: t('Bounds for the Y-axis. When left empty, the bounds are ' +\n        'dynamically defined based on the min/max of the data. Note that ' +\n        \"this feature will only expand the axis range. It won't \" +\n        \"narrow the data's extent.\"),\n        visibility: ({ controls }) => {var _controls$truncateYAx;return Boolean(controls == null ? void 0 : (_controls$truncateYAx = controls.truncateYAxis) == null ? void 0 : _controls$truncateYAx.value);}\n      }\n    }]]\n\n\n  }]\n\n};\nexport default config;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}