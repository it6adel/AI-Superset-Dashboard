{"ast":null,"code":"import _omit from \"lodash/omit\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { isAdhocColumn, isPhysicalColumn } from './types';\nimport { isXAxisSet } from './getXAxis';\nexport function normalizeTimeColumn(formData, queryObject) {\n  // The formData should be \"raw form_data\" -- the snake_case version of formData rather than camelCase.\n  if (!isXAxisSet(formData)) {\n    return queryObject;\n  }\n  const { columns: _columns, extras: _extras } = queryObject;\n  const mutatedColumns = [...(_columns || [])];\n  const axisIdx = _columns == null ? void 0 : _columns.findIndex((col) => isPhysicalColumn(col) &&\n  isPhysicalColumn(formData.x_axis) &&\n  col === formData.x_axis ||\n  isAdhocColumn(col) &&\n  isAdhocColumn(formData.x_axis) &&\n  col.sqlExpression === formData.x_axis.sqlExpression);\n  if (axisIdx !== undefined &&\n  axisIdx > -1 &&\n  formData.x_axis &&\n  Array.isArray(_columns)) {\n    if (isAdhocColumn(_columns[axisIdx])) {\n      mutatedColumns[axisIdx] = {\n        timeGrain: _extras == null ? void 0 : _extras.time_grain_sqla,\n        columnType: 'BASE_AXIS',\n        ..._columns[axisIdx]\n      };\n    } else\n    {\n      mutatedColumns[axisIdx] = {\n        timeGrain: _extras == null ? void 0 : _extras.time_grain_sqla,\n        columnType: 'BASE_AXIS',\n        sqlExpression: formData.x_axis,\n        label: formData.x_axis,\n        expressionType: 'SQL'\n      };\n    }\n    const newQueryObject = _omit(queryObject, ['is_timeseries']);\n    newQueryObject.columns = mutatedColumns;\n    return newQueryObject;\n  }\n  // fallback, return original queryObject\n  return queryObject;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}