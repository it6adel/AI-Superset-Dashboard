{"ast":null,"code":"import _cloneDeepWith from \"lodash/cloneDeepWith\"; /*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport _JSONbig from 'json-bigint';\n\nconst JSONbig = _JSONbig({\n  constructorAction: 'preserve'\n});\nexport default async function parseResponse(apiPromise, parseMethod) {\n  const response = await apiPromise;\n  // reject failed HTTP requests with the raw response\n  if (!response.ok) {\n    return Promise.reject(response);\n  }\n  if (parseMethod === null || parseMethod === 'raw') {\n    return response;\n  }\n  if (parseMethod === 'text') {\n    const text = await response.text();\n    const result = {\n      response,\n      text\n    };\n    return result;\n  }\n  if (parseMethod === 'json-bigint') {\n    const rawData = await response.text();\n    const json = JSONbig.parse(rawData);\n    const result = {\n      response,\n      json: _cloneDeepWith(json, (value) => {\n        // `json-bigint` could not handle floats well, see sidorares/json-bigint#62\n        // TODO: clean up after json-bigint>1.0.1 is released\n        if ((value == null ? void 0 : value.isInteger == null ? void 0 : value.isInteger()) === false) {\n          return Number(value);\n        }\n        if (value != null && value.isGreaterThan != null && value.isGreaterThan(Number.MAX_SAFE_INTEGER) ||\n        value != null && value.isLessThan != null && value.isLessThan(Number.MIN_SAFE_INTEGER)) {\n          return BigInt(value);\n        }\n        return undefined;\n      })\n    };\n    return result;\n  }\n  // by default treat this as json\n  if (parseMethod === undefined || parseMethod === 'json') {\n    const json = await response.json();\n    const result = {\n      json,\n      response\n    };\n    return result;\n  }\n  throw new Error(`Expected parseResponse=json|json-bigint|text|raw|null, got '${parseMethod}'.`);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}