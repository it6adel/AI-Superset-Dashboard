{"ast":null,"code":"import { Form } from 'src/components/Form';\nimport { FormFieldOrder, FORM_FIELD_MAP } from './constants';\nimport { formScrollableStyles, validatedFormStyles } from '../styles';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst DatabaseConnectionForm = ({ dbModel, db, editNewDb, getPlaceholder, getValidation, isEditMode = false, onAddTableCatalog, onChange, onExtraInputChange, onEncryptedExtraInputChange, onParametersChange, onParametersUploadFileChange, onQueryChange, onRemoveTableCatalog, sslForced, validationErrors, clearValidationErrors }) => {\n  const parameters = dbModel == null ? void 0 : dbModel.parameters;\n  return _jsx(Form, { children:\n    _jsx(\"div\", {\n      // @ts-ignore\n      css: (theme) => [\n      formScrollableStyles,\n      validatedFormStyles(theme)], children:\n\n      parameters &&\n      FormFieldOrder.filter((key) => Object.keys(parameters.properties).includes(key) ||\n      key === 'database_name').map((field) => {var _parameters$required, _parameters$propertie, _parameters$propertie2;return (\n          // @ts-ignore TODO: fix ComponentClass for SSHTunnelSwitchComponent not having call signature.\n          FORM_FIELD_MAP[field]({\n            required: (_parameters$required = parameters.required) == null ? void 0 : _parameters$required.includes(field),\n            changeMethods: {\n              onParametersChange,\n              onChange,\n              onQueryChange,\n              onParametersUploadFileChange,\n              onAddTableCatalog,\n              onRemoveTableCatalog,\n              onExtraInputChange,\n              onEncryptedExtraInputChange\n            },\n            validationErrors,\n            getValidation,\n            clearValidationErrors,\n            db,\n            key: field,\n            field,\n            default_value: (_parameters$propertie = parameters.properties[field]) == null ? void 0 : _parameters$propertie.default,\n            description: (_parameters$propertie2 = parameters.properties[field]) == null ? void 0 : _parameters$propertie2.description,\n            isEditMode,\n            sslForced,\n            editNewDb,\n            placeholder: getPlaceholder ? getPlaceholder(field) : undefined\n          }));}) }\n    ) }\n  );\n};\nexport const FormFieldMap = FORM_FIELD_MAP;\nexport default DatabaseConnectionForm;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}