{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState } from 'react';\nimport { css, t, useTheme } from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport Icons from 'src/components/Icons';\nimport { Menu } from 'src/components/Menu';\nimport { Link } from 'react-router-dom';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst WIDTH = 220;\nconst HEIGHT = 300;\nconst SEARCH_THRESHOLD = 10;\nconst DashboardsSubMenu = ({ chartId, dashboards = [], ...menuProps }) => {\n  const theme = useTheme();\n  const [dashboardSearch, setDashboardSearch] = useState();\n  const [hoveredItem, setHoveredItem] = useState();\n  const showSearch = dashboards.length > SEARCH_THRESHOLD;\n  const filteredDashboards = dashboards.filter((dashboard) => !dashboardSearch ||\n  dashboard.dashboard_title.\n  toLowerCase().\n  includes(dashboardSearch.toLowerCase()));\n  const noResults = dashboards.length === 0;\n  const noResultsFound = dashboardSearch && filteredDashboards.length === 0;\n  const urlQueryString = chartId ? `?focused_chart=${chartId}` : '';\n  return _jsxs(_Fragment, { children: [\n    showSearch && _jsx(Input, { allowClear: true, placeholder: t('Search'), prefix: _jsx(Icons.StarOutlined, { iconSize: \"l\" }), css: css`\n            width: ${WIDTH}px;\n            margin: ${theme.gridUnit * 2}px ${theme.gridUnit * 3}px;\n          `, value: dashboardSearch, onChange: (e) => setDashboardSearch(e.currentTarget.value) }),\n    _jsxs(\"div\", { css: css`\n          max-height: ${HEIGHT}px;\n          overflow: auto;\n        `, children: [\n      filteredDashboards.map((dashboard) => _jsx(Menu.Item, { onMouseEnter: () => setHoveredItem(dashboard.id), onMouseLeave: () => {\n          if (hoveredItem === dashboard.id) {\n            setHoveredItem(null);\n          }\n        }, ...menuProps, children:\n        _jsx(Link, { target: \"_blank\", rel: \"noreferer noopener\", to: `/superset/dashboard/${dashboard.id}${urlQueryString}`, children:\n          _jsxs(\"div\", { css: css`\n                  display: flex;\n                  flex-direction: row;\n                  align-items: center;\n                  max-width: ${WIDTH}px;\n                `, children: [\n            _jsx(\"div\", { css: css`\n                    white-space: normal;\n                  `, children:\n              dashboard.dashboard_title }\n            ),\n            _jsx(Icons.Full, { iconSize: \"l\", css: css`\n                    margin-left: ${theme.gridUnit * 2}px;\n                    visibility: ${hoveredItem === dashboard.id ?\n              'visible' :\n              'hidden'};\n                  ` })] }\n          ) }\n        ) }, String(dashboard.id)\n      )),\n      noResultsFound && _jsx(\"div\", { css: css`\n              margin-left: ${theme.gridUnit * 3}px;\n              margin-bottom: ${theme.gridUnit}px;\n            `, children:\n        t('No results found') }\n      ),\n      noResults && _jsx(Menu.Item, { disabled: true, css: css`\n              min-width: ${WIDTH}px;\n            `, ...menuProps, children:\n        t('None') }\n      )] }\n    )] }\n  );\n};\nexport default DashboardsSubMenu;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}