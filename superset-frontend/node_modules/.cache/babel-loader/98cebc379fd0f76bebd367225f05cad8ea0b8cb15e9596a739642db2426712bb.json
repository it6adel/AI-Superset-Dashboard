{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, ChartMetadata, ChartPlugin } from '@superset-ui/core';\nimport buildQuery from './buildQuery';\nimport controlPanel from './controlPanel';\nimport transformProps from './transformProps';\nimport thumbnail from '../images/thumbnail.png';\nimport example1 from '../images/example1.png';\nimport example2 from '../images/example2.png';\nimport { getLayerConfig } from '../util/controlPanelUtil';\nexport default class CartodiagramPlugin extends ChartPlugin {\n  constructor(opts) {\n    const metadata = new ChartMetadata({\n      description: 'Display charts on a map. For using this plugin, users first have to create any other chart that can then be placed on the map.',\n      name: t('Cartodiagram'),\n      thumbnail,\n      tags: [t('Geo'), t('2D'), t('Spatial'), t('Experimental')],\n      category: t('Map'),\n      exampleGallery: [\n      { url: example1, caption: t('Pie charts on a map') },\n      { url: example2, caption: t('Line charts on a map') }]\n\n    });\n    if (opts.defaultLayers) {\n      const layerConfig = getLayerConfig(controlPanel);\n      // set defaults for layer config if found\n      if (layerConfig) {\n        layerConfig.config.default = opts.defaultLayers;\n      } else\n      {\n        // eslint-disable-next-line no-console\n        console.warn('Cannot set defaultLayers. layerConfig not found in control panel. Please check if the path to layerConfig should be adjusted.');\n      }\n    }\n    super({\n      buildQuery,\n      controlPanel,\n      loadChart: () => import('../CartodiagramPlugin'),\n      metadata,\n      transformProps\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}