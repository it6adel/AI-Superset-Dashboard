{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Log event names ------------------------------------------------------------\nexport const LOG_ACTIONS_LOAD_CHART = 'load_chart';\nexport const LOG_ACTIONS_RENDER_CHART = 'render_chart';\nexport const LOG_ACTIONS_HIDE_BROWSER_TAB = 'hide_browser_tab';\nexport const LOG_ACTIONS_MOUNT_DASHBOARD = 'mount_dashboard';\nexport const LOG_ACTIONS_MOUNT_EXPLORER = 'mount_explorer';\nexport const LOG_ACTIONS_SELECT_DASHBOARD_TAB = 'select_dashboard_tab';\nexport const LOG_ACTIONS_FORCE_REFRESH_CHART = 'force_refresh_chart';\nexport const LOG_ACTIONS_CHANGE_EXPLORE_CONTROLS = 'change_explore_controls';\nexport const LOG_ACTIONS_TOGGLE_EDIT_DASHBOARD = 'toggle_edit_dashboard';\nexport const LOG_ACTIONS_FORCE_REFRESH_DASHBOARD = 'force_refresh_dashboard';\nexport const LOG_ACTIONS_PERIODIC_RENDER_DASHBOARD = 'periodic_render_dashboard';\nexport const LOG_ACTIONS_EXPLORE_DASHBOARD_CHART = 'explore_dashboard_chart';\nexport const LOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART = 'export_csv_dashboard_chart';\nexport const LOG_ACTIONS_EXPORT_XLSX_DASHBOARD_CHART = 'export_xlsx_dashboard_chart';\nexport const LOG_ACTIONS_CHANGE_DASHBOARD_FILTER = 'change_dashboard_filter';\nexport const LOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION = 'dataset_creation_empty_cancellation';\nexport const LOG_ACTIONS_DATASET_CREATION_DATABASE_CANCELLATION = 'dataset_creation_database_cancellation';\nexport const LOG_ACTIONS_DATASET_CREATION_SCHEMA_CANCELLATION = 'dataset_creation_schema_cancellation';\nexport const LOG_ACTIONS_DATASET_CREATION_TABLE_CANCELLATION = 'dataset_creation_table_cancellation';\nexport const LOG_ACTIONS_DATASET_CREATION_SUCCESS = 'dataset_creation_success';\nexport const LOG_ACTIONS_SPA_NAVIGATION = 'spa_navigation';\nexport const LOG_ACTIONS_CONFIRM_OVERWRITE_DASHBOARD_METADATA = 'confirm_overwrite_dashboard_metadata';\nexport const LOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_IMAGE = 'dashboard_download_as_image';\nexport const LOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_PDF = 'dashboard_download_as_pdf';\nexport const LOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE = 'chart_download_as_image';\nexport const LOG_ACTIONS_CHART_DOWNLOAD_AS_CSV = 'chart_download_as_csv';\nexport const LOG_ACTIONS_CHART_DOWNLOAD_AS_CSV_PIVOTED = 'chart_download_as_csv_pivoted';\nexport const LOG_ACTIONS_CHART_DOWNLOAD_AS_XLS = 'chart_download_as_xls';\nexport const LOG_ACTIONS_CHART_DOWNLOAD_AS_JSON = 'chart_download_as_json';\nexport const LOG_ACTIONS_SQLLAB_WARN_LOCAL_STORAGE_USAGE = 'sqllab_warn_local_storage_usage';\nexport const LOG_ACTIONS_SQLLAB_FETCH_FAILED_QUERY = 'sqllab_fetch_failed_query';\nexport const LOG_ACTIONS_DRILL_BY_MODAL_OPENED = 'drill_by_modal_opened';\nexport const LOG_ACTIONS_FURTHER_DRILL_BY = 'further_drill_by';\nexport const LOG_ACTIONS_DRILL_BY_EDIT_CHART = 'drill_by_edit_chart';\nexport const LOG_ACTIONS_DRILL_BY_BREADCRUMB_CLICKED = 'drill_by_breadcrumb_clicked';\nexport const LOG_ACTIONS_SQLLAB_MONITOR_LOCAL_STORAGE_USAGE = 'sqllab_monitor_local_storage_usage';\nexport const LOG_ACTIONS_SQLLAB_CREATE_TABLE_AS = 'sqllab_create_table_as';\nexport const LOG_ACTIONS_SQLLAB_CREATE_VIEW_AS = 'sqllab_create_view_as';\nexport const LOG_ACTIONS_SQLLAB_RUN_QUERY = 'sqllab_run_query';\nexport const LOG_ACTIONS_SQLLAB_STOP_QUERY = 'sqllab_stop_query';\nexport const LOG_ACTIONS_SQLLAB_ESTIMATE_QUERY_COST = 'sqllab_estimate_query_cost';\nexport const LOG_ACTIONS_SQLLAB_SAVE_QUERY = 'sqllab_save_query';\nexport const LOG_ACTIONS_SQLLAB_SAVE_DATASET = 'sqllab_save_dataset';\nexport const LOG_ACTIONS_SQLLAB_COPY_LINK = 'sqllab_copy_link';\nexport const LOG_ACTIONS_SQLLAB_FORMAT_SQL = 'sqllab_format_sql';\nexport const LOG_ACTIONS_SQLLAB_DOWNLOAD_CSV = 'sqllab_download_csv';\nexport const LOG_ACTIONS_SQLLAB_COPY_RESULT_TO_CLIPBOARD = 'sqllab_copy_result_to_clipboard';\nexport const LOG_ACTIONS_SQLLAB_CREATE_CHART = 'sqllab_create_chart';\nexport const LOG_ACTIONS_SQLLAB_LOAD_TAB_STATE = 'sqllab_load_tab_state';\n// Log event types --------------------------------------------------------------\nexport const LOG_EVENT_TYPE_TIMING = new Set([\nLOG_ACTIONS_LOAD_CHART,\nLOG_ACTIONS_RENDER_CHART,\nLOG_ACTIONS_HIDE_BROWSER_TAB,\nLOG_ACTIONS_SQLLAB_FETCH_FAILED_QUERY,\nLOG_ACTIONS_SQLLAB_LOAD_TAB_STATE]\n);\nexport const LOG_EVENT_TYPE_USER = new Set([\nLOG_ACTIONS_MOUNT_DASHBOARD,\nLOG_ACTIONS_SELECT_DASHBOARD_TAB,\nLOG_ACTIONS_EXPLORE_DASHBOARD_CHART,\nLOG_ACTIONS_FORCE_REFRESH_CHART,\nLOG_ACTIONS_EXPORT_CSV_DASHBOARD_CHART,\nLOG_ACTIONS_CHANGE_DASHBOARD_FILTER,\nLOG_ACTIONS_CHANGE_EXPLORE_CONTROLS,\nLOG_ACTIONS_TOGGLE_EDIT_DASHBOARD,\nLOG_ACTIONS_FORCE_REFRESH_DASHBOARD,\nLOG_ACTIONS_PERIODIC_RENDER_DASHBOARD,\nLOG_ACTIONS_MOUNT_EXPLORER,\nLOG_ACTIONS_CONFIRM_OVERWRITE_DASHBOARD_METADATA,\nLOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_IMAGE,\nLOG_ACTIONS_DASHBOARD_DOWNLOAD_AS_PDF,\nLOG_ACTIONS_CHART_DOWNLOAD_AS_IMAGE]\n);\nexport const LOG_EVENT_DATASET_TYPE_DATASET_CREATION = [\nLOG_ACTIONS_DATASET_CREATION_EMPTY_CANCELLATION,\nLOG_ACTIONS_DATASET_CREATION_DATABASE_CANCELLATION,\nLOG_ACTIONS_DATASET_CREATION_SCHEMA_CANCELLATION,\nLOG_ACTIONS_DATASET_CREATION_TABLE_CANCELLATION,\nLOG_ACTIONS_DATASET_CREATION_SUCCESS];\n\nexport const Logger = {\n  timeOriginOffset: 0,\n  markTimeOrigin() {\n    this.timeOriginOffset = window.performance.now();\n  },\n  // note that this returns ms since last navigation, NOT ms since epoch\n  getTimestamp() {\n    return Math.round(window.performance.now() - this.timeOriginOffset);\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}