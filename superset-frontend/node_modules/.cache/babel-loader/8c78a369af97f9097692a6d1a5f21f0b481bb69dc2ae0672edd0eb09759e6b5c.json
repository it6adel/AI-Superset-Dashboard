{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\n// A few standard controls sections that are used internally.\n// Not recommended for use in third-party plugins.\nconst baseTimeSection = {\n  label: t('Time'),\n  expanded: true,\n  description: t('Time related form attributes')\n};\nexport const legacyTimeseriesTime = {\n  ...baseTimeSection,\n  controlSetRows: [\n  ['granularity'],\n  ['granularity_sqla'],\n  ['time_grain_sqla'],\n  ['time_range']]\n\n};\nexport const datasourceAndVizType = {\n  label: t('Datasource & Chart Type'),\n  expanded: true,\n  controlSetRows: [\n  ['datasource'],\n  ['viz_type'],\n  [\n  {\n    name: 'slice_id',\n    config: {\n      type: 'HiddenControl',\n      label: t('Chart ID'),\n      hidden: true,\n      description: t('The id of the active chart')\n    }\n  },\n  {\n    name: 'cache_timeout',\n    config: {\n      type: 'HiddenControl',\n      label: t('Cache Timeout (seconds)'),\n      hidden: true,\n      description: t('The number of seconds before expiring the cache')\n    }\n  },\n  {\n    name: 'url_params',\n    config: {\n      type: 'HiddenControl',\n      label: t('URL Parameters'),\n      hidden: true,\n      description: t('Extra url parameters for use in Jinja templated queries')\n    }\n  },\n  {\n    name: 'custom_params',\n    config: {\n      type: 'HiddenControl',\n      label: t('Extra Parameters'),\n      hidden: true,\n      description: t('Extra parameters that any plugins can choose to set for use in Jinja templated queries')\n    }\n  }]]\n\n\n};\nexport const colorScheme = {\n  label: t('Color Scheme'),\n  controlSetRows: [['color_scheme']]\n};\nexport const annotations = {\n  label: t('Annotations and Layers'),\n  tabOverride: 'data',\n  expanded: true,\n  controlSetRows: [\n  [\n  {\n    name: 'annotation_layers',\n    config: {\n      type: 'AnnotationLayerControl',\n      label: '',\n      default: [],\n      description: t('Annotation Layers'),\n      renderTrigger: true\n    }\n  }]]\n\n\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}