{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { cloneElement } from 'react';\nimport { Dropdown as AntdDropdown } from 'antd-v5';\nimport { styled } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst MenuDots = styled.div`\n  width: ${({ theme }) => theme.gridUnit * 0.75}px;\n  height: ${({ theme }) => theme.gridUnit * 0.75}px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.grayscale.light1};\n\n  font-weight: ${({ theme }) => theme.typography.weights.normal};\n  display: inline-flex;\n  position: relative;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.primary.base};\n\n    &::before,\n    &::after {\n      background-color: ${({ theme }) => theme.colors.primary.base};\n    }\n  }\n\n  &::before,\n  &::after {\n    position: absolute;\n    content: ' ';\n    width: ${({ theme }) => theme.gridUnit * 0.75}px;\n    height: ${({ theme }) => theme.gridUnit * 0.75}px;\n    border-radius: 50%;\n    background-color: ${({ theme }) => theme.colors.grayscale.light1};\n  }\n\n  &::before {\n    top: ${({ theme }) => theme.gridUnit}px;\n  }\n\n  &::after {\n    bottom: ${({ theme }) => theme.gridUnit}px;\n  }\n`;\nconst MenuDotsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: ${({ theme }) => theme.gridUnit * 2}px;\n  padding-left: ${({ theme }) => theme.gridUnit}px;\n`;\nexport var IconOrientation;\n(function (IconOrientation) {\n  IconOrientation[\"Vertical\"] = \"vertical\";\n  IconOrientation[\"Horizontal\"] = \"horizontal\";\n})(IconOrientation || (IconOrientation = {}));\nconst RenderIcon = (iconOrientation = IconOrientation.Vertical) => {\n  const component = iconOrientation === IconOrientation.Horizontal ? _jsx(Icons.EllipsisOutlined, { iconSize: \"xl\" }) : _jsx(MenuDots, {});\n  return component;\n};\nexport const MenuDotsDropdown = ({ overlay, iconOrientation = IconOrientation.Vertical, ...rest }) => _jsx(AntdDropdown, { dropdownRender: () => overlay, ...rest, children:\n  _jsx(MenuDotsWrapper, { children:\n    RenderIcon(iconOrientation) }\n  ) }\n);\nexport const NoAnimationDropdown = (props) => {\n  const { children, onBlur, onKeyDown, ...rest } = props;\n  const childrenWithProps = /*#__PURE__*/cloneElement(children, {\n    onBlur,\n    onKeyDown\n  });\n  return _jsx(AntdDropdown, { autoFocus: true, overlayStyle: props.overlayStyle, ...rest, children:\n    childrenWithProps }\n  );\n};\nexport const Dropdown = (props) => _jsx(AntdDropdown, { autoFocus: true, ...props });","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}