{"ast":null,"code":"import { t, tn } from '@superset-ui/core';\nimport IssueCode from './IssueCode';\nimport ErrorAlert from './ErrorAlert';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nfunction TimeoutErrorMessage({ error, source }) {\n  const { extra, level } = error;\n  const isVisualization = ['dashboard', 'explore'].includes(source);\n  const subtitle = isVisualization ?\n  tn('We’re having trouble loading this visualization. Queries are set to timeout after %s second.', 'We’re having trouble loading this visualization. Queries are set to timeout after %s seconds.', extra.timeout, extra.timeout) :\n  tn('We’re having trouble loading these results. Queries are set to timeout after %s second.', 'We’re having trouble loading these results. Queries are set to timeout after %s seconds.', extra.timeout, extra.timeout);\n  const body = _jsxs(_Fragment, { children: [\n    _jsxs(\"p\", { children: [\n      t('This may be triggered by:'),\n      _jsx(\"br\", {}),\n      extra.issue_codes.\n      map((issueCode) => _jsx(IssueCode, { ...issueCode })).\n      reduce((prev, curr) => [prev, _jsx(\"br\", {}), curr])] }\n    ),\n    isVisualization && extra.owners && _jsxs(_Fragment, { children: [\n      _jsx(\"br\", {}),\n      _jsx(\"p\", { children:\n        tn('Please reach out to the Chart Owner for assistance.', 'Please reach out to the Chart Owners for assistance.', extra.owners.length) }\n      ),\n      _jsx(\"p\", { children:\n        tn('Chart Owner: %s', 'Chart Owners: %s', extra.owners.length, extra.owners.join(', ')) }\n      )] }\n    )] }\n  );\n  return _jsx(ErrorAlert, { errorType: t('Timeout error'), message: subtitle, type: level, descriptionDetails: body });\n}\nexport default TimeoutErrorMessage;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}