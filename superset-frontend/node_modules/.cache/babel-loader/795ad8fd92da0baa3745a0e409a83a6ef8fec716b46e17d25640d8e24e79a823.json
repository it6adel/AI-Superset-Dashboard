{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\nimport { t, styled, SupersetClient } from '@superset-ui/core';\nimport { FormLabel } from 'src/components/Form';\nimport Modal from 'src/components/Modal';\nimport AsyncSelect from 'src/components/Select/AsyncSelect';\nimport Button from 'src/components/Button';\nimport { loadTags } from 'src/components/Tags/utils';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst BulkTagModalContainer = styled.div`\n  .bulk-tag-text {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2.5}px;\n  }\n`;\nconst BulkTagModal = ({ show, selected = [], onHide, refreshData, resourceName, addSuccessToast, addDangerToast }) => {\n  useEffect(() => {}, []);\n  const [tags, setTags] = useState([]);\n  const onSave = async () => {\n    await SupersetClient.post({\n      endpoint: `/api/v1/tag/bulk_create`,\n      jsonPayload: {\n        tags: tags.map((tag) => ({\n          name: tag.label,\n          objects_to_tag: selected.map((item) => [\n          resourceName,\n          +item.original.id]\n          )\n        }))\n      }\n    }).\n    then(({ json = {} }) => {\n      const skipped = json.result.objects_skipped;\n      const tagged = json.result.objects_tagged;\n      if (skipped.length > 0) {\n        addSuccessToast(t('%s items could not be tagged because you donâ€™t have edit permissions to all selected objects.', skipped.length, resourceName));\n      }\n      addSuccessToast(t('Tagged %s %ss', tagged.length, resourceName));\n    }).\n    catch((err) => {\n      addDangerToast(t('Failed to tag items'));\n    });\n    refreshData();\n    onHide();\n    setTags([]);\n  };\n  return _jsx(Modal, { title: t('Bulk tag'), show: show, onHide: () => {\n      setTags([]);\n      onHide();\n    }, footer: _jsxs(\"div\", { children: [\n      _jsx(Button, { buttonStyle: \"secondary\", onClick: onHide, children:\n        t('Cancel') }\n      ),\n      _jsx(Button, { buttonStyle: \"primary\", onClick: onSave, children:\n        t('Save') }\n      )] }\n    ), children:\n    _jsxs(BulkTagModalContainer, { children: [\n      _jsx(\"div\", { className: \"bulk-tag-text\", children:\n        t('You are adding tags to %s %ss', selected.length, resourceName) }\n      ),\n      _jsx(FormLabel, { children: t('tags') }),\n      _jsx(AsyncSelect, { ariaLabel: \"tags\"\n        // @ts-ignore\n        , value: tags, options: loadTags, onHide: onHide\n        // @ts-ignore\n        , onChange: (tags) => setTags(tags), placeholder: t('Select Tags'), mode: \"multiple\" })] }\n    ) }\n  );\n};\nexport default BulkTagModal;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}