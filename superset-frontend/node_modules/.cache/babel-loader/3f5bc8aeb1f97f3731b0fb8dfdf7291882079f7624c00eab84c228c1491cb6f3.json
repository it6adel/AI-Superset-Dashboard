{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled, css } from '@superset-ui/core';\nimport ControlHeader from '../ControlHeader';\nimport Checkbox from '../../../components/Checkbox';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  value: PropTypes.bool,\n  label: PropTypes.string,\n  onChange: PropTypes.func\n};\n\nconst defaultProps = {\n  value: false,\n  onChange: () => {}\n};\n\nconst CheckBoxControlWrapper = styled.div`\n  ${({ theme }) => css`\n    .ControlHeader label {\n      color: ${theme.colors.grayscale.dark1};\n    }\n    span[role='checkbox'] {\n      padding-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\n\nexport default class CheckboxControl extends Component {\n  onChange() {\n    this.props.onChange(!this.props.value);\n  }\n\n  renderCheckbox() {\n    return (\n      _jsx(Checkbox, {\n        onChange: this.onChange.bind(this),\n        checked: !!this.props.value }\n      ));\n\n  }\n\n  render() {\n    if (this.props.label) {\n      return (\n        _jsx(CheckBoxControlWrapper, { children:\n          _jsx(ControlHeader, { ...\n            this.props,\n            leftNode: this.renderCheckbox(),\n            onClick: this.onChange.bind(this) }\n          ) }\n        ));\n\n    }\n    return this.renderCheckbox();\n  }\n}\nCheckboxControl.propTypes = propTypes;\nCheckboxControl.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}