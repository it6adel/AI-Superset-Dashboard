{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { styled, css, useTheme, getColumnLabel, useCSSTextTruncation } from '@superset-ui/core';\nimport { Tag } from 'src/components';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { CustomCloseIcon } from 'src/components/Tags/Tag';\nimport { ellipsisCss } from './styles';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst StyledCrossFilterValue = styled.b`\n  ${({ theme }) => `\n    max-width: ${theme.gridUnit * 25}px;\n  `}\n  ${ellipsisCss}\n`;\nconst StyledCrossFilterColumn = styled('span')`\n  ${({ theme }) => `\n    max-width: ${theme.gridUnit * 25}px;\n    padding-right: ${theme.gridUnit}px;\n  `}\n  ${ellipsisCss}\n`;\nconst StyledTag = styled(Tag)`\n  ${({ theme }) => `\n    border: 1px solid ${theme.colors.grayscale.light3};\n    border-radius: 2px;\n    .anticon-close {\n      vertical-align: middle;\n    }\n  `}\n`;\nconst CrossFilterTag = (props) => {var _filter$column;\n  const { filter, orientation, removeCrossFilter } = props;\n  const theme = useTheme();\n  const [columnRef, columnIsTruncated] = useCSSTextTruncation();\n  const [valueRef, valueIsTruncated] = useCSSTextTruncation();\n  const columnLabel = getColumnLabel((_filter$column = filter.column) != null ? _filter$column : '');\n  return _jsxs(StyledTag, { css: css`\n        ${orientation === FilterBarOrientation.Vertical ?\n    `\n            margin-top: ${theme.gridUnit * 2}px;\n          ` :\n    `\n            margin-left: ${theme.gridUnit * 2}px;\n          `}\n      `, closable: true, onClose: () => removeCrossFilter(filter.emitterId), closeIcon: CustomCloseIcon, children: [\n    _jsx(Tooltip, { title: columnIsTruncated ? columnLabel : null, children:\n      _jsx(StyledCrossFilterColumn, { ref: columnRef, children:\n        columnLabel }\n      ) }\n    ),\n    _jsx(Tooltip, { title: valueIsTruncated ? filter.value : null, children:\n      _jsx(StyledCrossFilterValue, { ref: valueRef, children:\n        filter.value }\n      ) }\n    )] }\n  );\n};\nexport default CrossFilterTag;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}