{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nexport default class ChartMetadata {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  constructor(config) {this.name = void 0;this.canBeAnnotationTypes = void 0;this.canBeAnnotationTypesLookup = void 0;this.credits = void 0;this.description = void 0;this.supportedAnnotationTypes = void 0;this.thumbnail = void 0;this.useLegacyApi = void 0;this.behaviors = void 0;this.datasourceCount = void 0;this.enableNoResults = void 0;this.exampleGallery = void 0;this.tags = void 0;this.category = void 0;this.deprecated = void 0;this.label = void 0;this.labelExplanation = void 0;this.queryObjectCount = void 0;this.parseMethod = void 0;this.suppressContextMenu = void 0;\n    const { name, canBeAnnotationTypes = [], credits = [], description = '', supportedAnnotationTypes = [], thumbnail, useLegacyApi = false, behaviors = [], datasourceCount = 1, enableNoResults = true, exampleGallery = [], tags = [], category = null, deprecated = false, label = null, labelExplanation = null, queryObjectCount = 1, parseMethod = 'json-bigint', suppressContextMenu = false } = config;\n    this.name = name;\n    this.credits = credits;\n    this.description = description;\n    this.canBeAnnotationTypes = canBeAnnotationTypes;\n    this.canBeAnnotationTypesLookup = canBeAnnotationTypes.reduce((prev, type) => {\n      const lookup = prev;\n      lookup[type] = true;\n      return lookup;\n    }, {});\n    this.supportedAnnotationTypes = supportedAnnotationTypes;\n    this.thumbnail = thumbnail;\n    this.useLegacyApi = useLegacyApi;\n    this.behaviors = behaviors;\n    this.datasourceCount = datasourceCount;\n    this.enableNoResults = enableNoResults;\n    this.exampleGallery = exampleGallery;\n    this.tags = tags;\n    this.category = category;\n    this.deprecated = deprecated;\n    this.label = label;\n    this.labelExplanation = labelExplanation;\n    this.queryObjectCount = queryObjectCount;\n    this.parseMethod = parseMethod;\n    this.suppressContextMenu = suppressContextMenu;\n  }\n  canBeAnnotationType(type) {\n    return this.canBeAnnotationTypesLookup[type] || false;\n  }\n  clone() {\n    return new ChartMetadata(this);\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}