{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, useState } from 'react';\nimport { css, t } from '@superset-ui/core';\nimport { Radio } from 'src/components/Radio';\nimport { DrillByType } from '../types';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport const useDisplayModeToggle = () => {\n  const [drillByDisplayMode, setDrillByDisplayMode] = useState(DrillByType.Chart);\n  const displayModeToggle = useMemo(() => _jsx(\"div\", { css: (theme) => css`\n          margin-bottom: ${theme.gridUnit * 6}px;\n        `, children:\n    _jsx(Radio.GroupWrapper, { onChange: ({ target: { value } }) => {\n        setDrillByDisplayMode(value);\n      }, defaultValue: DrillByType.Chart, options: [\n      { label: t('Chart'), value: DrillByType.Chart },\n      { label: t('Table'), value: DrillByType.Table }],\n      optionType: \"button\", buttonStyle: \"outline\" }) }\n  ), []);\n  return { displayModeToggle, drillByDisplayMode };\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}