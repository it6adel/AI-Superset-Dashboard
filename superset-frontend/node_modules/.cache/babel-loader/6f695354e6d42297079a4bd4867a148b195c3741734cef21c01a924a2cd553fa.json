{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { NO_TIME_RANGE, customTimeRangeDecode } from '@superset-ui/core';\nimport { useSelector } from 'react-redux';\nimport { COMMON_RANGE_VALUES_SET, CALENDAR_RANGE_VALUES_SET, CURRENT_RANGE_VALUES_SET } from '.';\nexport const guessFrame = (timeRange) => {\n  if (COMMON_RANGE_VALUES_SET.has(timeRange)) {\n    return 'Common';\n  }\n  if (CALENDAR_RANGE_VALUES_SET.has(timeRange)) {\n    return 'Calendar';\n  }\n  if (CURRENT_RANGE_VALUES_SET.has(timeRange)) {\n    return 'Current';\n  }\n  if (timeRange === NO_TIME_RANGE) {\n    return 'No filter';\n  }\n  if (customTimeRangeDecode(timeRange).matchedFlag) {\n    return 'Custom';\n  }\n  return 'Advanced';\n};\nexport function useDefaultTimeFilter() {var _useSelector;\n  return (_useSelector = useSelector((state) => {var _state$common, _state$common$conf;return state == null ? void 0 : (_state$common = state.common) == null ? void 0 : (_state$common$conf = _state$common.conf) == null ? void 0 : _state$common$conf.DEFAULT_TIME_FILTER;})) != null ? _useSelector : NO_TIME_RANGE;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}