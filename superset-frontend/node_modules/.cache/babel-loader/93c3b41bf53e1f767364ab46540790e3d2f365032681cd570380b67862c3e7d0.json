{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t } from '@superset-ui/core';\nimport { formatSelectOptions, getStandardizedControls } from '@superset-ui/chart-controls';\nimport { ColorBy } from './utils';\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['entity'],\n    [\n    {\n      name: 'country_fieldtype',\n      config: {\n        type: 'SelectControl',\n        label: t('Country Field Type'),\n        default: 'cca2',\n        choices: [\n        ['name', t('Full name')],\n        ['cioc', t('code International Olympic Committee (cioc)')],\n        ['cca2', t('code ISO 3166-1 alpha-2 (cca2)')],\n        ['cca3', t('code ISO 3166-1 alpha-3 (cca3)')]],\n\n        description: t('The country code standard that Superset should expect ' +\n        'to find in the [country] column')\n      }\n    }],\n\n    ['metric'],\n    ['adhoc_filters'],\n    ['row_limit'],\n    ['sort_by_metric']]\n\n  },\n  {\n    label: t('Options'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'show_bubbles',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Bubbles'),\n        default: false,\n        renderTrigger: true,\n        description: t('Whether to display bubbles on top of countries')\n      }\n    }],\n\n    ['secondary_metric'],\n    [\n    {\n      name: 'max_bubble_size',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Max Bubble Size'),\n        default: '25',\n        choices: formatSelectOptions([\n        '5',\n        '10',\n        '15',\n        '25',\n        '50',\n        '75',\n        '100']\n        )\n      }\n    }],\n\n    ['color_picker'],\n    [\n    {\n      name: 'color_by',\n      config: {\n        type: 'RadioButtonControl',\n        label: t('Color by'),\n        default: ColorBy.Metric,\n        options: [\n        [ColorBy.Metric, t('Metric')],\n        [ColorBy.Country, t('Country')]],\n\n        description: t('Choose whether a country should be shaded by the metric, or assigned a color based on a categorical color palette')\n      }\n    }],\n\n    ['linear_color_scheme'],\n    ['color_scheme']]\n\n  },\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [['y_axis_format'], ['currency_format']]\n  }],\n\n  controlOverrides: {\n    entity: {\n      label: t('Country Column'),\n      description: t('3 letter code of the country')\n    },\n    secondary_metric: {\n      label: t('Bubble Size'),\n      description: t('Metric that defines the size of the bubble')\n    },\n    color_picker: {\n      label: t('Bubble Color')\n    },\n    linear_color_scheme: {\n      label: t('Country Color Scheme'),\n      visibility: ({ controls }) => Boolean((controls == null ? void 0 : controls.color_by.value) === ColorBy.Metric)\n    },\n    color_scheme: {\n      label: t('Country Color Scheme'),\n      visibility: ({ controls }) => Boolean((controls == null ? void 0 : controls.color_by.value) === ColorBy.Country)\n    }\n  },\n  formDataOverrides: (formData) => ({\n    ...formData,\n    entity: getStandardizedControls().shiftColumn(),\n    metric: getStandardizedControls().shiftMetric()\n  })\n};\nexport default config;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}