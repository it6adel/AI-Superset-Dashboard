{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Tooltip } from 'src/components/Tooltip';\nimport { styled, t } from '@superset-ui/core';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst TooltipContent = styled.div`\n  ${({ theme }) => `\n    .tooltip-header {\n      font-size: ${theme.typography.sizes.m}px;\n      font-weight: ${theme.typography.weights.bold};\n    }\n\n    .tooltip-description {\n      margin-top: ${theme.gridUnit * 2}px;\n      display: -webkit-box;\n      -webkit-line-clamp: 20;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  `}\n`;\nconst StyledLabelContainer = styled.div`\n  ${({ theme }) => `\n    left: ${theme.gridUnit * 3}px;\n    right: ${theme.gridUnit * 3}px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n  `}\n`;\nconst StyledLabel = styled.span`\n  ${({ theme }) => `\n    left: ${theme.gridUnit * 3}px;\n    right: ${theme.gridUnit * 3}px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n  `}\n`;\nconst StyledDetailWrapper = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  justify-content: start;\n  width: 100%;\n`;\nconst StyledLabelDetail = styled.span`\n  ${({ theme: { typography: { sizes, weights } } }) => `\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: ${sizes.s}px;\n    font-weight: ${weights.light};\n    line-height: 1.6;\n  `}\n`;\nconst isValidValue = (value) => !['null', 'none'].includes(value.toLowerCase()) && value.trim() !== '';\nexport const DatasetSelectLabel = (item) => _jsx(Tooltip, { mouseEnterDelay: 0.2, placement: \"right\", title: _jsxs(TooltipContent, { children: [\n    _jsx(\"div\", { className: \"tooltip-header\", children:\n      item.table_name && isValidValue(item.table_name) ?\n      item.table_name :\n      t('Not defined') }\n    ),\n    _jsxs(\"div\", { className: \"tooltip-description\", children: [\n      _jsxs(\"div\", { children: [\n        t('Database'), \": \", item.database.database_name] }\n      ),\n      _jsxs(\"div\", { children: [\n        t('Schema'), \":\", ' ',\n        item.schema && isValidValue(item.schema) ?\n        item.schema :\n        t('Not defined')] }\n      )] }\n    )] }\n  ), children:\n  _jsxs(StyledLabelContainer, { children: [\n    _jsx(StyledLabel, { children:\n      item.table_name && isValidValue(item.table_name) ?\n      item.table_name :\n      item.database.database_name }\n    ),\n    _jsxs(StyledDetailWrapper, { children: [\n      _jsx(StyledLabelDetail, { children: item.database.database_name }),\n      item.schema && isValidValue(item.schema) && _jsxs(StyledLabelDetail, { children: [\"\\xA0- \", item.schema] })] }\n    )] }\n  ) }\n);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}