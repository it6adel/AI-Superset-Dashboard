{"ast":null,"code":"// eslint-disable-next-line no-restricted-imports\nimport { Tag as AntdTag } from 'antd'; // TODO: Remove antd\nimport { styled, useCSSTextTruncation } from '@superset-ui/core';\nimport { Tooltip } from '../Tooltip';\nimport { CustomCloseIcon } from '../Tags/Tag';\nimport { SELECT_ALL_VALUE } from './utils';\nimport { NoElement } from './styles';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst StyledTag = styled(AntdTag)`\n  & .ant-tag-close-icon {\n    display: inline-flex;\n    align-items: center;\n    margin-left: ${({ theme }) => theme.gridUnit}px;\n  }\n\n  & .tag-content {\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n// TODO: use antd Tag props instead of any. Currently it's causing a typescript error\nconst Tag = (props) => {\n  const [tagRef, tagIsTruncated] = useCSSTextTruncation();\n  return _jsx(Tooltip, { title: tagIsTruncated ? props.children : null, children:\n    _jsx(StyledTag, { closeIcon: props != null && props.closable ? CustomCloseIcon : undefined, ...props, className: \"ant-select-selection-item\", children:\n      _jsx(\"span\", { className: \"tag-content\", ref: tagRef, children:\n        props.children }\n      ) }\n    ) }\n  );\n};\n/**\n * Custom tag renderer\n */\nexport const customTagRender = (props) => {\n  const { label, value } = props;\n  const onPreventMouseDown = (event) => {\n    // if close icon is clicked, stop propagation to avoid opening the dropdown\n    const target = event.target;\n    if (target.tagName === 'svg' ||\n    target.tagName === 'path' ||\n    target.tagName === 'span' &&\n    target.className.includes('ant-tag-close-icon')) {\n      event.stopPropagation();\n    }\n  };\n  if (value !== SELECT_ALL_VALUE) {\n    return _jsx(Tag, { onMouseDown: onPreventMouseDown, ...props, children:\n      label }\n    );\n  }\n  return _jsx(NoElement, {});\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}