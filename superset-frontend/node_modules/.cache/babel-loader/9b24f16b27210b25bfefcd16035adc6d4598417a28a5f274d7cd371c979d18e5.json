{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { createSelector } from 'reselect';\nimport { convertKeysToCamelCase } from '../..';\nconst DEFAULT_WIDTH = 800;\nconst DEFAULT_HEIGHT = 600;\nexport default class ChartProps {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  constructor(config = {}) {this.annotationData = void 0;this.datasource = void 0;this.rawDatasource = void 0;this.initialValues = void 0;this.formData = void 0;this.rawFormData = void 0;this.height = void 0;this.hooks = void 0;this.ownState = void 0;this.filterState = void 0;this.legendState = void 0;this.queriesData = void 0;this.width = void 0;this.behaviors = void 0;this.displaySettings = void 0;this.appSection = void 0;this.isRefreshing = void 0;this.inputRef = void 0;this.inContextMenu = void 0;this.emitCrossFilters = void 0;this.theme = void 0;\n    const { annotationData = {}, datasource = {}, formData = {}, hooks = {}, ownState = {}, filterState = {}, legendState, initialValues = {}, queriesData = [], behaviors = [], displaySettings = {}, width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT, appSection, isRefreshing, inputRef, inContextMenu = false, emitCrossFilters = false, theme } = config;\n    this.width = width;\n    this.height = height;\n    this.annotationData = annotationData;\n    this.datasource = convertKeysToCamelCase(datasource);\n    this.rawDatasource = datasource;\n    this.formData = convertKeysToCamelCase(formData);\n    this.rawFormData = formData;\n    this.hooks = hooks;\n    this.initialValues = initialValues;\n    this.queriesData = queriesData;\n    this.ownState = ownState;\n    this.filterState = filterState;\n    this.legendState = legendState;\n    this.behaviors = behaviors;\n    this.displaySettings = displaySettings;\n    this.appSection = appSection;\n    this.isRefreshing = isRefreshing;\n    this.inputRef = inputRef;\n    this.inContextMenu = inContextMenu;\n    this.emitCrossFilters = emitCrossFilters;\n    this.theme = theme;\n  }\n}\n// eslint-disable-next-line func-name-matching\nChartProps.createSelector = void 0;ChartProps.createSelector = function create() {\n  return createSelector((input) => input.annotationData, (input) => input.datasource, (input) => input.formData, (input) => input.height, (input) => input.hooks, (input) => input.initialValues, (input) => input.queriesData, (input) => input.width, (input) => input.ownState, (input) => input.filterState, (input) => input.legendState, (input) => input.behaviors, (input) => input.displaySettings, (input) => input.appSection, (input) => input.isRefreshing, (input) => input.inputRef, (input) => input.inContextMenu, (input) => input.emitCrossFilters, (input) => input.theme, (annotationData, datasource, formData, height, hooks, initialValues, queriesData, width, ownState, filterState, legendState, behaviors, displaySettings, appSection, isRefreshing, inputRef, inContextMenu, emitCrossFilters, theme) => new ChartProps({\n    annotationData,\n    datasource,\n    formData,\n    height,\n    hooks,\n    initialValues,\n    queriesData,\n    ownState,\n    filterState,\n    legendState,\n    width,\n    behaviors,\n    displaySettings,\n    appSection,\n    isRefreshing,\n    inputRef,\n    inContextMenu,\n    emitCrossFilters,\n    theme\n  }));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}