{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { styled, useTheme, t } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport { PIVOT_COL_ID } from './constants';\nimport HeaderMenu from './HeaderMenu';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst SORT_DIRECTION = [null, 'asc', 'desc'];\nconst HeaderCell = styled.div`\n  display: flex;\n  flex: 1;\n  &[role='button'] {\n    cursor: pointer;\n  }\n`;\nconst HeaderCellSort = styled.div`\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n`;\nconst SortSeqLabel = styled.span`\n  position: absolute;\n  right: 0;\n`;\nconst HeaderAction = styled.div`\n  display: none;\n  position: absolute;\n  right: 0;\n  &.main {\n    flex-direction: row;\n    justify-content: center;\n    width: 100%;\n  }\n  & .antd5-dropdown-trigger {\n    cursor: context-menu;\n    padding: ${({ theme }) => theme.gridUnit * 2}px;\n    background-color: var(--ag-background-color);\n    box-shadow: 0 0 2px var(--ag-chip-border-color);\n    border-radius: 50%;\n    &:hover {\n      box-shadow: 0 0 4px ${({ theme }) => theme.colors.grayscale.light1};\n    }\n  }\n`;\nconst IconPlaceholder = styled.div`\n  position: absolute;\n  top: 0;\n`;\nconst Header = ({ enableFilterButton, enableSorting, displayName, setSort, column, api }) => {\n  const theme = useTheme();\n  const colId = column.getColId();\n  const pinnedLeft = column.isPinnedLeft();\n  const pinnedRight = column.isPinnedRight();\n  const sortOption = useRef(0);\n  const [invisibleColumns, setInvisibleColumns] = useState([]);\n  const [currentSort, setCurrentSort] = useState(null);\n  const [sortIndex, setSortIndex] = useState();\n  const onSort = useCallback((event) => {\n    sortOption.current = (sortOption.current + 1) % SORT_DIRECTION.length;\n    const sort = SORT_DIRECTION[sortOption.current];\n    setSort(sort, event.shiftKey);\n    setCurrentSort(sort);\n  }, [setSort]);\n  const onVisibleChange = useCallback((isVisible) => {\n    if (isVisible) {var _api$getColumns;\n      setInvisibleColumns(((_api$getColumns = api.getColumns()) == null ? void 0 : _api$getColumns.filter((c) => !c.isVisible())) || []);\n    }\n  }, [api]);\n  const onSortChanged = useCallback(() => {var _column$getSort, _column$getSort2;\n    const hasMultiSort = api.getAllDisplayedColumns().findIndex((c) => c.getSortIndex()) !== -1;\n    const updatedSortIndex = column.getSortIndex();\n    sortOption.current = SORT_DIRECTION.indexOf((_column$getSort = column.getSort()) != null ? _column$getSort : null);\n    setCurrentSort((_column$getSort2 = column.getSort()) != null ? _column$getSort2 : null);\n    setSortIndex(hasMultiSort ? updatedSortIndex : null);\n  }, [api, column]);\n  useEffect(() => {\n    api.addEventListener('sortChanged', onSortChanged);\n    return () => {\n      if (api.isDestroyed())\n      return;\n      api.removeEventListener('sortChanged', onSortChanged);\n    };\n  }, [api, onSortChanged]);\n  return _jsxs(_Fragment, { children: [\n    colId !== PIVOT_COL_ID && _jsxs(HeaderCell, { tabIndex: 0, className: \"ag-header-cell-label\", ...(enableSorting && {\n        role: 'button',\n        onClick: onSort,\n        title: t('To enable multiple column sorting, hold down the â‡§ Shift key while clicking the column header.')\n      }), children: [\n      _jsx(\"div\", { className: \"ag-header-cell-text\", children: displayName }),\n      enableSorting && _jsxs(HeaderCellSort, { children: [\n        _jsx(Icons.Sort, { iconSize: \"xxl\" }),\n        _jsxs(IconPlaceholder, { children: [\n          currentSort === 'asc' && _jsx(Icons.SortAsc, { iconSize: \"xxl\", iconColor: theme.colors.primary.base }),\n          currentSort === 'desc' && _jsx(Icons.SortDesc, { iconSize: \"xxl\", iconColor: theme.colors.primary.base })] }\n        ),\n        typeof sortIndex === 'number' && _jsx(SortSeqLabel, { children: sortIndex + 1 })] }\n      )] }\n    ),\n    enableFilterButton && colId && api && _jsx(HeaderAction, { className: `customHeaderAction${colId === PIVOT_COL_ID ? ' main' : ''}`, children:\n      colId && _jsx(HeaderMenu, { colId: colId, api: api, pinnedLeft: pinnedLeft, pinnedRight: pinnedRight, invisibleColumns: invisibleColumns, isMain: colId === PIVOT_COL_ID, onVisibleChange: onVisibleChange }) }\n    )] }\n  );\n};\nexport default Header;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}