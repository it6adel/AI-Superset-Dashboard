{"ast":null,"code":"import { css as _css } from \"@emotion/react\";import _isEmpty from \"lodash/isEmpty\";import _get from \"lodash/get\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// TODO: Remove fa-icon\n/* eslint-disable icons/no-fa-icons-usage */\nimport { Fragment, useState, useEffect, PureComponent } from 'react';\nimport rison from 'rison';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useQueryParams, BooleanParam } from 'use-query-params';\n\nimport { t, styled, css, SupersetClient, getExtensionsRegistry, useTheme } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport Label from 'src/components/Label';\nimport { findPermission } from 'src/utils/findPermission';\nimport { isUserAdmin } from 'src/dashboard/util/permissionUtils';\nimport DatabaseModal from 'src/features/databases/DatabaseModal';\nimport UploadDataModal from 'src/features/databases/UploadDataModel';\nimport { uploadUserPerms } from 'src/views/CRUD/utils';\nimport TelemetryPixel from 'src/components/TelemetryPixel';\nimport LanguagePicker from './LanguagePicker';\nimport { GlobalMenuDataOptions } from './types';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst extensionsRegistry = getExtensionsRegistry();\nconst versionInfoStyles = (theme) => css`\n  padding: ${theme.gridUnit * 1.5}px ${theme.gridUnit * 4}px\n    ${theme.gridUnit * 4}px ${theme.gridUnit * 7}px;\n  color: ${theme.colors.grayscale.base};\n  font-size: ${theme.typography.sizes.xs}px;\n  white-space: nowrap;\n`;\nconst styledDisabled = (theme) => css`\n  color: ${theme.colors.grayscale.light1};\n`;\nconst StyledDiv = styled.div`\n  display: flex;\n  height: 100%;\n  flex-direction: row;\n  justify-content: ${({ align }) => align};\n  align-items: center;\n  margin-right: ${({ theme }) => theme.gridUnit}px;\n`;\nconst StyledMenuItemWithIcon = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst StyledAnchor = styled.a`\n  padding-right: ${({ theme }) => theme.gridUnit}px;\n  padding-left: ${({ theme }) => theme.gridUnit}px;\n`;\nconst tagStyles = (theme) => css`\n  color: ${theme.colors.grayscale.light5};\n`;\nconst styledChildMenu = (theme) => css`\n  &:hover {\n    color: ${theme.colors.primary.base} !important;\n    cursor: pointer !important;\n  }\n`;\nconst { SubMenu } = Menu;\nconst StyledSubMenu = styled(SubMenu)`\n  ${({ theme }) => css`\n    [data-icon='caret-down'] {\n      color: ${theme.colors.grayscale.base};\n      font-size: ${theme.typography.sizes.xxs}px;\n      margin-left: ${theme.gridUnit}px;\n    }\n    &.antd5-menu-submenu-active {\n      .antd5-menu-title-content {\n        color: ${theme.colors.primary.base};\n      }\n    }\n  `}\n`;\nconst RightMenu = ({ align, settings, navbarRight, isFrontendRoute, environmentTag, setQuery }) => {\n  const user = useSelector((state) => state.user);\n  const dashboardId = useSelector((state) => {var _state$dashboardInfo;return (_state$dashboardInfo = state.dashboardInfo) == null ? void 0 : _state$dashboardInfo.id;});\n  const userValues = user || {};\n  const { roles } = userValues;\n  const { CSV_EXTENSIONS, COLUMNAR_EXTENSIONS, EXCEL_EXTENSIONS, ALLOWED_EXTENSIONS, HAS_GSHEETS_INSTALLED } = useSelector((state) => state.common.conf);\n  const [showDatabaseModal, setShowDatabaseModal] = useState(false);\n  const [showCSVUploadModal, setShowCSVUploadModal] = useState(false);\n  const [showExcelUploadModal, setShowExcelUploadModal] = useState(false);\n  const [showColumnarUploadModal, setShowColumnarUploadModal] = useState(false);\n  const [engine, setEngine] = useState('');\n  const canSql = findPermission('can_sqllab', 'Superset', roles);\n  const canDashboard = findPermission('can_write', 'Dashboard', roles);\n  const canChart = findPermission('can_write', 'Chart', roles);\n  const canDatabase = findPermission('can_write', 'Database', roles);\n  const canDataset = findPermission('can_write', 'Dataset', roles);\n  const { canUploadData, canUploadCSV, canUploadColumnar, canUploadExcel } = uploadUserPerms(roles, CSV_EXTENSIONS, COLUMNAR_EXTENSIONS, EXCEL_EXTENSIONS, ALLOWED_EXTENSIONS);\n  const showActionDropdown = canSql || canChart || canDashboard;\n  const [allowUploads, setAllowUploads] = useState(false);\n  const [nonExamplesDBConnected, setNonExamplesDBConnected] = useState(false);\n  const isAdmin = isUserAdmin(user);\n  const showUploads = allowUploads || isAdmin;\n  const dropdownItems = [\n  {\n    label: t('Data'),\n    icon: 'fa-database',\n    childs: [\n    {\n      label: t('Connect database'),\n      name: GlobalMenuDataOptions.DbConnection,\n      perm: canDatabase && !nonExamplesDBConnected\n    },\n    {\n      label: t('Create dataset'),\n      name: GlobalMenuDataOptions.DatasetCreation,\n      url: '/dataset/add/',\n      perm: canDataset && nonExamplesDBConnected\n    },\n    {\n      label: t('Connect Google Sheet'),\n      name: GlobalMenuDataOptions.GoogleSheets,\n      perm: canDatabase && HAS_GSHEETS_INSTALLED\n    },\n    {\n      label: t('Upload CSV to database'),\n      name: GlobalMenuDataOptions.CSVUpload,\n      perm: canUploadCSV && showUploads,\n      disable: isAdmin && !allowUploads\n    },\n    {\n      label: t('Upload Excel to database'),\n      name: GlobalMenuDataOptions.ExcelUpload,\n      perm: canUploadExcel && showUploads,\n      disable: isAdmin && !allowUploads\n    },\n    {\n      label: t('Upload Columnar file to database'),\n      name: GlobalMenuDataOptions.ColumnarUpload,\n      perm: canUploadColumnar && showUploads,\n      disable: isAdmin && !allowUploads\n    }]\n\n  },\n  {\n    label: t('SQL query'),\n    url: '/sqllab?new=true',\n    icon: 'fa-fw fa-search',\n    perm: 'can_sqllab',\n    view: 'Superset'\n  },\n  {\n    label: t('Chart'),\n    url: Number.isInteger(dashboardId) ?\n    `/chart/add?dashboard_id=${dashboardId}` :\n    '/chart/add',\n    icon: 'fa-fw fa-bar-chart',\n    perm: 'can_write',\n    view: 'Chart'\n  },\n  {\n    label: t('Dashboard'),\n    url: '/dashboard/new',\n    icon: 'fa-fw fa-dashboard',\n    perm: 'can_write',\n    view: 'Dashboard'\n  }];\n\n  const checkAllowUploads = () => {\n    const payload = {\n      filters: [\n      { col: 'allow_file_upload', opr: 'upload_is_enabled', value: true }]\n\n    };\n    SupersetClient.get({\n      endpoint: `/api/v1/database/?q=${rison.encode(payload)}`\n    }).then(({ json }) => {var _json$result;\n      // There might be some existing Gsheets and Clickhouse DBs\n      // with allow_file_upload set as True which is not possible from now on\n      const allowedDatabasesWithFileUpload = (json == null ? void 0 : (_json$result = json.result) == null ? void 0 : _json$result.filter((database) => {var _database$engine_info;return database == null ? void 0 : (_database$engine_info = database.engine_information) == null ? void 0 : _database$engine_info.supports_file_upload;})) || [];\n      setAllowUploads((allowedDatabasesWithFileUpload == null ? void 0 : allowedDatabasesWithFileUpload.length) >= 1);\n    });\n  };\n  const existsNonExamplesDatabases = () => {\n    const payload = {\n      filters: [{ col: 'database_name', opr: 'neq', value: 'examples' }]\n    };\n    SupersetClient.get({\n      endpoint: `/api/v1/database/?q=${rison.encode(payload)}`\n    }).then(({ json }) => {\n      setNonExamplesDBConnected(json.count >= 1);\n    });\n  };\n  useEffect(() => {\n    if (canUploadData) {\n      checkAllowUploads();\n    }\n  }, [canUploadData]);\n  useEffect(() => {\n    if (canDatabase || canDataset) {\n      existsNonExamplesDatabases();\n    }\n  }, [canDatabase, canDataset]);\n  const menuIcon = (menu) => _jsx(\"i\", { className: `fa ${menu.icon}` });\n  const handleMenuSelection = (itemChose) => {\n    if (itemChose.key === GlobalMenuDataOptions.DbConnection) {\n      setShowDatabaseModal(true);\n    } else\n    if (itemChose.key === GlobalMenuDataOptions.GoogleSheets) {\n      setShowDatabaseModal(true);\n      setEngine('Google Sheets');\n    } else\n    if (itemChose.key === GlobalMenuDataOptions.CSVUpload) {\n      setShowCSVUploadModal(true);\n    } else\n    if (itemChose.key === GlobalMenuDataOptions.ExcelUpload) {\n      setShowExcelUploadModal(true);\n    } else\n    if (itemChose.key === GlobalMenuDataOptions.ColumnarUpload) {\n      setShowColumnarUploadModal(true);\n    }\n  };\n  const handleOnHideModal = () => {\n    setEngine('');\n    setShowDatabaseModal(false);\n  };\n  const tooltipText = t(\"Enable 'Allow file uploads to database' in any database's settings\");\n  const buildMenuItem = (item) => item.disable ? _jsx(Menu.Item, { css: styledDisabled, disabled: true, children:\n    _jsx(Tooltip, { placement: \"top\", title: tooltipText, children:\n      item.label }\n    ) }, item.name\n  ) : _jsx(Menu.Item, { css: styledChildMenu, children:\n    item.url ? _jsxs(\"a\", { href: item.url, children: [\" \", item.label, \" \"] }) : item.label }, item.name\n  );\n  const onMenuOpen = (openKeys) => {\n    // We should query the API only if opening Data submenus\n    // because the rest don't need this information. Not using\n    // \"Data\" directly since we might change the label later on?\n    if (openKeys.length > 1 &&\n    !_isEmpty(openKeys == null ? void 0 : openKeys.filter((key) => {var _dropdownItems$;return key.includes(`sub2_${dropdownItems == null ? void 0 : (_dropdownItems$ = dropdownItems[0]) == null ? void 0 : _dropdownItems$.label}`);}))) {\n      if (canUploadData)\n      checkAllowUploads();\n      if (canDatabase || canDataset)\n      existsNonExamplesDatabases();\n    }\n    return null;\n  };\n  const RightMenuExtension = extensionsRegistry.get('navbar.right');\n  const RightMenuItemIconExtension = extensionsRegistry.get('navbar.right-menu.item.icon');\n  const handleDatabaseAdd = () => setQuery({ databaseAdded: true });\n  const handleLogout = () => {\n    localStorage.removeItem('redux');\n  };\n  const theme = useTheme();\n  return _jsxs(StyledDiv, { align: align, children: [\n    canDatabase && _jsx(DatabaseModal, { onHide: handleOnHideModal, show: showDatabaseModal, dbEngine: engine, onDatabaseAdd: handleDatabaseAdd }),\n    canUploadCSV && _jsx(UploadDataModal, { onHide: () => setShowCSVUploadModal(false), show: showCSVUploadModal, allowedExtensions: CSV_EXTENSIONS, type: \"csv\" }),\n    canUploadExcel && _jsx(UploadDataModal, { onHide: () => setShowExcelUploadModal(false), show: showExcelUploadModal, allowedExtensions: EXCEL_EXTENSIONS, type: \"excel\" }),\n    canUploadColumnar && _jsx(UploadDataModal, { onHide: () => setShowColumnarUploadModal(false), show: showColumnarUploadModal, allowedExtensions: COLUMNAR_EXTENSIONS, type: \"columnar\" }),\n    (environmentTag == null ? void 0 : environmentTag.text) && _jsx(Label, { css: /*#__PURE__*/_css({ borderRadius: `${theme.gridUnit * 125}px` }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:RightMenu;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), color: /^#(?:[0-9a-f]{3}){1,2}$/i.test(environmentTag.color) ?\n      environmentTag.color :\n      _get(theme.colors, environmentTag.color), children:\n      _jsx(\"span\", { css: tagStyles, children: environmentTag.text }) }\n    ),\n    _jsxs(Menu, { css: css`\n          display: flex;\n          flex-direction: row;\n        `, selectable: false, mode: \"horizontal\", onClick: handleMenuSelection, onOpenChange: onMenuOpen, disabledOverflow: true, children: [\n      RightMenuExtension && _jsx(RightMenuExtension, {}),\n      !navbarRight.user_is_anonymous && showActionDropdown && _jsx(StyledSubMenu, { title: _jsx(Icons.PlusOutlined, { iconColor: theme.colors.primary.dark1 }), icon: _jsx(Icons.CaretDownOutlined, { iconSize: \"xs\" }), children:\n        dropdownItems == null ? void 0 : dropdownItems.map == null ? void 0 : dropdownItems.map((menu) => {var _menu$childs;\n          const canShowChild = (_menu$childs = menu.childs) == null ? void 0 : _menu$childs.some((item) => typeof item === 'object' && !!item.perm);\n          if (menu.childs) {\n            if (canShowChild) {var _menu$childs2;\n              return _jsx(StyledSubMenu, { className: \"data-menu\", title: menu.label, icon: menuIcon(menu), children:\n                menu == null ? void 0 : (_menu$childs2 = menu.childs) == null ? void 0 : _menu$childs2.map == null ? void 0 : _menu$childs2.map((item, idx) => typeof item !== 'string' && item.name && item.perm ? _jsxs(Fragment, { children: [\n                  idx === 3 && _jsx(Menu.Divider, {}),\n                  buildMenuItem(item)] }, item.name\n                ) : null) }, `sub2_${menu.label}`\n              );\n            }\n            if (!menu.url) {\n              return null;\n            }\n          }\n          return findPermission(menu.perm, menu.view, roles) && _jsx(Menu.Item, { children:\n            isFrontendRoute(menu.url) ? _jsxs(Link, { to: menu.url || '', children: [\n              _jsx(\"i\", { className: `fa ${menu.icon}` }), ' ',\n              menu.label] }\n            ) : _jsxs(\"a\", { href: menu.url, children: [\n              _jsx(\"i\", { className: `fa ${menu.icon}` }), ' ',\n              menu.label] }\n            ) }, menu.label\n          );\n        }) }, \"sub1\"\n      ),\n      _jsxs(StyledSubMenu, { title: t('Settings'), icon: _jsx(Icons.CaretDownOutlined, { iconSize: \"xs\" }), children: [\n        settings == null ? void 0 : settings.map == null ? void 0 : settings.map((section, index) => {var _section$childs;return [\n          _jsx(Menu.ItemGroup, { title: section.label, children:\n            section == null ? void 0 : (_section$childs = section.childs) == null ? void 0 : _section$childs.map == null ? void 0 : _section$childs.map((child) => {\n              if (typeof child !== 'string') {\n                const menuItemDisplay = RightMenuItemIconExtension ? _jsxs(StyledMenuItemWithIcon, { children: [\n                  child.label,\n                  _jsx(RightMenuItemIconExtension, { menuChild: child })] }\n                ) : child.label;\n                return _jsx(Menu.Item, { children:\n                  isFrontendRoute(child.url) ? _jsx(Link, { to: child.url || '', children: menuItemDisplay }) : _jsx(\"a\", { href: child.url, children: menuItemDisplay }) }, `${child.label}`\n                );\n              }\n              return null;\n            }) }, `${section.label}`\n          ),\n          index < settings.length - 1 && _jsx(Menu.Divider, {}, `divider_${index}`)];}\n        ),\n\n        !navbarRight.user_is_anonymous && [\n        _jsx(Menu.Divider, {}, \"user-divider\"),\n        _jsxs(Menu.ItemGroup, { title: t('User'), children: [\n          navbarRight.user_info_url && _jsx(Menu.Item, { children:\n            _jsx(\"a\", { href: navbarRight.user_info_url, children: t('Info') }) }, \"info\"\n          ),\n          _jsx(Menu.Item, { onClick: handleLogout, children:\n            _jsx(\"a\", { href: navbarRight.user_logout_url, children: t('Logout') }) }, \"logout\"\n          )] }, \"user-section\"\n        )],\n\n        (navbarRight.version_string || navbarRight.version_sha) && [\n        _jsx(Menu.Divider, {}, \"version-info-divider\"),\n        _jsx(Menu.ItemGroup, { title: t('About'), children:\n          _jsxs(\"div\", { className: \"about-section\", children: [\n            navbarRight.show_watermark && _jsx(\"div\", { css: versionInfoStyles, children:\n              t('Powered by Apache Superset') }\n            ),\n            navbarRight.version_string && _jsxs(\"div\", { css: versionInfoStyles, children: [\n              t('Version'), \": \", navbarRight.version_string] }\n            ),\n            navbarRight.version_sha && _jsxs(\"div\", { css: versionInfoStyles, children: [\n              t('SHA'), \": \", navbarRight.version_sha] }\n            ),\n            navbarRight.build_number && _jsxs(\"div\", { css: versionInfoStyles, children: [\n              t('Build'), \": \", navbarRight.build_number] }\n            )] }\n          ) }, \"about-section\"\n        )]] }, \"sub3_settings\"\n\n      ),\n      navbarRight.show_language_picker && _jsx(LanguagePicker, { locale: navbarRight.locale, languages: navbarRight.languages })] }\n    ),\n    navbarRight.documentation_url && _jsxs(_Fragment, { children: [\n      _jsx(StyledAnchor, { href: navbarRight.documentation_url, target: \"_blank\", rel: \"noreferrer\", title: navbarRight.documentation_text || t('Documentation'), children:\n        navbarRight.documentation_icon ? _jsx(\"i\", { className: navbarRight.documentation_icon }) : _jsx(\"i\", { className: \"fa fa-question\" }) }\n      ),\n      _jsx(\"span\", { children: \"\\xA0\" })] }\n    ),\n    navbarRight.bug_report_url && _jsxs(_Fragment, { children: [\n      _jsx(StyledAnchor, { href: navbarRight.bug_report_url, target: \"_blank\", rel: \"noreferrer\", title: navbarRight.bug_report_text || t('Report a bug'), children:\n        navbarRight.bug_report_icon ? _jsx(\"i\", { className: navbarRight.bug_report_icon }) : _jsx(\"i\", { className: \"fa fa-bug\" }) }\n      ),\n      _jsx(\"span\", { children: \"\\xA0\" })] }\n    ),\n    navbarRight.user_is_anonymous && _jsxs(StyledAnchor, { href: navbarRight.user_login_url, children: [\n      _jsx(\"i\", { className: \"fa fa-fw fa-sign-in\" }),\n      t('Login')] }\n    ),\n    _jsx(TelemetryPixel, { version: navbarRight.version_string, sha: navbarRight.version_sha, build: navbarRight.build_number })] }\n  );\n};\nconst RightMenuWithQueryWrapper = (props) => {\n  const [, setQuery] = useQueryParams({\n    databaseAdded: BooleanParam,\n    datasetAdded: BooleanParam\n  });\n  return _jsx(RightMenu, { setQuery: setQuery, ...props });\n};\n// Query param manipulation requires that, during the setup, the\n// QueryParamProvider is present and configured.\n// Superset still has multiple entry points, and not all of them have\n// the same setup, and critically, not all of them have the QueryParamProvider.\n// This wrapper ensures the RightMenu renders regardless of the provider being present.\nclass RightMenuErrorWrapper extends PureComponent {constructor(...args) {super(...args);this.\n    state = {\n      hasError: false\n    };this.\n\n\n\n    noop = () => {};}static getDerivedStateFromError() {return { hasError: true };}\n  render() {\n    if (this.state.hasError) {\n      return _jsx(RightMenu, { setQuery: this.noop, ...this.props });\n    }\n    return this.props.children;\n  }\n}\nconst RightMenuWrapper = (props) => _jsx(RightMenuErrorWrapper, { ...props, children:\n  _jsx(RightMenuWithQueryWrapper, { ...props }) }\n);\nexport default RightMenuWrapper;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}