{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * Get the available versions of WFS and WMS.\n *\n * @returns the versions\n */\nexport const getServiceVersions = () => ({\n  WMS: ['1.3.0', '1.1.1'],\n  WFS: ['2.0.2', '2.0.0', '1.1.0']\n});\n/**\n * Checks if a given version is below the comparer version.\n *\n * @param version The version to check.\n * @param below The version to compare to.\n * @param serviceType The service type.\n * @returns True, if the version is below comparer version. False, otherwise.\n */\nexport const isVersionBelow = (version, below, serviceType) => {\n  const versions = getServiceVersions()[serviceType];\n  // versions is ordered from newest to oldest, so we invert the order\n  // to improve the readability of this function.\n  versions.reverse();\n  const versionIdx = versions.indexOf(version);\n  if (versionIdx === -1) {\n    // TODO: consider throwing an error instead\n    return false;\n  }\n  const belowIdx = versions.indexOf(below);\n  if (belowIdx === -1) {\n    // TODO: consider throwing an error instead\n    return false;\n  }\n  return versionIdx < belowIdx;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}