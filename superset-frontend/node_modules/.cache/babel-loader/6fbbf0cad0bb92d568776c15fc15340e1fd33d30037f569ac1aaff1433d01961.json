{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { css, styled, useTheme } from '@superset-ui/core';\nimport { ScopingTreePanel } from './ScopingTreePanel';\nimport { ChartsScopingListPanel } from './ChartsScopingListPanel';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst ModalContentContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    height: 100%;\n    & > div {\n      padding: ${theme.gridUnit * 4}px;\n    }\n  `}\n`;\nexport const ScopingModalContent = ({ chartId, currentScope, onScopeUpdate, onSelectChange, chartConfigs, setCurrentChartId, removeCustomScope, addNewCustomScope }) => {\n  const theme = useTheme();\n  return _jsxs(ModalContentContainer, { children: [\n    _jsx(\"div\", { css: css`\n          width: 35%;\n          border-right: 1px solid ${theme.colors.grayscale.light2};\n        `, children:\n      _jsx(ChartsScopingListPanel, { setCurrentChartId: setCurrentChartId, activeChartId: chartId, chartConfigs: chartConfigs, removeCustomScope: removeCustomScope, addNewCustomScope: addNewCustomScope }) }\n    ),\n    _jsx(ScopingTreePanel, { chartId: chartId, currentScope: currentScope, onScopeUpdate: onScopeUpdate, onSelectChange: onSelectChange, chartConfigs: chartConfigs })] }\n  );\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}