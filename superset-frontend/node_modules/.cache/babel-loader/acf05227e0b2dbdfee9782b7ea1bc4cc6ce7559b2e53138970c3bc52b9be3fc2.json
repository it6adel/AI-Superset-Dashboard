{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { legacyValidateInteger, legacyValidateNumber, t } from '@superset-ui/core';\nimport { displayTimeRelatedControls } from '../utils';\nexport const FORECAST_DEFAULT_DATA = {\n  forecastEnabled: false,\n  forecastInterval: 0.8,\n  forecastPeriods: 10,\n  forecastSeasonalityDaily: null,\n  forecastSeasonalityWeekly: null,\n  forecastSeasonalityYearly: null\n};\nexport const forecastIntervalControls = {\n  label: t('Predictive Analytics'),\n  expanded: false,\n  visibility: displayTimeRelatedControls,\n  controlSetRows: [\n  [\n  {\n    name: 'forecastEnabled',\n    config: {\n      type: 'CheckboxControl',\n      label: t('Enable forecast'),\n      renderTrigger: false,\n      default: FORECAST_DEFAULT_DATA.forecastEnabled,\n      description: t('Enable forecasting')\n    }\n  }],\n\n  [\n  {\n    name: 'forecastPeriods',\n    config: {\n      type: 'TextControl',\n      label: t('Forecast periods'),\n      validators: [legacyValidateInteger],\n      default: FORECAST_DEFAULT_DATA.forecastPeriods,\n      description: t('How many periods into the future do we want to predict')\n    }\n  }],\n\n  [\n  {\n    name: 'forecastInterval',\n    config: {\n      type: 'TextControl',\n      label: t('Confidence interval'),\n      validators: [legacyValidateNumber],\n      default: FORECAST_DEFAULT_DATA.forecastInterval,\n      description: t('Width of the confidence interval. Should be between 0 and 1')\n    }\n  }],\n\n  [\n  {\n    name: 'forecastSeasonalityYearly',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Yearly seasonality'),\n      choices: [\n      [null, t('default')],\n      [true, t('Yes')],\n      [false, t('No')]],\n\n      default: FORECAST_DEFAULT_DATA.forecastSeasonalityYearly,\n      description: t('Should yearly seasonality be applied. An integer value will specify Fourier order of seasonality.')\n    }\n  }],\n\n  [\n  {\n    name: 'forecastSeasonalityWeekly',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Weekly seasonality'),\n      choices: [\n      [null, t('default')],\n      [true, t('Yes')],\n      [false, t('No')]],\n\n      default: FORECAST_DEFAULT_DATA.forecastSeasonalityWeekly,\n      description: t('Should weekly seasonality be applied. An integer value will specify Fourier order of seasonality.')\n    }\n  }],\n\n  [\n  {\n    name: 'forecastSeasonalityDaily',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Daily seasonality'),\n      choices: [\n      [null, t('default')],\n      [true, t('Yes')],\n      [false, t('No')]],\n\n      default: FORECAST_DEFAULT_DATA.forecastSeasonalityDaily,\n      description: t('Should daily seasonality be applied. An integer value will specify Fourier order of seasonality.')\n    }\n  }]]\n\n\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}