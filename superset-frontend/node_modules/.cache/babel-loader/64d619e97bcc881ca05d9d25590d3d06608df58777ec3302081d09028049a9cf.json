{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { createRef, useState } from 'react';\nimport { styled, useTheme } from '@superset-ui/core';\nimport OlMap from 'ol/Map';\nimport OlChartMap from './components/OlChartMap';\nimport 'ol/ol.css';\n// The following Styles component is a <div> element, which has been styled using Emotion\n// For docs, visit https://emotion.sh/docs/styled\n// Theming variables are provided for your use via a ThemeProvider\n// imported from @superset-ui/core. For variables available, please visit\n// https://github.com/apache-superset/superset-ui/blob/master/packages/superset-ui-core/src/style/index.ts\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";const Styles = styled.div`\n  height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n`;\nexport default function CartodiagramPlugin(props) {\n  const { height, width } = props;\n  const theme = useTheme();\n  const rootElem = /*#__PURE__*/createRef();\n  const [mapId] = useState(`cartodiagram-plugin-${Math.floor(Math.random() * 1000000)}`);\n  const [olMap] = useState(new OlMap({}));\n  return _jsx(Styles, { ref: rootElem, height: height, width: width, theme: theme, children:\n    _jsx(OlChartMap, { mapId: mapId, olMap: olMap, ...props }) }\n  );\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}