{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { css, styled } from '../../style';\nimport { t } from '../../translation';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst MESSAGE_STYLES = { maxWidth: 800 };\nconst MIN_WIDTH_FOR_BODY = 250;\nconst Container = styled.div`\n  ${({ theme, width, height }) => css`\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n    height: ${height}px;\n    width: ${width}px;\n    padding: ${theme.gridUnit * 4}px;\n\n    & .no-results-title {\n      font-size: ${theme.typography.sizes.l}px;\n      font-weight: ${theme.typography.weights.bold};\n      padding-bottom: ${theme.gridUnit * 2};\n    }\n\n    & .no-results-body {\n      font-size: ${theme.typography.sizes.m}px;\n    }\n  `}\n`;\nconst NoResultsComponent = ({ className, height, id, width }) => {\n  // render the body if the width is auto/100% or greater than 250 pixels\n  const shouldRenderBody = typeof width === 'string' || width > MIN_WIDTH_FOR_BODY;\n  const BODY_STRING = t('No results were returned for this query. If you expected results to be returned, ensure any filters are configured properly and the datasource contains data for the selected time range.');\n  return _jsx(Container, { height: height, width: width, className: className, id: id, title: shouldRenderBody ? undefined : BODY_STRING, children:\n    _jsxs(\"div\", { style: MESSAGE_STYLES, children: [\n      _jsx(\"div\", { className: \"no-results-title\", children: t('No Results') }),\n      shouldRenderBody && _jsx(\"div\", { className: \"no-results-body\", children: BODY_STRING })] }\n    ) }\n  );\n};\nexport default NoResultsComponent;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}