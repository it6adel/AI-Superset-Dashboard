{"ast":null,"code":"import _transform from \"lodash/transform\";import _groupBy2 from \"lodash/groupBy\";\nfunction getMetricValue(datum, metric) {\n  return typeof datum[metric] === 'number' ? datum[metric] : 0;\n}\nexport function treeBuilder(data, groupBy, metric, secondaryMetric) {\n  const [curGroupBy, ...restGroupby] = groupBy;\n  const curData = _groupBy2(data, curGroupBy);\n  return _transform(curData, (result, value, key) => {\n    const name = curData[key][0][curGroupBy];\n    if (!restGroupby.length) {\n      (value != null ? value : []).forEach((datum) => {\n        const metricValue = getMetricValue(datum, metric);\n        const secondaryValue = secondaryMetric ?\n        getMetricValue(datum, secondaryMetric) :\n        metricValue;\n        const item = {\n          name,\n          value: metricValue,\n          secondaryValue,\n          groupBy: curGroupBy\n        };\n        result.push(item);\n      });\n    } else\n    {\n      const children = treeBuilder(value, restGroupby, metric, secondaryMetric);\n      const metricValue = children.reduce((prev, cur) => prev + cur.value, 0);\n      const secondaryValue = secondaryMetric ?\n      children.reduce((prev, cur) => prev + cur.secondaryValue, 0) :\n      metricValue;\n      result.push({\n        name,\n        children,\n        value: metricValue,\n        secondaryValue,\n        groupBy: curGroupBy\n      });\n    }\n  }, []);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}