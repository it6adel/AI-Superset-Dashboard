{"ast":null,"code":"var _headerFontSize$confi, _subheaderFontSize$co; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { headerFontSize, subheaderFontSize } from '../sharedControls';\nconst headerFontSizes = [16, 20, 30, 48, 60];\nconst comparisonFontSizes = [16, 20, 26, 32, 40];\nconst headerProportionValues = (_headerFontSize$confi = headerFontSize.config.options.map((option) => option.value)) != null ? _headerFontSize$confi : [];\nconst subheaderProportionValues = (_subheaderFontSize$co = subheaderFontSize.config.options.map((option) => option.value)) != null ? _subheaderFontSize$co : [];\nconst getFontSizeMapping = (proportionValues, actualSizes) => proportionValues.reduce((acc, value, index) => {var _actualSizes$index;\n  acc[value] = (_actualSizes$index = actualSizes[index]) != null ? _actualSizes$index : actualSizes[actualSizes.length - 1];\n  return acc;\n}, {});\nconst headerFontSizesMapping = getFontSizeMapping(headerProportionValues, headerFontSizes);\nconst comparisonFontSizesMapping = getFontSizeMapping(subheaderProportionValues, comparisonFontSizes);\nexport const getHeaderFontSize = (proportionValue) => {var _headerFontSizesMappi;return (_headerFontSizesMappi = headerFontSizesMapping[proportionValue]) != null ? _headerFontSizesMappi :\n  headerFontSizes[headerFontSizes.length - 1];};\nexport const getComparisonFontSize = (proportionValue) => {var _comparisonFontSizesM;return (_comparisonFontSizesM = comparisonFontSizesMapping[proportionValue]) != null ? _comparisonFontSizesM :\n  comparisonFontSizes[comparisonFontSizes.length - 1];};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}