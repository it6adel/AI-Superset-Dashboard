{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport SupersetClientClass from './SupersetClientClass';\n// this is local to this file, don't expose it\nlet singletonClient;\nfunction getInstance() {\n  if (!singletonClient) {\n    throw new Error('You must call SupersetClient.configure(...) before calling other methods');\n  }\n  return singletonClient;\n}\nconst SupersetClient = {\n  configure: (config) => {\n    singletonClient = new SupersetClientClass(config);\n    return SupersetClient;\n  },\n  reset: () => {\n    singletonClient = undefined;\n  },\n  delete: (request) => getInstance().delete(request),\n  get: (request) => getInstance().get(request),\n  init: (force) => getInstance().init(force),\n  isAuthenticated: () => getInstance().isAuthenticated(),\n  getGuestToken: () => getInstance().getGuestToken(),\n  post: (request) => getInstance().post(request),\n  postForm: (...args) => getInstance().postForm(...args),\n  put: (request) => getInstance().put(request),\n  reAuthenticate: () => getInstance().reAuthenticate(),\n  request: (request) => getInstance().request(request)\n};\nexport default SupersetClient;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}