{"ast":null,"code":"import { jsx as _jsx } from \"@emotion/react/jsx-runtime\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * Renders a telemetry pixel component to capture anonymous, aggregated telemetry via Scarf.\n * This can be disabled by setting the SCARF_ANALYTICS environment variable to false.\n *\n * @component\n * @param {TelemetryPixelProps} props - The props for the TelemetryPixel component.\n * @param {string} props.version - The version of  Superset that's currently in use.\n * @param {string} props.sha - The SHA of Superset that's currently in use.\n * @param {string} props.build - The build of Superset that's currently in use.\n * @returns {JSX.Element | null} The rendered TelemetryPixel component.\n */\nconst PIXEL_ID = '0d3461e1-abb1-4691-a0aa-5ed50de66af0';\nconst TelemetryPixel = ({ version = 'unknownVersion', sha = 'unknownSHA', build = 'unknownBuild' }) => {\n  const pixelPath = `https://apachesuperset.gateway.scarf.sh/pixel/${PIXEL_ID}/${version}/${sha}/${build}`;\n  return process.env.SCARF_ANALYTICS === 'false' ? null : _jsx(\"img\", {\n    // @ts-ignore\n    referrerPolicy: \"no-referrer-when-downgrade\", src: pixelPath, width: 0, height: 0, alt: \"\" });\n};\nexport default TelemetryPixel;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}