{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { createRef, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'src/components/Button';\nimport { styled, t } from '@superset-ui/core';\n\nimport ErrorBoundary from 'src/components/ErrorBoundary';\nimport Tabs from 'src/components/Tabs';\nimport adhocMetricType from 'src/explore/components/controls/MetricControl/adhocMetricType';\nimport AdhocFilter from 'src/explore/components/controls/FilterControl/AdhocFilter';\nimport AdhocFilterEditPopoverSimpleTabContent from 'src/explore/components/controls/FilterControl/AdhocFilterEditPopoverSimpleTabContent';\nimport AdhocFilterEditPopoverSqlTabContent from 'src/explore/components/controls/FilterControl/AdhocFilterEditPopoverSqlTabContent';\nimport columnType from 'src/explore/components/controls/FilterControl/columnType';\nimport {\n  POPOVER_INITIAL_HEIGHT,\n  POPOVER_INITIAL_WIDTH } from\n'src/explore/constants';\nimport { ExpressionTypes } from '../types';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  adhocFilter: PropTypes.instanceOf(AdhocFilter).isRequired,\n  onChange: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onResize: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n    columnType,\n    PropTypes.shape({ saved_metric_name: PropTypes.string.isRequired }),\n    adhocMetricType]\n    )\n  ).isRequired,\n  datasource: PropTypes.object,\n  partitionColumn: PropTypes.string,\n  theme: PropTypes.object,\n  sections: PropTypes.arrayOf(PropTypes.string),\n  operators: PropTypes.arrayOf(PropTypes.string),\n  requireSave: PropTypes.bool\n};\n\nconst ResizeIcon = styled.i`\n  margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nconst FilterPopoverContentContainer = styled.div`\n  .adhoc-filter-edit-tabs > .nav-tabs {\n    margin-bottom: ${({ theme }) => theme.gridUnit * 2}px;\n\n    & > li > a {\n      padding: ${({ theme }) => theme.gridUnit}px;\n    }\n  }\n\n  #filter-edit-popover {\n    max-width: none;\n  }\n\n  .filter-edit-clause-info {\n    font-size: ${({ theme }) => theme.typography.sizes.xs}px;\n  }\n\n  .filter-edit-clause-section {\n    display: flex;\n    flex-direction: row;\n    gap: ${({ theme }) => theme.gridUnit * 5}px;\n  }\n\n  .adhoc-filter-simple-column-dropdown {\n    margin-top: ${({ theme }) => theme.gridUnit * 5}px;\n  }\n`;\n\nconst FilterActionsContainer = styled.div`\n  margin-top: ${({ theme }) => theme.gridUnit * 2}px;\n`;\n\nexport default class AdhocFilterEditPopover extends Component {\n  constructor(props) {var _this$props, _this$props$adhocFilt;\n    super(props);\n    this.onSave = this.onSave.bind(this);\n    this.onDragDown = this.onDragDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onAdhocFilterChange = this.onAdhocFilterChange.bind(this);\n    this.setSimpleTabIsValid = this.setSimpleTabIsValid.bind(this);\n    this.adjustHeight = this.adjustHeight.bind(this);\n    this.onTabChange = this.onTabChange.bind(this);\n\n    this.state = {\n      adhocFilter: this.props.adhocFilter,\n      width: POPOVER_INITIAL_WIDTH,\n      height: POPOVER_INITIAL_HEIGHT,\n      activeKey: ((_this$props = this.props) == null ? void 0 : (_this$props$adhocFilt = _this$props.adhocFilter) == null ? void 0 : _this$props$adhocFilt.expressionType) || 'SIMPLE',\n      isSimpleTabValid: true\n    };\n\n    this.popoverContentRef = /*#__PURE__*/createRef();\n  }\n\n  componentDidMount() {\n    document.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mouseup', this.onMouseUp);\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  onAdhocFilterChange(adhocFilter) {\n    this.setState({ adhocFilter });\n  }\n\n  setSimpleTabIsValid(isValid) {\n    this.setState({ isSimpleTabValid: isValid });\n  }\n\n  onSave() {\n    this.props.onChange(this.state.adhocFilter);\n    this.props.onClose();\n  }\n\n  onDragDown(e) {\n    this.dragStartX = e.clientX;\n    this.dragStartY = e.clientY;\n    this.dragStartWidth = this.state.width;\n    this.dragStartHeight = this.state.height;\n    document.addEventListener('mousemove', this.onMouseMove);\n  }\n\n  onMouseMove(e) {\n    this.props.onResize();\n    this.setState({\n      width: Math.max(\n        this.dragStartWidth + (e.clientX - this.dragStartX),\n        POPOVER_INITIAL_WIDTH\n      ),\n      height: Math.max(\n        this.dragStartHeight + (e.clientY - this.dragStartY),\n        POPOVER_INITIAL_HEIGHT\n      )\n    });\n  }\n\n  onMouseUp() {\n    document.removeEventListener('mousemove', this.onMouseMove);\n  }\n\n  onTabChange(activeKey) {\n    this.setState({\n      activeKey\n    });\n  }\n\n  adjustHeight(heightDifference) {\n    this.setState((state) => ({ height: state.height + heightDifference }));\n  }\n\n  render() {\n    const {\n      adhocFilter: propsAdhocFilter,\n      options,\n      onChange,\n      onClose,\n      onResize,\n      datasource,\n      partitionColumn,\n      theme,\n      operators,\n      requireSave,\n      ...popoverProps\n    } = this.props;\n\n    const { adhocFilter } = this.state;\n    const stateIsValid = adhocFilter.isValid();\n    const hasUnsavedChanges =\n    requireSave || !adhocFilter.equals(propsAdhocFilter);\n\n    return (\n      _jsxs(FilterPopoverContentContainer, {\n        id: \"filter-edit-popover\", ...\n        popoverProps,\n\n        ref: this.popoverContentRef, children: [\n\n        _jsxs(Tabs, {\n          id: \"adhoc-filter-edit-tabs\",\n          defaultActiveKey: adhocFilter.expressionType,\n          className: \"adhoc-filter-edit-tabs\",\n\n          style: { minHeight: this.state.height, width: this.state.width },\n          allowOverflow: true,\n          onChange: this.onTabChange, children: [\n\n          _jsx(Tabs.TabPane, {\n            className: \"adhoc-filter-edit-tab\",\n\n            tab: t('Simple'), children:\n\n            _jsx(ErrorBoundary, { children:\n              _jsx(AdhocFilterEditPopoverSimpleTabContent, {\n                operators: operators,\n                adhocFilter: this.state.adhocFilter,\n                onChange: this.onAdhocFilterChange,\n                options: options,\n                datasource: datasource,\n                onHeightChange: this.adjustHeight,\n                partitionColumn: partitionColumn,\n                popoverRef: this.popoverContentRef.current,\n                validHandler: this.setSimpleTabIsValid }\n              ) }\n            ) }, ExpressionTypes.Simple\n          ),\n          _jsx(Tabs.TabPane, {\n            className: \"adhoc-filter-edit-tab\",\n\n            tab: t('Custom SQL'), children:\n\n            _jsx(ErrorBoundary, { children:\n              _jsx(AdhocFilterEditPopoverSqlTabContent, {\n                adhocFilter: this.state.adhocFilter,\n                onChange: this.onAdhocFilterChange,\n                options: this.props.options,\n                height: this.state.height,\n                activeKey: this.state.activeKey }\n              ) }\n            ) }, ExpressionTypes.Sql\n          )] }\n        ),\n        _jsxs(FilterActionsContainer, { children: [\n          _jsx(Button, { buttonSize: \"small\", onClick: this.props.onClose, cta: true, children:\n            t('Close') }\n          ),\n          _jsx(Button, {\n\n            disabled:\n            !stateIsValid ||\n            !this.state.isSimpleTabValid ||\n            !hasUnsavedChanges,\n\n            buttonStyle: \"primary\",\n            buttonSize: \"small\",\n            className: \"m-r-5\",\n            onClick: this.onSave,\n            cta: true, children:\n\n            t('Save') }\n          ),\n          _jsx(ResizeIcon, {\n            role: \"button\",\n            \"aria-label\": \"Resize\",\n            tabIndex: 0,\n            onMouseDown: this.onDragDown,\n            className: \"fa fa-expand edit-popover-resize text-muted\" }\n          )] }\n        )] }\n      ));\n\n  }\n}\n\nAdhocFilterEditPopover.propTypes = propTypes;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}