{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { css, t } from '@superset-ui/core';\nimport ValidatedInput from 'src/components/Form/LabeledErrorBoundInput';\nimport FormLabel from 'src/components/Form/FormLabel';\nimport Icons from 'src/components/Icons';\nimport { StyledFooterButton, StyledCatalogTable } from '../styles';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nexport const TableCatalog = ({ required, changeMethods, getValidation, validationErrors, db }) => {\n  const tableCatalog = (db == null ? void 0 : db.catalog) || [];\n  const catalogError = validationErrors || {};\n  return _jsxs(StyledCatalogTable, { children: [\n    _jsx(\"h4\", { className: \"gsheet-title\", children:\n      t('Connect Google Sheets as tables to this database') }\n    ),\n    _jsxs(\"div\", { children: [\n      tableCatalog == null ? void 0 : tableCatalog.map((sheet, idx) => {var _catalogError$idx, _catalogError$idx2;return _jsxs(_Fragment, { children: [\n          _jsx(FormLabel, { className: \"catalog-label\", children:\n            t('Google Sheet Name and URL') }\n          ),\n          _jsxs(\"div\", { className: \"catalog-name\", children: [\n            _jsx(ValidatedInput, { className: \"catalog-name-input\", required: required, validationMethods: { onBlur: getValidation }, errorMessage: (_catalogError$idx = catalogError[idx]) == null ? void 0 : _catalogError$idx.name, placeholder: t('Enter a name for this sheet'), onChange: (e) => {\n                changeMethods.onParametersChange({\n                  target: {\n                    type: `catalog-${idx}`,\n                    name: 'name',\n                    value: e.target.value\n                  }\n                });\n              }, value: sheet.name }),\n            (tableCatalog == null ? void 0 : tableCatalog.length) > 1 && _jsx(Icons.CloseOutlined, { css: (theme) => css`\n                    align-self: center;\n                    background: ${theme.colors.grayscale.light4};\n                    margin: 5px 5px 8px 5px;\n\n                    &.anticon > * {\n                      line-height: 0;\n                    }\n                  `, iconSize: \"m\", onClick: () => changeMethods.onRemoveTableCatalog(idx) })] }\n          ),\n          _jsx(ValidatedInput, { className: \"catalog-name-url\", required: required, validationMethods: { onBlur: getValidation }, errorMessage: (_catalogError$idx2 = catalogError[idx]) == null ? void 0 : _catalogError$idx2.url, placeholder: t('Paste the shareable Google Sheet URL here'), onChange: (e) => changeMethods.onParametersChange({\n              target: {\n                type: `catalog-${idx}`,\n                name: 'value',\n                value: e.target.value\n              }\n            }), value: sheet.value })] }\n        );}),\n      _jsxs(StyledFooterButton, { className: \"catalog-add-btn\", onClick: () => {\n          changeMethods.onAddTableCatalog();\n        }, children: [\"+ \",\n        t('Add sheet')] }\n      )] }\n    ),\n    _jsx(\"div\", { className: \"helper\", children:\n      _jsx(\"div\", { children:\n        t('In order to connect to non-public sheets you need to either provide a service account or configure an OAuth2 client.') }\n      ) }\n    )] }\n  );\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}