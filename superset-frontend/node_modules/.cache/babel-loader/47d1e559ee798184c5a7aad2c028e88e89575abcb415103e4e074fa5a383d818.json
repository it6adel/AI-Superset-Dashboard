{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatCurrency = formatCurrency;\n\nvar _utils = require('../util/utils');\n\n/**\n * Format the currency according to the country.\n *\n * @example\n *      {{formatCurrency 1234567.89 code='USD'}}  => $1,234,567.89\n *      {{formatCurrency 1234567.89 code='EUR'}}  => 1.234.567,89 â‚¬\n *      {{formatCurrency 1234567.89 code='EUR' locale=\"en\"}}  => â‚¬1,234,567.89\n *\n * @param {number} value\n * @param {any} args\n * @returns {string}\n */\nfunction formatCurrency(value) {\n  var currencyFormatter = global.OSREC && global.OSREC.CurrencyFormatter;\n  var handlebars = global.Handlebars;\n\n  if (!currencyFormatter) {\n    currencyFormatter = require('currencyformatter.js');\n  }\n\n  if (!handlebars) {\n    handlebars = require('handlebars');\n  }\n\n  var params = {};\n\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if ((0, _utils.isObject)(args[0]) && (0, _utils.isObject)(args[0].hash)) {\n    params = args[0].hash;\n  }\n\n  params.currency = !(0, _utils.isUndefined)(params.code) ? params.code : params.currency;\n\n  if (!(0, _utils.isUndefined)(params.currency) && !(params.currency in currencyFormatter.symbols)) {\n    console.error('Invalid currency code ' + params.currency + ' provided for helper `formatCurrency`.');\n\n    return;\n  }\n\n  if (!(0, _utils.isNumeric)(value)) {\n    return;\n  }\n\n  return new handlebars.SafeString(currencyFormatter.format(value, params));\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}