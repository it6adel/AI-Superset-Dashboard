{"ast":null,"code":"import _throttle from \"lodash/throttle\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { DASHBOARD_ROOT_TYPE } from 'src/dashboard/util/componentTypes';\nimport getDropPosition from 'src/dashboard/util/getDropPosition';\nimport handleScroll from './handleScroll';\n\nconst HOVER_THROTTLE_MS = 100;\n\nfunction handleHover(props, monitor, Component) {var _Component$props, _Component$props$comp, _Component$props2;\n  // this may happen due to throttling\n  if (!Component.mounted) return;\n\n  const dropPosition = getDropPosition(monitor, Component);\n\n  const isDashboardRoot =\n  (Component == null ? void 0 : (_Component$props = Component.props) == null ? void 0 : (_Component$props$comp = _Component$props.component) == null ? void 0 : _Component$props$comp.type) === DASHBOARD_ROOT_TYPE;\n  const scroll = isDashboardRoot ? 'SCROLL_TOP' : null;\n\n  handleScroll(scroll);\n\n  if (!dropPosition) {\n    Component.setState(() => ({ dropIndicator: null }));\n    return;\n  }\n\n  Component == null ? void 0 : (_Component$props2 = Component.props) == null ? void 0 : _Component$props2.onHover();\n\n  Component.setState(() => ({\n    dropIndicator: dropPosition\n  }));\n}\n\n// this is called very frequently by react-dnd\nexport default _throttle(handleHover, HOVER_THROTTLE_MS);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}