{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable react/jsx-key */\nimport { t } from '@superset-ui/core';\nimport { ControlSubSectionHeader, D3_TIME_FORMAT_OPTIONS, D3_FORMAT_DOCS, D3_FORMAT_OPTIONS } from '@superset-ui/chart-controls';\n/*\n  Plugins in question:\n\n  AreaChartPlugin,\n  BarChartPlugin,\n  BubbleChartPlugin,\n  BulletChartPlugin,\n  CompareChartPlugin,\n  DistBarChartPlugin,\n  DualLineChartPlugin,\n  LineChartPlugin,\n  LineMultiChartPlugin,\n  PieChartPlugin,\n  TimePivotChartPlugin,\n*/import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport const yAxis2Format = {\n  name: 'y_axis_2_format',\n  config: {\n    type: 'SelectControl',\n    freeForm: true,\n    label: t('Right Axis Format'),\n    default: 'SMART_NUMBER',\n    choices: D3_FORMAT_OPTIONS,\n    description: D3_FORMAT_DOCS\n  }\n};\nexport const showMarkers = {\n  name: 'show_markers',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Show Markers'),\n    renderTrigger: true,\n    default: false,\n    description: t('Show data points as circle markers on the lines')\n  }\n};\nexport const leftMargin = {\n  name: 'left_margin',\n  config: {\n    type: 'SelectControl',\n    freeForm: true,\n    clearable: false,\n    label: t('Left Margin'),\n    choices: [\n    ['auto', t('auto')],\n    [50, '50'],\n    [75, '75'],\n    [100, '100'],\n    [125, '125'],\n    [150, '150'],\n    [200, '200']],\n\n    default: 'auto',\n    renderTrigger: true,\n    description: t('Left margin, in pixels, allowing for more room for axis labels')\n  }\n};\nexport const yAxisShowMinmax = {\n  name: 'y_axis_showminmax',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Y bounds'),\n    renderTrigger: true,\n    default: false,\n    description: t('Whether to display the min and max values of the Y-axis')\n  }\n};\nexport const yAxis2ShowMinmax = {\n  name: 'y_axis_2_showminmax',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Y 2 bounds'),\n    renderTrigger: true,\n    default: false,\n    description: t('Whether to display the min and max values of the Y-axis')\n  }\n};\nexport const lineInterpolation = {\n  name: 'line_interpolation',\n  config: {\n    type: 'SelectControl',\n    label: t('Line Style'),\n    renderTrigger: true,\n    choices: [\n    ['linear', t('linear')],\n    ['basis', t('basis')],\n    ['cardinal', t('cardinal')],\n    ['monotone', t('monotone')],\n    ['step-before', t('step-before')],\n    ['step-after', t('step-after')]],\n\n    default: 'linear',\n    description: t('Line interpolation as defined by d3.js')\n  }\n};\nexport const showBrush = {\n  name: 'show_brush',\n  config: {\n    type: 'SelectControl',\n    label: t('Show Range Filter'),\n    renderTrigger: true,\n    clearable: false,\n    default: 'auto',\n    choices: [\n    ['yes', t('Yes')],\n    ['no', t('No')],\n    ['auto', t('Auto')]],\n\n    description: t('Whether to display the time range interactive selector')\n  }\n};\nexport const showLegend = {\n  name: 'show_legend',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Legend'),\n    renderTrigger: true,\n    default: true,\n    description: t('Whether to display the legend (toggles)')\n  }\n};\nexport const showControls = {\n  name: 'show_controls',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Extra Controls'),\n    renderTrigger: true,\n    default: false,\n    description: t('Whether to show extra controls or not. Extra controls ' +\n    'include things like making multiBar charts stacked ' +\n    'or side by side.')\n  }\n};\nexport const xAxisLabel = {\n  name: 'x_axis_label',\n  config: {\n    type: 'TextControl',\n    label: t('X Axis Label'),\n    renderTrigger: true,\n    default: ''\n  }\n};\nexport const bottomMargin = {\n  name: 'bottom_margin',\n  config: {\n    type: 'SelectControl',\n    clearable: false,\n    freeForm: true,\n    label: t('Bottom Margin'),\n    choices: [\n    ['auto', t('auto')],\n    [50, '50'],\n    [75, '75'],\n    [100, '100'],\n    [125, '125'],\n    [150, '150'],\n    [200, '200']],\n\n    default: 'auto',\n    renderTrigger: true,\n    description: t('Bottom margin, in pixels, allowing for more room for axis labels')\n  }\n};\nexport const xTicksLayout = {\n  name: 'x_ticks_layout',\n  config: {\n    type: 'SelectControl',\n    label: t('X Tick Layout'),\n    choices: [\n    ['auto', t('auto')],\n    ['flat', t('flat')],\n    ['45°', '45°'],\n    ['staggered', t('staggered')]],\n\n    default: 'auto',\n    clearable: false,\n    renderTrigger: true,\n    description: t('The way the ticks are laid out on the X-axis')\n  }\n};\nexport const xAxisFormat = {\n  name: 'x_axis_format',\n  config: {\n    type: 'SelectControl',\n    freeForm: true,\n    label: t('X Axis Format'),\n    renderTrigger: true,\n    choices: D3_TIME_FORMAT_OPTIONS,\n    default: 'smart_date',\n    description: D3_FORMAT_DOCS\n  }\n};\nexport const yLogScale = {\n  name: 'y_log_scale',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Y Log Scale'),\n    default: false,\n    renderTrigger: true,\n    description: t('Use a log scale for the Y-axis')\n  }\n};\nexport const yAxisBounds = {\n  name: 'y_axis_bounds',\n  config: {\n    type: 'BoundsControl',\n    label: t('Y Axis Bounds'),\n    renderTrigger: true,\n    default: [null, null],\n    description: t('Bounds for the Y-axis. When left empty, the bounds are ' +\n    'dynamically defined based on the min/max of the data. Note that ' +\n    \"this feature will only expand the axis range. It won't \" +\n    \"narrow the data's extent.\")\n  }\n};\nexport const yAxis2Bounds = {\n  name: 'y_axis_2_bounds',\n  config: {\n    type: 'BoundsControl',\n    label: t('Y Axis 2 Bounds'),\n    renderTrigger: true,\n    default: [null, null],\n    description: t('Bounds for the Y-axis. When left empty, the bounds are ' +\n    'dynamically defined based on the min/max of the data. Note that ' +\n    \"this feature will only expand the axis range. It won't \" +\n    \"narrow the data's extent.\")\n  }\n};\nexport const xAxisShowMinmax = {\n  name: 'x_axis_showminmax',\n  config: {\n    type: 'CheckboxControl',\n    label: t('X bounds'),\n    renderTrigger: true,\n    default: false,\n    description: t('Whether to display the min and max values of the X-axis')\n  }\n};\nexport const richTooltip = {\n  name: 'rich_tooltip',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Rich Tooltip'),\n    renderTrigger: true,\n    default: true,\n    description: t('The rich tooltip shows a list of all series for that point in time')\n  }\n};\nexport const showBarValue = {\n  name: 'show_bar_value',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Bar Values'),\n    default: false,\n    renderTrigger: true,\n    description: t('Show the value on top of the bar')\n  }\n};\nexport const barStacked = {\n  name: 'bar_stacked',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Stacked Bars'),\n    renderTrigger: true,\n    default: false,\n    description: null\n  }\n};\nexport const reduceXTicks = {\n  name: 'reduce_x_ticks',\n  config: {\n    type: 'CheckboxControl',\n    label: t('Reduce X ticks'),\n    renderTrigger: true,\n    default: false,\n    description: t('Reduces the number of X-axis ticks to be rendered. ' +\n    'If true, the x-axis will not overflow and labels may be ' +\n    'missing. If false, a minimum width will be applied ' +\n    'to columns and the width may overflow into an ' +\n    'horizontal scroll.')\n  }\n};\nexport const yAxisLabel = {\n  name: 'y_axis_label',\n  config: {\n    type: 'TextControl',\n    label: t('Y Axis Label'),\n    renderTrigger: true,\n    default: ''\n  }\n};\nexport const timeSeriesSection = [\n{\n  label: t('Query'),\n  expanded: true,\n  controlSetRows: [\n  ['metrics'],\n  ['adhoc_filters'],\n  ['groupby'],\n  ['limit'],\n  ['timeseries_limit_metric'],\n  ['order_desc'],\n  [\n  {\n    name: 'contribution',\n    config: {\n      type: 'CheckboxControl',\n      label: t('Contribution'),\n      default: false,\n      description: t('Compute the contribution to the total')\n    }\n  }],\n\n  ['row_limit', null]]\n\n},\n{\n  label: t('Advanced Analytics'),\n  tabOverride: 'data',\n  description: t('This section contains options ' +\n  'that allow for advanced analytical post processing ' +\n  'of query results'),\n  controlSetRows: [\n  [\n  _jsx(ControlSubSectionHeader, { children:\n    t('Rolling Window') }\n  )],\n\n  [\n  {\n    name: 'rolling_type',\n    config: {\n      type: 'SelectControl',\n      label: t('Rolling Function'),\n      default: 'None',\n      choices: [\n      ['None', t('None')],\n      ['mean', t('mean')],\n      ['sum', t('sum')],\n      ['std', t('std')],\n      ['cumsum', t('cumsum')]],\n\n      description: t('Defines a rolling window function to apply, works along ' +\n      'with the [Periods] text box')\n    }\n  }],\n\n  [\n  {\n    name: 'rolling_periods',\n    config: {\n      type: 'TextControl',\n      label: t('Periods'),\n      isInt: true,\n      description: t('Defines the size of the rolling window function, ' +\n      'relative to the time granularity selected')\n    }\n  }],\n\n  [\n  {\n    name: 'min_periods',\n    config: {\n      type: 'TextControl',\n      label: t('Min Periods'),\n      isInt: true,\n      description: t('The minimum number of rolling periods required to show ' +\n      'a value. For instance if you do a cumulative sum on 7 days ' +\n      'you may want your \"Min Period\" to be 7, so that all data points ' +\n      'shown are the total of 7 periods. This will hide the \"ramp up\" ' +\n      'taking place over the first 7 periods')\n    }\n  }],\n\n  [\n  _jsx(ControlSubSectionHeader, { children:\n    t('Time Comparison') }\n  )],\n\n  [\n  {\n    name: 'time_compare',\n    config: {\n      type: 'SelectControl',\n      multi: true,\n      freeForm: true,\n      label: t('Time Shift'),\n      choices: [\n      ['1 day', t('1 day')],\n      ['1 week', t('1 week')],\n      ['28 days', t('28 days')],\n      ['30 days', t('30 days')],\n      ['52 weeks', t('52 weeks')],\n      ['1 year', t('1 year')],\n      ['104 weeks', t('104 weeks')],\n      ['2 years', t('2 years')],\n      ['156 weeks', t('156 weeks')],\n      ['3 years', t('3 years')]],\n\n      description: t('Overlay one or more timeseries from a ' +\n      'relative time period. Expects relative time deltas ' +\n      'in natural language (example: 24 hours, 7 days, ' +\n      '52 weeks, 365 days). Free text is supported.')\n    }\n  }],\n\n  [\n  {\n    name: 'comparison_type',\n    config: {\n      type: 'SelectControl',\n      label: t('Calculation type'),\n      default: 'values',\n      choices: [\n      ['values', t('Actual Values')],\n      ['absolute', t('Difference')],\n      ['percentage', t('Percentage change')],\n      ['ratio', t('Ratio')]],\n\n      description: t('How to display time shifts: as individual lines; as the ' +\n      'difference between the main time series and each time shift; ' +\n      'as the percentage change; or as the ratio between series and time shifts.')\n    }\n  }],\n\n  [_jsx(ControlSubSectionHeader, { children: t('Resample') })],\n  [\n  {\n    name: 'resample_rule',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Rule'),\n      default: null,\n      choices: [\n      ['1T', t('1T')],\n      ['1H', t('1H')],\n      ['1D', t('1D')],\n      ['7D', t('7D')],\n      ['1M', t('1M')],\n      ['1AS', t('1AS')]],\n\n      description: t('Pandas resample rule')\n    }\n  }],\n\n  [\n  {\n    name: 'resample_method',\n    config: {\n      type: 'SelectControl',\n      freeForm: true,\n      label: t('Method'),\n      default: null,\n      choices: [\n      ['asfreq', t('asfreq')],\n      ['bfill', t('bfill')],\n      ['ffill', t('ffill')],\n      ['median', t('median')],\n      ['mean', t('mean')],\n      ['sum', t('sum')]],\n\n      description: t('Pandas resample method')\n    }\n  }]]\n\n\n}];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}