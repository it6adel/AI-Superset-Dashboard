{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { Popover } from 'antd-v5';\nimport { CalculatorOutlined } from '@ant-design/icons';\nimport { css, styled, useTheme, t } from '@superset-ui/core';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst StyledCalculatorIcon = styled(CalculatorOutlined)`\n  ${({ theme }) => css`\n    color: ${theme.colors.grayscale.base};\n    font-size: ${theme.typography.sizes.s}px;\n    & svg {\n      margin-left: ${theme.gridUnit}px;\n      margin-right: ${theme.gridUnit}px;\n    }\n  `}\n`;\nexport const SQLPopover = (props) => {\n  const theme = useTheme();\n  const [AceEditor, setAceEditor] = useState(null);\n  useEffect(() => {\n    Promise.all([\n    import('react-ace'),\n    import('ace-builds/src-min-noconflict/mode-sql')]\n    ).then(([reactAceModule]) => {\n      setAceEditor(() => reactAceModule.default);\n    });\n  }, []);\n  if (!AceEditor) {\n    return null;\n  }\n  return _jsx(Popover, { content: _jsx(AceEditor, { mode: \"sql\", value: props.sqlExpression, editorProps: { $blockScrolling: true }, setOptions: {\n        highlightActiveLine: false,\n        highlightGutterLine: false\n      }, minLines: 2, maxLines: 6, readOnly: true, wrapEnabled: true, style: {\n        border: `1px solid ${theme.colors.grayscale.light2}`,\n        background: theme.colors.secondary.light5,\n        maxWidth: theme.gridUnit * 100\n      } }), placement: \"bottomLeft\", arrow: { pointAtCenter: true }, title: t('SQL expression'), ...props, children:\n    _jsx(StyledCalculatorIcon, {}) }\n  );\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}