{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { forwardRef } from 'react';\nimport { css, styled, t } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\n// This is the color that antd components (such as Select or Input) use on hover\n// TODO: use theme.colors.primary.base here and in antd components\nimport { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";const ACTIVE_BORDER_COLOR = '#45BED6';\nconst LabelContainer = styled.div`\n  ${({ theme, isActive, isPlaceholder }) => css`\n    width: 100%;\n    height: ${theme.gridUnit * 8}px;\n\n    display: flex;\n    align-items: center;\n    flex-wrap: nowrap;\n\n    padding: 0 ${theme.gridUnit * 3}px;\n\n    background-color: ${theme.colors.grayscale.light5};\n\n    border: 1px solid\n      ${isActive ? ACTIVE_BORDER_COLOR : theme.colors.grayscale.light2};\n    border-radius: ${theme.borderRadius}px;\n\n    cursor: pointer;\n\n    transition: border-color 0.3s cubic-bezier(0.65, 0.05, 0.36, 1);\n    :hover,\n    :focus {\n      border-color: ${ACTIVE_BORDER_COLOR};\n    }\n\n    .date-label-content {\n      color: ${isPlaceholder ?\ntheme.colors.grayscale.light1 :\ntheme.colors.grayscale.dark1};\n      overflow: hidden;\n      text-overflow: ellipsis;\n      min-width: 0;\n      flex-shrink: 1;\n      white-space: nowrap;\n    }\n\n    span[role='img'] {\n      margin-left: auto;\n      padding-left: ${theme.gridUnit}px;\n\n      & > span[role='img'] {\n        line-height: 0;\n      }\n    }\n  `}\n`;\nexport const DateLabel = /*#__PURE__*/forwardRef((props, ref) => _jsxs(LabelContainer, { ...props, tabIndex: 0, role: \"button\", children: [\n  _jsx(\"span\", { id: `date-label-${props.name}`, className: \"date-label-content\", ref: ref, children:\n    typeof props.label === 'string' ? t(props.label) : props.label }\n  ),\n  _jsx(Icons.CalendarOutlined, { iconSize: \"s\" })] }\n));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}