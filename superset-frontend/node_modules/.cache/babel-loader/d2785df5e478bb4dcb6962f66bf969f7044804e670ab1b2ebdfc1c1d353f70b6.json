{"ast":null,"code":"import { t, validateNonEmpty } from '@superset-ui/core';\nimport timeGrainSqlaAnimationOverrides from '../../utilities/controls';\nimport { filterNulls, autozoom, dimension, jsColumns, jsDataMutator, jsTooltip, jsOnclickHref, legendFormat, legendPosition, viewport, spatial, pointRadiusFixed, multiplier, mapboxStyle } from '../../utilities/Shared_DeckGL';\nconst config = {\n  onInit: (controlState) => ({\n    ...controlState,\n    time_grain_sqla: {\n      ...controlState.time_grain_sqla,\n      value: null\n    },\n    granularity: {\n      ...controlState.granularity,\n      value: null\n    }\n  }),\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [spatial, null],\n    ['row_limit', filterNulls],\n    ['adhoc_filters']]\n\n  },\n  {\n    label: t('Map'),\n    expanded: true,\n    controlSetRows: [[mapboxStyle], [autozoom, viewport]]\n  },\n  {\n    label: t('Point Size'),\n    controlSetRows: [\n    [pointRadiusFixed],\n    [\n    {\n      name: 'point_unit',\n      config: {\n        type: 'SelectControl',\n        label: t('Point Unit'),\n        default: 'square_m',\n        clearable: false,\n        choices: [\n        ['square_m', t('Square meters')],\n        ['square_km', t('Square kilometers')],\n        ['square_miles', t('Square miles')],\n        ['radius_m', t('Radius in meters')],\n        ['radius_km', t('Radius in kilometers')],\n        ['radius_miles', t('Radius in miles')]],\n\n        description: t('The unit of measure for the specified point radius')\n      }\n    }],\n\n    [\n    {\n      name: 'min_radius',\n      config: {\n        type: 'TextControl',\n        label: t('Minimum Radius'),\n        isFloat: true,\n        validators: [validateNonEmpty],\n        renderTrigger: true,\n        default: 2,\n        description: t('Minimum radius size of the circle, in pixels. As the zoom level changes, this ' +\n        'insures that the circle respects this minimum radius.')\n      }\n    },\n    {\n      name: 'max_radius',\n      config: {\n        type: 'TextControl',\n        label: t('Maximum Radius'),\n        isFloat: true,\n        validators: [validateNonEmpty],\n        renderTrigger: true,\n        default: 250,\n        description: t('Maximum radius size of the circle, in pixels. As the zoom level changes, this ' +\n        'insures that the circle respects this maximum radius.')\n      }\n    }],\n\n    [multiplier, null]]\n\n  },\n  {\n    label: t('Point Color'),\n    controlSetRows: [\n    ['color_picker'],\n    [legendPosition],\n    [legendFormat],\n    [\n    {\n      name: dimension.name,\n      config: {\n        ...dimension.config,\n        label: t('Categorical Color'),\n        description: t('Pick a dimension from which categorical colors are defined')\n      }\n    }],\n\n    ['color_scheme']]\n\n  },\n  {\n    label: t('Advanced'),\n    controlSetRows: [\n    [jsColumns],\n    [jsDataMutator],\n    [jsTooltip],\n    [jsOnclickHref]]\n\n  }],\n\n  controlOverrides: {\n    size: {\n      validators: []\n    },\n    time_grain_sqla: timeGrainSqlaAnimationOverrides\n  }\n};\nexport default config;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}