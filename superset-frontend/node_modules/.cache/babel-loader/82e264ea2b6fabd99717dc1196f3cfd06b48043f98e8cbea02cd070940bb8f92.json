{"ast":null,"code":"export const isCustomControlItem = (obj) => typeof obj === 'object' &&\nobj !== null &&\ntypeof ('name' in obj && obj.name) === 'string' &&\ntypeof ('config' in obj && obj.config) === 'object' &&\nobj.config !== null;\nexport const isStandardizedFormData = (formData) => {var _formData$standardize, _formData$standardize2;return (formData == null ? void 0 : (_formData$standardize = formData.standardizedFormData) == null ? void 0 : _formData$standardize.controls) && (\n  formData == null ? void 0 : (_formData$standardize2 = formData.standardizedFormData) == null ? void 0 : _formData$standardize2.memorizedFormData) &&\n  Array.isArray(formData.standardizedFormData.controls.metrics) &&\n  Array.isArray(formData.standardizedFormData.controls.columns);};\n// Ref:\n//  - superset-frontend/src/explore/components/ConditionalFormattingControl.tsx\nexport var Comparator;\n(function (Comparator) {\n  Comparator[\"None\"] = \"None\";\n  Comparator[\"GreaterThan\"] = \">\";\n  Comparator[\"LessThan\"] = \"<\";\n  Comparator[\"GreaterOrEqual\"] = \"\\u2265\";\n  Comparator[\"LessOrEqual\"] = \"\\u2264\";\n  Comparator[\"Equal\"] = \"=\";\n  Comparator[\"NotEqual\"] = \"\\u2260\";\n  Comparator[\"Between\"] = \"< x <\";\n  Comparator[\"BetweenOrEqual\"] = \"\\u2264 x \\u2264\";\n  Comparator[\"BetweenOrLeftEqual\"] = \"\\u2264 x <\";\n  Comparator[\"BetweenOrRightEqual\"] = \"< x \\u2264\";\n})(Comparator || (Comparator = {}));\nexport const MultipleValueComparators = [\nComparator.Between,\nComparator.BetweenOrEqual,\nComparator.BetweenOrLeftEqual,\nComparator.BetweenOrRightEqual];\n\nexport default {};\nexport function isColumnMeta(column) {\n  return !!column && 'column_name' in column;\n}\nexport function isSavedExpression(column) {\n  return 'column_name' in column && 'expression' in column && !!column.expression;\n}\nexport function isControlPanelSectionConfig(section) {\n  return section !== null;\n}\nexport function isDataset(datasource) {\n  return !!datasource && 'columns' in datasource && !('sqlEditorId' in datasource);\n}\nexport function isQueryResponse(datasource) {\n  return !!datasource && 'results' in datasource && 'sqlEditorId' in datasource;\n}\nexport var SortSeriesType;\n(function (SortSeriesType) {\n  SortSeriesType[\"Name\"] = \"name\";\n  SortSeriesType[\"Max\"] = \"max\";\n  SortSeriesType[\"Min\"] = \"min\";\n  SortSeriesType[\"Sum\"] = \"sum\";\n  SortSeriesType[\"Avg\"] = \"avg\";\n})(SortSeriesType || (SortSeriesType = {}));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}