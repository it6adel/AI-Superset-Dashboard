{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport dayjs from 'dayjs';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone';\nimport calendar from 'dayjs/plugin/calendar';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport duration from 'dayjs/plugin/duration';\nimport updateLocale from 'dayjs/plugin/updateLocale';\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\ndayjs.extend(utc);\ndayjs.extend(timezone);\ndayjs.extend(calendar);\ndayjs.extend(relativeTime);\ndayjs.extend(customParseFormat);\ndayjs.extend(duration);\ndayjs.extend(updateLocale);\ndayjs.extend(isSameOrBefore);\ndayjs.updateLocale('en', {\n  invalidDate: 'Invalid date'\n});\nexport const extendedDayjs = dayjs;\nexport const fDuration = function (t1, t2, format = 'HH:mm:ss.SSS') {\n  const diffSec = t2 - t1;\n  const duration = dayjs(new Date(diffSec));\n  return duration.utc().format(format);\n};\nexport const now = function () {\n  // seconds from EPOCH as a float\n  return dayjs().utc().valueOf();\n};\nexport const epochTimeXHoursAgo = function (h) {\n  return dayjs().subtract(h, 'hours').utc().valueOf();\n};\nexport const epochTimeXDaysAgo = function (d) {\n  return dayjs().subtract(d, 'days').utc().valueOf();\n};\nexport const epochTimeXYearsAgo = function (y) {\n  return dayjs().subtract(y, 'years').utc().valueOf();\n};\nexport const isDST = function (date, timezoneName) {\n  const standardOffset = dayjs.tz('2021-01-01', timezoneName).utcOffset();\n  const currentOffset = date.tz(timezoneName).utcOffset();\n  return currentOffset !== standardOffset;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}