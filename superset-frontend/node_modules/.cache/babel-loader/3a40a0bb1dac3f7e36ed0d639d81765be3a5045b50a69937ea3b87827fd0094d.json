{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isEqualArray } from '@superset-ui/core';\nexport default function isEqualColumns(propsA, propsB) {var _a$queriesData, _a$queriesData$, _b$queriesData, _b$queriesData$, _a$queriesData2, _a$queriesData2$, _b$queriesData2, _b$queriesData2$;\n  const a = propsA[0];\n  const b = propsB[0];\n  return a.datasource.columnFormats === b.datasource.columnFormats &&\n  a.datasource.currencyFormats === b.datasource.currencyFormats &&\n  a.datasource.verboseMap === b.datasource.verboseMap &&\n  a.formData.tableTimestampFormat === b.formData.tableTimestampFormat &&\n  a.formData.timeGrainSqla === b.formData.timeGrainSqla &&\n  JSON.stringify(a.formData.columnConfig || null) ===\n  JSON.stringify(b.formData.columnConfig || null) &&\n  isEqualArray(a.formData.metrics, b.formData.metrics) &&\n  isEqualArray((_a$queriesData = a.queriesData) == null ? void 0 : (_a$queriesData$ = _a$queriesData[0]) == null ? void 0 : _a$queriesData$.colnames, (_b$queriesData = b.queriesData) == null ? void 0 : (_b$queriesData$ = _b$queriesData[0]) == null ? void 0 : _b$queriesData$.colnames) &&\n  isEqualArray((_a$queriesData2 = a.queriesData) == null ? void 0 : (_a$queriesData2$ = _a$queriesData2[0]) == null ? void 0 : _a$queriesData2$.coltypes, (_b$queriesData2 = b.queriesData) == null ? void 0 : (_b$queriesData2$ = _b$queriesData2[0]) == null ? void 0 : _b$queriesData2$.coltypes) &&\n  JSON.stringify(a.formData.extraFilters || null) ===\n  JSON.stringify(b.formData.extraFilters || null) &&\n  JSON.stringify(a.formData.extraFormData || null) ===\n  JSON.stringify(b.formData.extraFormData || null) &&\n  JSON.stringify(a.rawFormData.column_config || null) ===\n  JSON.stringify(b.rawFormData.column_config || null);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}