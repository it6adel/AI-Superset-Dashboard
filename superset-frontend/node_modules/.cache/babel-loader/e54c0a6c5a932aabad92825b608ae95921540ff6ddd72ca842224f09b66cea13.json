{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * This method is used to get the query filters to be applied to the comparison query after\n * overriding the time range in case an extra form data is provided.\n * For example when rendering a chart that uses time comparison in a dashboard with time filters.\n * @param formData - the form data\n * @param extraFormData - the extra form data\n * @returns the query filters to be applied to the comparison query\n */\nexport const getComparisonFilters = (formData, extraFormData) => {var _formData$adhoc_filte, _formData$adhoc_filte2, _formData$adhoc_filte3;\n  const timeFilterIndex = (_formData$adhoc_filte = (_formData$adhoc_filte2 = formData.adhoc_filters) == null ? void 0 : _formData$adhoc_filte2.findIndex((filter) => 'operator' in filter && filter.operator === 'TEMPORAL_RANGE')) != null ? _formData$adhoc_filte : -1;\n  const timeFilter = timeFilterIndex !== -1 && formData.adhoc_filters ?\n  formData.adhoc_filters[timeFilterIndex] :\n  null;\n  if (timeFilter &&\n  'comparator' in timeFilter &&\n  typeof timeFilter.comparator === 'string') {\n    if (extraFormData != null && extraFormData.time_range) {\n      timeFilter.comparator = extraFormData.time_range;\n    }\n  }\n  const comparisonQueryFilter = timeFilter ? [timeFilter] : [];\n  const otherFilters = (_formData$adhoc_filte3 = formData.adhoc_filters) == null ? void 0 : _formData$adhoc_filte3.filter((_value, index) => timeFilterIndex !== index);\n  const comparisonQueryFilters = otherFilters ?\n  [...comparisonQueryFilter, ...otherFilters] :\n  comparisonQueryFilter;\n  return comparisonQueryFilters;\n};\nexport default getComparisonFilters;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}