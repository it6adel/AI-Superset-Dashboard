{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { formatSelectOptions } from '@superset-ui/chart-controls';\nimport { t, validateNonEmpty, legacyValidateNumber, legacyValidateInteger } from '@superset-ui/core';\nimport { autozoom, filterNulls, jsColumns, jsDataMutator, jsOnclickHref, jsTooltip, mapboxStyle, spatial, viewport } from '../../utilities/Shared_DeckGL';\nconst INTENSITY_OPTIONS = Array.from({ length: 10 }, (_, index) => (index + 1) / 10);\nconst RADIUS_PIXEL_OPTIONS = Array.from({ length: 14 }, (_, index) => index * 5 + 5);\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [spatial],\n    ['size'],\n    ['row_limit'],\n    [filterNulls],\n    ['adhoc_filters'],\n    [\n    {\n      name: 'intensity',\n      config: {\n        type: 'SelectControl',\n        label: t('Intensity'),\n        description: t('Intensity is the value multiplied by the weight to obtain the final weight'),\n        freeForm: true,\n        clearable: false,\n        validators: [legacyValidateNumber],\n        default: 1,\n        choices: formatSelectOptions(INTENSITY_OPTIONS)\n      }\n    }],\n\n    [\n    {\n      name: 'radius_pixels',\n      config: {\n        type: 'SelectControl',\n        label: t('Intensity Radius'),\n        description: t('Intensity Radius is the radius at which the weight is distributed'),\n        freeForm: true,\n        clearable: false,\n        validators: [legacyValidateInteger],\n        default: 30,\n        choices: formatSelectOptions(RADIUS_PIXEL_OPTIONS)\n      }\n    }]]\n\n\n  },\n  {\n    label: t('Map'),\n    controlSetRows: [\n    [mapboxStyle],\n    [viewport],\n    ['linear_color_scheme'],\n    [autozoom],\n    [\n    {\n      name: 'aggregation',\n      config: {\n        type: 'SelectControl',\n        label: t('Aggregation'),\n        description: t('The function to use when aggregating points into groups'),\n        default: 'sum',\n        clearable: false,\n        renderTrigger: true,\n        choices: [\n        ['sum', t('sum')],\n        ['mean', t('mean')]]\n\n      }\n    }]]\n\n\n  },\n  {\n    label: t('Advanced'),\n    controlSetRows: [\n    [jsColumns],\n    [jsDataMutator],\n    [jsTooltip],\n    [jsOnclickHref]]\n\n  }],\n\n  controlOverrides: {\n    size: {\n      label: t('Weight'),\n      description: t(\"Metric used as a weight for the grid's coloring\"),\n      validators: [validateNonEmpty]\n    }\n  },\n  formDataOverrides: (formData) => ({\n    ...formData\n  })\n};\nexport default config;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}