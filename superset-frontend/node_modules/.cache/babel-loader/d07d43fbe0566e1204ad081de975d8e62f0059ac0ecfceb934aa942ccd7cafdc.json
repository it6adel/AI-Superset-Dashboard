{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Component } from 'react';\nimport { t } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport { PublishedLabel } from 'src/components/Label';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst draftButtonTooltip = t('This dashboard is not published, it will not show up in the list of dashboards. ' +\n'Click here to publish this dashboard.');\nconst draftDivTooltip = t('This dashboard is not published which means it will not show up in the list of dashboards.' +\n' Favorite it to see it there or access it by using the URL directly.');\nconst publishedTooltip = t('This dashboard is published. Click to make it a draft.');\nexport default class PublishedStatus extends Component {\n  constructor(props) {\n    super(props);\n    this.togglePublished = this.togglePublished.bind(this);\n  }\n  togglePublished() {\n    this.props.savePublished(this.props.dashboardId, !this.props.isPublished);\n  }\n  render() {\n    const { isPublished, userCanEdit, userCanSave } = this.props;\n    // Show everybody the draft badge\n    if (!isPublished) {\n      // if they can edit the dash, make the badge a button\n      if (userCanEdit && userCanSave) {\n        return _jsx(Tooltip, { id: \"unpublished-dashboard-tooltip\", placement: \"bottom\", title: draftButtonTooltip, children:\n          _jsx(\"div\", { children:\n            _jsx(PublishedLabel, { isPublished: isPublished, onClick: this.togglePublished }) }\n          ) }\n        );\n      }\n      return _jsx(Tooltip, { id: \"unpublished-dashboard-tooltip\", placement: \"bottom\", title: draftDivTooltip, children:\n        _jsx(\"div\", { children:\n          _jsx(PublishedLabel, { isPublished: isPublished }) }\n        ) }\n      );\n    }\n    // Show the published badge for the owner of the dashboard to toggle\n    if (userCanEdit && userCanSave) {\n      return _jsx(Tooltip, { id: \"published-dashboard-tooltip\", placement: \"bottom\", title: publishedTooltip, children:\n        _jsx(\"div\", { children:\n          _jsx(PublishedLabel, { isPublished: isPublished, onClick: this.togglePublished }) }\n        ) }\n      );\n    }\n    // Don't show anything if one doesn't own the dashboard and it is published\n    return null;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}