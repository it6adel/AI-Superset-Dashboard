{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { ensureIsArray } from '@superset-ui/core';\nimport { mergeExtraFormData } from '../../utils';\n// eslint-disable-next-line import/prefer-default-export\nexport function useFilterDependencies(id, dataMaskSelected) {\n  const dependencyIds = useSelector((state) => {var _state$nativeFilters$;return (_state$nativeFilters$ = state.nativeFilters.filters[id]) == null ? void 0 : _state$nativeFilters$.cascadeParentIds;}, shallowEqual);\n  return useMemo(() => {\n    let dependencies = {};\n    ensureIsArray(dependencyIds).forEach((parentId) => {\n      const parentState = dataMaskSelected == null ? void 0 : dataMaskSelected[parentId];\n      dependencies = mergeExtraFormData(dependencies, parentState == null ? void 0 : parentState.extraFormData);\n    });\n    return dependencies;\n  }, [dataMaskSelected, dependencyIds]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}