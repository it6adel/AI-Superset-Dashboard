{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Menu App. Used in views that do not already include the Menu component in the layout.\n// eg, backend rendered views\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport { CacheProvider } from '@emotion/react';\nimport { QueryParamProvider } from 'use-query-params';\nimport createCache from '@emotion/cache';\nimport { ThemeProvider } from '@superset-ui/core';\nimport Menu from 'src/features/home/Menu';\nimport { theme } from 'src/preamble';\nimport { AntdThemeProvider } from 'src/components/AntdThemeProvider';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { setupStore } from './store';\n// Disable connecting to redux debugger so that the React app injected\n// Below the menu like SqlLab or Explore can connect its redux store to the debugger\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";const store = setupStore({ disableDebugger: true });\nconst bootstrapData = getBootstrapData();\nconst menu = { ...bootstrapData.common.menu_data };\nconst emotionCache = createCache({\n  key: 'menu'\n});\nconst app =\n// @ts-ignore: emotion types defs are incompatible between core and cache\n_jsx(CacheProvider, { value: emotionCache, children:\n  _jsx(ThemeProvider, { theme: theme, children:\n    _jsx(AntdThemeProvider, { children:\n      _jsx(Provider, { store: store, children:\n        _jsx(BrowserRouter, { children:\n          _jsx(QueryParamProvider, { ReactRouterRoute: Route, stringifyOptions: { encode: false }, children:\n            _jsx(Menu, { data: menu }) }\n          ) }\n        ) }\n      ) }\n    ) }\n  ) }\n);\nReactDOM.render(app, document.getElementById('app-menu'));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}