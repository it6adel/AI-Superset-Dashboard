{"ast":null,"code":"import { css, t, useTheme } from '@superset-ui/core';\nimport { Dropdown } from 'src/components/Dropdown';\nimport { DynamicEditableTitle } from '../DynamicEditableTitle';\nimport CertifiedBadge from '../CertifiedBadge';\nimport FaveStar from '../FaveStar';\nimport Icons from '../Icons';\nimport Button from '../Button';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport const menuTriggerStyles = (theme) => css`\n  width: ${theme.gridUnit * 8}px;\n  height: ${theme.gridUnit * 8}px;\n  padding: 0;\n  border: 1px solid ${theme.colors.primary.dark2};\n\n  &.antd5-btn > span.anticon {\n    line-height: 0;\n    transition: inherit;\n  }\n\n  &:hover:not(:focus) > span.anticon {\n    color: ${theme.colors.primary.light1};\n  }\n  &:focus-visible {\n    outline: 2px solid ${theme.colors.primary.dark2};\n  }\n`;\nconst headerStyles = (theme) => css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  background-color: ${theme.colors.grayscale.light5};\n  height: ${theme.gridUnit * 16}px;\n  padding: 0 ${theme.gridUnit * 4}px;\n\n  .editable-title {\n    overflow: hidden;\n\n    & > input[type='button'],\n    & > span {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 100%;\n      white-space: nowrap;\n    }\n  }\n\n  span[role='button'] {\n    display: flex;\n    height: 100%;\n  }\n\n  .title-panel {\n    display: flex;\n    align-items: center;\n    min-width: 0;\n    margin-right: ${theme.gridUnit * 12}px;\n  }\n\n  .right-button-panel {\n    display: flex;\n    align-items: center;\n  }\n`;\nconst buttonsStyles = (theme) => css`\n  display: flex;\n  align-items: center;\n  padding-left: ${theme.gridUnit * 2}px;\n\n  & .anticon-star {\n    padding: 0 ${theme.gridUnit}px;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n  }\n`;\nconst additionalActionsContainerStyles = (theme) => css`\n  margin-left: ${theme.gridUnit * 2}px;\n`;\nexport const PageHeaderWithActions = ({ editableTitleProps, showTitlePanelItems, certificatiedBadgeProps, showFaveStar, faveStarProps, titlePanelAdditionalItems, rightPanelAdditionalItems, additionalActionsMenu, menuDropdownProps, showMenuDropdown = true, tooltipProps }) => {\n  const theme = useTheme();\n  return _jsxs(\"div\", { css: headerStyles, className: \"header-with-actions\", children: [\n    _jsxs(\"div\", { className: \"title-panel\", children: [\n      _jsx(DynamicEditableTitle, { ...editableTitleProps }),\n      showTitlePanelItems && _jsxs(\"div\", { css: buttonsStyles, children: [\n        (certificatiedBadgeProps == null ? void 0 : certificatiedBadgeProps.certifiedBy) && _jsx(CertifiedBadge, { ...certificatiedBadgeProps }),\n        showFaveStar && _jsx(FaveStar, { ...faveStarProps }),\n        titlePanelAdditionalItems] }\n      )] }\n    ),\n    _jsxs(\"div\", { className: \"right-button-panel\", children: [\n      rightPanelAdditionalItems,\n      _jsx(\"div\", { css: additionalActionsContainerStyles, children:\n        showMenuDropdown && _jsx(Dropdown, { trigger: ['click'], dropdownRender: () => additionalActionsMenu, ...menuDropdownProps, children:\n          _jsx(Button, { css: menuTriggerStyles, buttonStyle: \"tertiary\", \"aria-label\": t('Menu actions trigger'), tooltip: tooltipProps == null ? void 0 : tooltipProps.text, placement: tooltipProps == null ? void 0 : tooltipProps.placement, children:\n            _jsx(Icons.EllipsisOutlined, { iconColor: theme.colors.primary.dark2, iconSize: \"l\" }) }\n          ) }\n        ) }\n      )] }\n    )] }\n  );\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}