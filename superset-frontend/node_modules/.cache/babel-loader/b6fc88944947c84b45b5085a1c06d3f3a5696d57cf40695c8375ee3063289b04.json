{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback } from 'react';\nimport { css, useTheme } from '@superset-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { setDirectPathToChild } from 'src/dashboard/actions/dashboardState';\nimport { FilterBarOrientation } from 'src/dashboard/types';\nimport { updateDataMask } from 'src/dataMask/actions';\nimport CrossFilterTag from './CrossFilterTag';\nimport CrossFilterTitle from './CrossFilterTitle';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst CrossFilter = (props) => {\n  const { filter, orientation, last } = props;\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const handleHighlightFilterSource = useCallback((path) => {\n    if (path) {\n      dispatch(setDirectPathToChild(path));\n    }\n  }, [dispatch]);\n  const handleRemoveCrossFilter = (chartId) => {\n    dispatch(updateDataMask(chartId, {\n      extraFormData: {\n        filters: []\n      },\n      filterState: {\n        value: null,\n        selectedValues: null\n      }\n    }));\n  };\n  return _jsxs(\"div\", { css: css`\n        ${orientation === FilterBarOrientation.Vertical ?\n    `\n            display: block;\n            margin-bottom: ${theme.gridUnit * 4}px;\n          ` :\n    `\n            display: flex;\n          `}\n      `, children: [\n    _jsx(CrossFilterTitle, { title: filter.name, orientation: orientation || FilterBarOrientation.Horizontal, onHighlightFilterSource: () => handleHighlightFilterSource(filter.path) }),\n    (filter.column || filter.value) && _jsx(CrossFilterTag, { filter: filter, orientation: orientation, removeCrossFilter: handleRemoveCrossFilter }),\n    last && _jsx(\"span\", { css: css`\n            ${orientation === FilterBarOrientation.Horizontal ?\n      `\n                width: 1px;\n                height: 22px;\n                margin-left: ${theme.gridUnit * 4}px;\n                margin-right: ${theme.gridUnit}px;\n              ` :\n      `\n                width: 100%;\n                height: 1px;\n                display: block;\n                margin-bottom: ${theme.gridUnit * 4}px;\n                margin-top: ${theme.gridUnit * 4}px;\n            `}\n            background: ${theme.colors.grayscale.light2};\n          ` })] }, `${filter.name}${filter.emitterId}`\n  );\n};\nexport default CrossFilter;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}