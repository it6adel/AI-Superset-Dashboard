{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * Checks if a given item matches the ITableColumn interface\n * @param item Object to check if it matches the ITableColumn interface\n * @returns boolean true if matches interface\n */\nexport const isITableColumn = (item) => {\n  let match = true;\n  const BASE_ERROR = 'The object provided to isITableColumn does match the interface.';\n  if (typeof (item == null ? void 0 : item.name) !== 'string') {\n    match = false;\n    // eslint-disable-next-line no-console\n    console.error(`${BASE_ERROR} The property 'name' is required and must be a string`);\n  }\n  if (match && typeof (item == null ? void 0 : item.type) !== 'string') {\n    match = false;\n    // eslint-disable-next-line no-console\n    console.error(`${BASE_ERROR} The property 'type' is required and must be a string`);\n  }\n  return match;\n};\n/**\n * Checks if a given item matches the isIDatabaseTable interface\n * @param item Object to check if it matches the isIDatabaseTable interface\n * @returns boolean true if matches interface\n */\nexport const isIDatabaseTable = (item) => {\n  let match = true;\n  if (typeof (item == null ? void 0 : item.name) !== 'string') {\n    match = false;\n  }\n  if (match && !Array.isArray(item.columns)) {\n    match = false;\n  }\n  if (match && item.columns.length > 0) {\n    const invalid = item.columns.some((column, index) => {\n      const valid = isITableColumn(column);\n      if (!valid) {\n        // eslint-disable-next-line no-console\n        console.error(`The provided object does not match the IDatabaseTable interface. columns[${index}] is invalid and does not match the ITableColumn interface`);\n      }\n      return !valid;\n    });\n    match = !invalid;\n  }\n  return match;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}