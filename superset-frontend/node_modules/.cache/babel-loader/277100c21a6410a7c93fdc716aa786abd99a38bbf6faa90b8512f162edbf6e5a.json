{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport { ParentSize } from '@visx/responsive';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst defaultProps = {\n  className: '',\n  height: 'auto',\n  position: 'top',\n  width: 'auto'\n};\nconst LEGEND_STYLE_BASE = {\n  display: 'flex',\n  flexGrow: 0,\n  flexShrink: 0,\n  order: -1\n};\nconst CHART_STYLE_BASE = {\n  flexBasis: 'auto',\n  flexGrow: 1,\n  flexShrink: 1,\n  position: 'relative'\n};\nclass WithLegend extends PureComponent {\n\n  getContainerDirection() {\n    const { position } = this.props;\n    if (position === 'left') {\n      return 'row';\n    }\n    if (position === 'right') {\n      return 'row-reverse';\n    }\n    if (position === 'bottom') {\n      return 'column-reverse';\n    }\n    return 'column';\n  }\n  getLegendJustifyContent() {\n    const { legendJustifyContent, position } = this.props;\n    if (legendJustifyContent) {\n      return legendJustifyContent;\n    }\n    if (position === 'left' || position === 'right') {\n      return 'flex-start';\n    }\n    return 'flex-end';\n  }\n  render() {\n    const { className, debounceTime, width, height, position, renderChart, renderLegend } = this.props;\n    const isHorizontal = position === 'left' || position === 'right';\n    const style = {\n      display: 'flex',\n      flexDirection: this.getContainerDirection(),\n      height,\n      width\n    };\n    const chartStyle = { ...CHART_STYLE_BASE };\n    if (isHorizontal) {\n      chartStyle.width = 0;\n    } else\n    {\n      chartStyle.height = 0;\n    }\n    const legendDirection = isHorizontal ? 'column' : 'row';\n    const legendStyle = {\n      ...LEGEND_STYLE_BASE,\n      flexDirection: legendDirection,\n      justifyContent: this.getLegendJustifyContent()\n    };\n    return _jsxs(\"div\", { className: `with-legend ${className}`, style: style, children: [\n      renderLegend && _jsx(\"div\", { className: \"legend-container\", style: legendStyle, children:\n        renderLegend({\n          // Pass flexDirection for @vx/legend to arrange legend items\n          direction: legendDirection\n        }) }\n      ),\n      _jsx(\"div\", { className: \"main-container\", style: chartStyle, children:\n        _jsx(ParentSize, { debounceTime: debounceTime, children:\n          (parent) => parent.width > 0 && parent.height > 0 ?\n          // Only render when necessary\n          renderChart(parent) :\n          null }\n        ) }\n      )] }\n    );\n  }\n}WithLegend.defaultProps = defaultProps;\nexport default WithLegend;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}