{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback, useState } from 'react';\nimport { css, t, getChartMetadataRegistry, styled } from '@superset-ui/core';\nimport { usePluginContext } from 'src/components/DynamicPlugins';\nimport Modal from 'src/components/Modal';\nimport { noOp } from 'src/utils/common';\nimport getBootstrapData from 'src/utils/getBootstrapData';\nimport { FilterPlugins } from 'src/constants';\nimport VizTypeGallery, { MAX_ADVISABLE_VIZ_GALLERY_WIDTH } from './VizTypeGallery';\nimport { FastVizSwitcher } from './FastVizSwitcher';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst bootstrapData = getBootstrapData();\nconst denyList = (bootstrapData.common.conf.VIZ_TYPE_DENYLIST || []).concat(Object.values(FilterPlugins));\nconst metadataRegistry = getChartMetadataRegistry();\nexport const VIZ_TYPE_CONTROL_TEST_ID = 'viz-type-control';\nfunction VizSupportValidation({ vizType }) {\n  const state = usePluginContext();\n  if (state.loading || metadataRegistry.has(vizType)) {\n    return null;\n  }\n  return _jsxs(\"div\", { className: \"text-danger\", css: (theme) => css`\n        margin-top: ${theme.gridUnit}px;\n      `, children: [\n\n\n    _jsx(\"i\", { className: \"fa fa-exclamation-circle text-danger\" }), ' ',\n    _jsx(\"small\", { children: t('This visualization type is not supported.') })] }\n  );\n}\nconst UnpaddedModal = styled(Modal)`\n  .antd5-modal-body {\n    padding: 0;\n  }\n`;\n/** Manages the viz type and the viz picker modal */\nconst VizTypeControl = ({ value: initialValue, onChange = noOp, isModalOpenInit }) => {\n  const [showModal, setShowModal] = useState(!!isModalOpenInit);\n  // a trick to force re-initialization of the gallery each time the modal opens,\n  // ensuring that the modal always opens to the correct category.\n  const [modalKey, setModalKey] = useState(0);\n  const [selectedViz, setSelectedViz] = useState(initialValue);\n  const openModal = useCallback(() => {\n    setShowModal(true);\n  }, []);\n  const onSubmit = useCallback(() => {\n    onChange(selectedViz);\n    setShowModal(false);\n  }, [selectedViz, onChange]);\n  const onCancel = useCallback(() => {\n    setShowModal(false);\n    setModalKey((key) => key + 1);\n    // make sure the modal re-opens to the last submitted viz\n    setSelectedViz(initialValue);\n  }, [initialValue]);\n  return _jsxs(_Fragment, { children: [\n    _jsxs(\"div\", { css: (theme) => css`\n          min-width: ${theme.gridUnit * 72}px;\n          max-width: fit-content;\n        `, children: [\n      _jsx(FastVizSwitcher, { onChange: onChange, currentSelection: initialValue }),\n      initialValue && _jsx(VizSupportValidation, { vizType: initialValue })] }\n    ),\n    _jsx(\"div\", { css: (theme) => css`\n          display: flex;\n          justify-content: flex-end;\n          margin-top: ${theme.gridUnit * 3}px;\n          color: ${theme.colors.grayscale.base};\n          text-decoration: underline;\n        `, children:\n      _jsx(\"span\", { role: \"button\", tabIndex: 0, onClick: openModal, children:\n        t('View all charts') }\n      ) }\n    ),\n    _jsx(UnpaddedModal, { show: showModal, onHide: onCancel, title: t('Select a visualization type'), primaryButtonName: t('Select'), disablePrimaryButton: !selectedViz, onHandledPrimaryAction: onSubmit, maxWidth: `${MAX_ADVISABLE_VIZ_GALLERY_WIDTH}px`, responsive: true, children:\n\n      _jsx(VizTypeGallery, { selectedViz: selectedViz, onChange: setSelectedViz, onDoubleClick: onSubmit, denyList: denyList }, modalKey) }\n    )] }\n  );\n};\nexport default VizTypeControl;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}