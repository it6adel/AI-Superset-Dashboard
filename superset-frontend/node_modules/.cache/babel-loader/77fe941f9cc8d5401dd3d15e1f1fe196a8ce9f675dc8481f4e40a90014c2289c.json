{"ast":null,"code":"import { css as _css } from \"@emotion/react\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint camelcase: 0 */\nimport { Component } from 'react';\nimport rison from 'rison';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport { css, DatasourceType, isDefined, logging, styled, SupersetClient, t } from '@superset-ui/core';\nimport { Input } from 'src/components/Input';\nimport { Form, FormItem } from 'src/components/Form';\nimport Alert from 'src/components/Alert';\nimport Modal from 'src/components/Modal';\nimport { Radio } from 'src/components/Radio';\nimport Button from 'src/components/Button';\nimport { AsyncSelect } from 'src/components';\nimport Loading from 'src/components/Loading';\nimport { canUserEditDashboard } from 'src/dashboard/util/permissionUtils';\nimport { setSaveChartModalVisibility } from 'src/explore/actions/saveModalActions';\n// Session storage key for recent dashboard\nimport { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";const SK_DASHBOARD_ID = 'save_chart_recent_dashboard';\nexport const StyledModal = styled(Modal)`\n  .antd5-modal-body {\n    overflow: visible;\n  }\n  i {\n    position: absolute;\n    top: -${({ theme }) => theme.gridUnit * 5.25}px;\n    left: ${({ theme }) => theme.gridUnit * 26.75}px;\n  }\n`;\nclass SaveModal extends Component {\n  constructor(props) {var _props$datasource;\n    super(props);this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    handleDatasetNameChange = (e) => {\n      // @ts-expect-error\n      this.setState({ datasetName: e.target.value });\n    };this.\n\n\n\n\n\n\n\n\n\n\n\n\n    handleRedirect = (windowLocationSearch, chart) => {\n      const searchParams = new URLSearchParams(windowLocationSearch);\n      searchParams.set('save_action', this.state.action);\n      if (this.state.action !== 'overwrite') {\n        searchParams.delete('form_data_key');\n      }\n      searchParams.set('slice_id', chart.id.toString());\n      return searchParams;\n    };this.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    loadDashboard = async (id) => {\n      const response = await SupersetClient.get({\n        endpoint: `/api/v1/dashboard/${id}`\n      });\n      return response.json.result;\n    };this.\n    loadDashboards = async (search, page, pageSize) => {\n      const queryParams = rison.encode({\n        columns: ['id', 'dashboard_title'],\n        filters: [\n        {\n          col: 'dashboard_title',\n          opr: 'ct',\n          value: search\n        },\n        {\n          col: 'owners',\n          opr: 'rel_m_m',\n          value: this.props.user.userId\n        }],\n\n        page,\n        page_size: pageSize,\n        order_column: 'dashboard_title'\n      });\n      const { json } = await SupersetClient.get({\n        endpoint: `/api/v1/dashboard/?q=${queryParams}`\n      });\n      const { result, count } = json;\n      return {\n        data: result.map((dashboard) => ({\n          value: dashboard.id,\n          label: dashboard.dashboard_title\n        })),\n        totalCount: count\n      };\n    };this.\n    renderSaveChartModal = () => {var _this$props$datasourc;\n      const info = this.info();\n      return _jsxs(Form, { layout: \"vertical\", children: [\n        _jsxs(FormItem, { children: [\n          _jsx(Radio, { id: \"overwrite-radio\", disabled: !this.canOverwriteSlice(), checked: this.state.action === 'overwrite', onChange: () => this.changeAction('overwrite'), children:\n            t('Save (Overwrite)') }\n          ),\n          _jsx(Radio, { id: \"saveas-radio\", checked: this.state.action === 'saveas', onChange: () => this.changeAction('saveas'), children:\n            t('Save as...') }\n          )] }\n        ),\n        _jsx(\"hr\", {}),\n        _jsx(FormItem, { label: t('Chart name'), required: true, children:\n          _jsx(Input, { name: \"new_slice_name\", type: \"text\", placeholder: \"Name\", value: this.state.newSliceName, onChange: this.onSliceNameChange }) }\n        ),\n        ((_this$props$datasourc = this.props.datasource) == null ? void 0 : _this$props$datasourc.type) === 'query' && _jsxs(FormItem, { label: t('Dataset Name'), required: true, children: [\n          _jsx(InfoTooltipWithTrigger, { tooltip: t('A reusable dataset will be saved with your chart.'), placement: \"right\" }),\n          _jsx(Input, { name: \"dataset_name\", type: \"text\", placeholder: \"Dataset Name\", value: this.state.datasetName, onChange: this.handleDatasetNameChange })] }\n        ),\n        _jsx(FormItem, { label: t('Add to dashboard'), children:\n          _jsx(AsyncSelect, { allowClear: true, allowNewOptions: true, ariaLabel: t('Select a dashboard'), options: this.loadDashboards, onChange: this.onDashboardChange, value: this.state.dashboard, placeholder: _jsxs(\"div\", { children: [\n              _jsx(\"b\", { children: t('Select') }),\n              t(' a dashboard OR '),\n              _jsx(\"b\", { children: t('create') }),\n              t(' a new one')] }\n            ) }) }\n        ),\n        info && _jsx(Alert, { type: \"info\", message: info, closable: false }),\n        this.props.alert && _jsx(Alert, { css: /*#__PURE__*/_css({ marginTop: info ? 16 : undefined }, process.env.NODE_ENV === \"production\" ? \"\" : \";label:SaveModal;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"), type: \"warning\", message: this.props.alert, closable: false })] }\n      );\n    };this.\n    info = () => {\n      const isNewDashboard = this.isNewDashboard();\n      let chartWillBeCreated = false;\n      if (this.props.slice && (\n      this.state.action !== 'overwrite' || !this.canOverwriteSlice())) {\n        chartWillBeCreated = true;\n      }\n      if (chartWillBeCreated && isNewDashboard) {\n        return t('A new chart and dashboard will be created.');\n      }\n      if (chartWillBeCreated) {\n        return t('A new chart will be created.');\n      }\n      if (isNewDashboard) {\n        return t('A new dashboard will be created.');\n      }\n      return null;\n    };this.\n    renderFooter = () => {var _this$props$datasourc2, _this$props$datasourc3;return _jsxs(\"div\", { children: [\n        _jsx(Button, { id: \"btn_cancel\", buttonSize: \"small\", onClick: this.onHide, children:\n          t('Cancel') }\n        ),\n        _jsx(Button, { id: \"btn_modal_save_goto_dash\", buttonSize: \"small\", disabled: !this.state.newSliceName ||\n          !this.state.dashboard ||\n          ((_this$props$datasourc2 = this.props.datasource) == null ? void 0 : _this$props$datasourc2.type) !== DatasourceType.Table &&\n          !this.state.datasetName, onClick: () => this.saveOrOverwrite(true), children:\n          t('Save & go to dashboard') }\n        ),\n        _jsx(Button, { id: \"btn_modal_save\", buttonSize: \"small\", buttonStyle: \"primary\", onClick: () => this.saveOrOverwrite(false), disabled: this.state.isLoading ||\n          !this.state.newSliceName ||\n          ((_this$props$datasourc3 = this.props.datasource) == null ? void 0 : _this$props$datasourc3.type) !== DatasourceType.Table &&\n          !this.state.datasetName, children:\n          t('Save') }\n        )] }\n      );};this.state = { newSliceName: props.sliceName, datasetName: (_props$datasource = props.datasource) == null ? void 0 : _props$datasource.name, action: this.canOverwriteSlice() ? 'overwrite' : 'saveas', isLoading: false, dashboard: undefined };this.onDashboardChange = this.onDashboardChange.bind(this);this.onSliceNameChange = this.onSliceNameChange.bind(this);this.changeAction = this.changeAction.bind(this);this.saveOrOverwrite = this.saveOrOverwrite.bind(this);this.isNewDashboard = this.isNewDashboard.bind(this);this.onHide = this.onHide.bind(this);}isNewDashboard() {const { dashboard } = this.state;return typeof (dashboard == null ? void 0 : dashboard.value) === 'string';}canOverwriteSlice() {var _this$props$slice, _this$props$slice$own, _this$props$slice2;return ((_this$props$slice = this.props.slice) == null ? void 0 : (_this$props$slice$own = _this$props$slice.owners) == null ? void 0 : _this$props$slice$own.includes(this.props.user.userId)) && !((_this$props$slice2 = this.props.slice) != null && _this$props$slice2.is_managed_externally);}async componentDidMount() {let { dashboardId } = this.props;if (!dashboardId) {let lastDashboard = null;try {lastDashboard = sessionStorage.getItem(SK_DASHBOARD_ID);} catch (error) {// continue regardless of error\n      }dashboardId = lastDashboard && parseInt(lastDashboard, 10);}if (dashboardId) {try {const result = await this.loadDashboard(dashboardId);if (canUserEditDashboard(result, this.props.user)) {this.setState({ dashboard: { label: result.dashboard_title, value: result.id } });}} catch (error) {logging.warn(error);this.props.addDangerToast(t('An error occurred while loading dashboard information.'));}}}onSliceNameChange(event) {this.setState({ newSliceName: event.target.value });}onDashboardChange(dashboard) {this.setState({ dashboard });}changeAction(action) {this.setState({ action });}onHide() {this.props.dispatch(setSaveChartModalVisibility(false));}async saveOrOverwrite(gotodash) {this.setState({ isLoading: true });try {var _this$props$datasourc4;if (((_this$props$datasourc4 = this.props.datasource) == null ? void 0 : _this$props$datasourc4.type) === DatasourceType.Query) {const { schema, sql, database } = this.props.datasource;const { templateParams } = this.props.datasource;await this.props.actions.saveDataset({ schema, sql, database, templateParams, datasourceName: this.state.datasetName });} //  Get chart dashboards\n      let sliceDashboards = [];if (this.props.slice && this.state.action === 'overwrite') {sliceDashboards = await this.props.actions.getSliceDashboards(this.props.slice);}const formData = this.props.form_data || {};delete formData.url_params;let dashboard = null;if (this.state.dashboard) {var _dashboard;let validId = this.state.dashboard.value;if (this.isNewDashboard()) {const response = await this.props.actions.createDashboard(this.state.dashboard.label);validId = response.id;}try {dashboard = await this.loadDashboard(validId);} catch (error) {this.props.actions.saveSliceFailed();return;}if (isDefined(dashboard) && isDefined((_dashboard = dashboard) == null ? void 0 : _dashboard.id)) {sliceDashboards = sliceDashboards.includes(dashboard.id) ? sliceDashboards : [...sliceDashboards, dashboard.id];formData.dashboards = sliceDashboards;}} // Sets the form data\n      this.props.actions.setFormData({ ...formData }); //  Update or create slice\n      let value;if (this.state.action === 'overwrite') {value = await this.props.actions.updateSlice(this.props.slice, this.state.newSliceName, sliceDashboards, dashboard ? { title: dashboard.dashboard_title, new: this.isNewDashboard() } : null);} else {value = await this.props.actions.createSlice(this.state.newSliceName, sliceDashboards, dashboard ? { title: dashboard.dashboard_title, new: this.isNewDashboard() } : null);}try {if (dashboard) {sessionStorage.setItem(SK_DASHBOARD_ID, `${dashboard.id}`);} else {sessionStorage.removeItem(SK_DASHBOARD_ID);}} catch (error) {// continue regardless of error\n      } // Go to new dashboard url\n      if (gotodash && dashboard) {this.props.history.push(dashboard.url);return;}const searchParams = this.handleRedirect(window.location.search, value);this.props.history.replace(`/explore/?${searchParams.toString()}`);this.setState({ isLoading: false });this.onHide();} finally {this.setState({ isLoading: false });}}render() {return _jsx(StyledModal, { show: this.props.isVisible, onHide: this.onHide, title: t('Save chart'), footer: this.renderFooter(), children: this.state.isLoading ? _jsx(\"div\", { css: css`\n              display: flex;\n              justify-content: center;\n            `, children: _jsx(Loading, { position: \"normal\" }) }) : this.renderSaveChartModal() });\n  }\n}\nfunction mapStateToProps({ explore, saveModal, user }) {\n  return {\n    datasource: explore.datasource,\n    slice: explore.slice,\n    user,\n    dashboards: saveModal.dashboards,\n    alert: saveModal.saveModalAlert,\n    isVisible: saveModal.isVisible\n  };\n}\nexport default withRouter(connect(mapStateToProps)(SaveModal));\n// User for testing purposes need to revisit once we convert this to functional component\nexport { SaveModal as PureSaveModal };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}