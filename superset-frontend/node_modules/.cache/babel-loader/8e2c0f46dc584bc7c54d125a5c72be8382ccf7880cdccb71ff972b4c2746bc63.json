{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getNumberFormatter, t, tn } from '@superset-ui/core';\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst limitReachedMsg = t('The row limit set for the chart was reached. The chart may show partial data.');\nexport default function RowCountLabel(props) {\n  const { rowcount = 0, limit = null, loading } = props;\n  const limitReached = limit && rowcount >= limit;\n  const type = limitReached || rowcount === 0 && !loading ? 'danger' : 'default';\n  const formattedRowCount = getNumberFormatter()(rowcount);\n  const label = _jsx(Label, { type: type, children:\n    loading ? t('Loading...') : _jsx(\"span\", { children:\n      tn('%s row', '%s rows', rowcount, formattedRowCount) }\n    ) }\n  );\n  return limitReached ? _jsx(Tooltip, { id: \"tt-rowcount-tooltip\", title: _jsx(\"span\", { children: limitReachedMsg }), children:\n    label }\n  ) : label;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}