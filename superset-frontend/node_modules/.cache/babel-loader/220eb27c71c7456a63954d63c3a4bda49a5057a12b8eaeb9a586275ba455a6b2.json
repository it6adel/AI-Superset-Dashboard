{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isFreeFormAdhocFilter, isSimpleAdhocFilter } from '@superset-ui/core';\nimport { OPERATOR_ENUM_TO_OPERATOR_TYPE, Operators } from 'src/explore/constants';\nimport { getSimpleSQLExpression } from 'src/explore/exploreUtils';\nexport const OPERATORS_TO_SQL = {\n  '==': '=',\n  '!=': '<>',\n  '>': '>',\n  '<': '<',\n  '>=': '>=',\n  '<=': '<=',\n  IN: 'IN',\n  'NOT IN': 'NOT IN',\n  LIKE: 'LIKE',\n  ILIKE: 'ILIKE',\n  REGEX: 'REGEX',\n  'IS NOT NULL': 'IS NOT NULL',\n  'IS NULL': 'IS NULL',\n  'IS TRUE': 'IS TRUE',\n  'IS FALSE': 'IS FALSE',\n  'LATEST PARTITION': ({ datasource }) => `= '{{ presto.latest_partition('${datasource.schema}.${datasource.datasource_name}') }}'`\n};\nexport const translateToSql = (adhocFilter, { useSimple } = { useSimple: false }) => {\n  if (isSimpleAdhocFilter(adhocFilter) || useSimple) {\n    const { subject, operator } = adhocFilter;\n    const comparator = 'comparator' in adhocFilter ? adhocFilter.comparator : undefined;\n    const op = operator &&\n    // 'LATEST PARTITION' supported callback only\n    operator ===\n    OPERATOR_ENUM_TO_OPERATOR_TYPE[Operators.LatestPartition].operation ?\n    // @ts-ignore TODO: fix missing operator type `NOT LIKE` and `TEMPORAL RANGE`\n    // Also to fix type incompability between AdhocFilter and Latest Partition callback args.\n    OPERATORS_TO_SQL[operator](adhocFilter) :\n    // @ts-ignore\n    // @ts-ignore TODO: fix missing operator type `NOT LIKE` and `TEMPORAL RANGE`.\n    OPERATORS_TO_SQL[operator];\n    return getSimpleSQLExpression(subject, op, comparator);\n  }\n  if (isFreeFormAdhocFilter(adhocFilter)) {\n    return adhocFilter.sqlExpression;\n  }\n  return '';\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}