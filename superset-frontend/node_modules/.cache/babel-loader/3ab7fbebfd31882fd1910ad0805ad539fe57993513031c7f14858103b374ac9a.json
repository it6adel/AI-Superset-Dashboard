{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Loadable from 'react-loadable';\nconst defaultProps = {\n  onRenderFailure() {},\n  onRenderSuccess() {}\n};\nexport default function createLoadableRenderer(options) {\n  const LoadableRenderer = Loadable.Map(options);\n  // Extends the behavior of LoadableComponent to provide post-render listeners\n  class CustomLoadableRenderer extends LoadableRenderer {\n\n    componentDidMount() {\n      this.afterRender();\n    }\n    componentDidUpdate() {\n      this.afterRender();\n    }\n    afterRender() {\n      const { loaded, loading, error } = this.state;\n      const { onRenderFailure, onRenderSuccess } = this.props;\n      if (!loading) {\n        if (error) {\n          onRenderFailure(error);\n        } else\n        if (loaded && Object.keys(loaded).length > 0) {\n          onRenderSuccess();\n        }\n      }\n    }\n  }CustomLoadableRenderer.defaultProps = void 0;\n  CustomLoadableRenderer.defaultProps = defaultProps;\n  CustomLoadableRenderer.preload = LoadableRenderer.preload;\n  return CustomLoadableRenderer;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}