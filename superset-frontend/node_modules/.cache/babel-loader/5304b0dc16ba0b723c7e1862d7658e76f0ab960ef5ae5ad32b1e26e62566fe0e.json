{"ast":null,"code":"function _EMOTION_STRINGIFIED_CSS_ERROR__() {return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";} /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo, useState, useCallback, useEffect } from 'react';\nimport Modal from 'src/components/Modal';\nimport { Input, TextArea } from 'src/components/Input';\nimport Button from 'src/components/Button';\nimport { AsyncSelect, Row, Col, AntdForm } from 'src/components';\nimport rison from 'rison';\nimport { t, SupersetClient, styled, isFeatureEnabled, FeatureFlag, getClientErrorObject, ensureIsArray, useTheme, css } from '@superset-ui/core';\nimport Icons from 'src/components/Icons';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport { loadTags } from 'src/components/Tags/utils';\nimport { fetchTags, OBJECT_TYPES } from 'src/features/tags/tags';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst FormItem = AntdForm.Item;\nconst StyledFormItem = styled(AntdForm.Item)`\n  margin-bottom: 0;\n`;\nconst StyledHelpBlock = styled.span`\n  margin-bottom: 0;\n`;var _ref = process.env.NODE_ENV === \"production\" ? { name: \"1blj7km\", styles: \"margin-top:1em\" } : { name: \"1gtq0eh-PropertiesModal\", styles: \"margin-top:1em;label:PropertiesModal;/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\", toString: _EMOTION_STRINGIFIED_CSS_ERROR__ };\nfunction PropertiesModal({ slice, onHide, onSave, show, addSuccessToast }) {\n  const theme = useTheme();\n  const [submitting, setSubmitting] = useState(false);\n  const [form] = AntdForm.useForm();\n  // values of form inputs\n  const [name, setName] = useState(slice.slice_name || '');\n  const [selectedOwners, setSelectedOwners] = useState(null);\n  const [tags, setTags] = useState([]);\n  const tagsAsSelectValues = useMemo(() => {\n    const selectTags = tags.map((tag) => ({\n      value: tag.id,\n      label: tag.name\n    }));\n    return selectTags;\n  }, [tags.length]);\n  function showError({ error, statusText, message }) {\n    let errorText = error || statusText || t('An error has occurred');\n    if (message === 'Forbidden') {\n      errorText = t('You do not have permission to edit this chart');\n    }\n    Modal.error({\n      title: t('Error'),\n      content: errorText,\n      okButtonProps: { danger: true, className: 'btn-danger' }\n    });\n  }\n  const fetchChartOwners = useCallback(async function fetchChartOwners() {\n    try {var _chart$owners;\n      const response = await SupersetClient.get({\n        endpoint: `/api/v1/chart/${slice.slice_id}`\n      });\n      const chart = response.json.result;\n      setSelectedOwners(chart == null ? void 0 : (_chart$owners = chart.owners) == null ? void 0 : _chart$owners.map((owner) => ({\n        value: owner.id,\n        label: `${owner.first_name} ${owner.last_name}`\n      })));\n    }\n    catch (response) {\n      const clientError = await getClientErrorObject(response);\n      showError(clientError);\n    }\n  }, [slice.slice_id]);\n  const loadOptions = useMemo(() => (input = '', page, pageSize) => {\n    const query = rison.encode({\n      filter: input,\n      page,\n      page_size: pageSize\n    });\n    return SupersetClient.get({\n      endpoint: `/api/v1/chart/related/owners?q=${query}`\n    }).then((response) => ({\n      data: response.json.result.\n      filter((item) => item.extra.active).\n      map((item) => ({\n        value: item.value,\n        label: item.text\n      })),\n      totalCount: response.json.count\n    }));\n  }, []);\n  const onSubmit = async (values) => {\n    setSubmitting(true);\n    const { certified_by: certifiedBy, certification_details: certificationDetails, description, cache_timeout: cacheTimeout } = values;\n    const payload = {\n      slice_name: name || null,\n      description: description || null,\n      cache_timeout: cacheTimeout || null,\n      certified_by: certifiedBy || null,\n      certification_details: certifiedBy && certificationDetails ? certificationDetails : null\n    };\n    if (selectedOwners) {\n      payload.owners = selectedOwners.map((o) => o.value);\n    }\n    if (isFeatureEnabled(FeatureFlag.TaggingSystem)) {\n      payload.tags = tags.map((tag) => tag.id);\n    }\n    try {\n      const res = await SupersetClient.put({\n        endpoint: `/api/v1/chart/${slice.slice_id}`,\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      });\n      // update the redux state\n      const updatedChart = {\n        ...payload,\n        ...res.json.result,\n        tags,\n        id: slice.slice_id,\n        owners: selectedOwners\n      };\n      onSave(updatedChart);\n      addSuccessToast(t('Chart properties updated'));\n      onHide();\n    }\n    catch (res) {\n      const clientError = await getClientErrorObject(res);\n      showError(clientError);\n    }\n    setSubmitting(false);\n  };\n  const ownersLabel = t('Owners');\n  // get the owners of this slice\n  useEffect(() => {\n    fetchChartOwners();\n  }, [fetchChartOwners]);\n  // update name after it's changed in another modal\n  useEffect(() => {\n    setName(slice.slice_name || '');\n  }, [slice.slice_name]);\n  useEffect(() => {\n    if (!isFeatureEnabled(FeatureFlag.TaggingSystem))\n    return;\n    try {\n      fetchTags({\n        objectType: OBJECT_TYPES.CHART,\n        objectId: slice.slice_id,\n        includeTypes: false\n      }, (tags) => setTags(tags), (error) => {\n        showError(error);\n      });\n    }\n    catch (error) {\n      showError(error);\n    }\n  }, [slice.slice_id]);\n  const handleChangeTags = (tags) => {\n    const parsedTags = ensureIsArray(tags).map((r) => ({\n      id: r.value,\n      name: r.label\n    }));\n    setTags(parsedTags);\n  };\n  const handleClearTags = () => {\n    setTags([]);\n  };\n  return _jsx(Modal, { show: show, onHide: onHide, title: _jsxs(\"span\", { children: [\n      _jsx(Icons.EditOutlined, { css: css`\n              margin: auto ${theme.gridUnit * 2}px auto 0;\n            ` }),\n      t('Edit Chart Properties')] }\n    ), footer: _jsxs(_Fragment, { children: [\n      _jsx(Button, { htmlType: \"button\", buttonSize: \"small\", onClick: onHide, cta: true, children:\n        t('Cancel') }\n      ),\n      _jsx(Button, { htmlType: \"submit\", buttonSize: \"small\", buttonStyle: \"primary\", onClick: form.submit, disabled: submitting || !name || slice.is_managed_externally, tooltip: slice.is_managed_externally ?\n        t(\"This chart is managed externally, and can't be edited in Superset\") :\n        '', cta: true, children:\n        t('Save') }\n      )] }\n    ), responsive: true, wrapProps: {}, children:\n    _jsx(AntdForm, { form: form, onFinish: onSubmit, layout: \"vertical\", initialValues: {\n        name: slice.slice_name || '',\n        description: slice.description || '',\n        cache_timeout: slice.cache_timeout != null ? slice.cache_timeout : '',\n        certified_by: slice.certified_by || '',\n        certification_details: slice.certified_by && slice.certification_details ?\n        slice.certification_details :\n        ''\n      }, children:\n      _jsxs(Row, { gutter: 16, children: [\n        _jsxs(Col, { xs: 24, md: 12, children: [\n          _jsx(\"h3\", { children: t('Basic information') }),\n          _jsx(FormItem, { label: t('Name'), required: true, children:\n            _jsx(Input, { \"aria-label\": t('Name'), name: \"name\", type: \"text\", value: name, onChange: (event) => {var _event$target$value;return setName((_event$target$value = event.target.value) != null ? _event$target$value : '');} }) }\n          ),\n          _jsxs(FormItem, { children: [\n            _jsx(StyledFormItem, { label: t('Description'), name: \"description\", children:\n              _jsx(TextArea, { rows: 3, style: { maxWidth: '100%' } }) }\n            ),\n            _jsx(StyledHelpBlock, { className: \"help-block\", children:\n              t('The description can be displayed as widget headers in the dashboard view. Supports markdown.') }\n            )] }\n          ),\n          _jsx(\"h3\", { children: t('Certification') }),\n          _jsxs(FormItem, { children: [\n            _jsx(StyledFormItem, { label: t('Certified by'), name: \"certified_by\", children:\n              _jsx(Input, { \"aria-label\": t('Certified by') }) }\n            ),\n            _jsx(StyledHelpBlock, { className: \"help-block\", children:\n              t('Person or group that has certified this chart.') }\n            )] }\n          ),\n          _jsxs(FormItem, { children: [\n            _jsx(StyledFormItem, { label: t('Certification details'), name: \"certification_details\", children:\n              _jsx(Input, { \"aria-label\": t('Certification details') }) }\n            ),\n            _jsx(StyledHelpBlock, { className: \"help-block\", children:\n              t('Any additional detail to show in the certification tooltip.') }\n            )] }\n          )] }\n        ),\n        _jsxs(Col, { xs: 24, md: 12, children: [\n          _jsx(\"h3\", { children: t('Configuration') }),\n          _jsxs(FormItem, { children: [\n            _jsx(StyledFormItem, { label: t('Cache timeout'), name: \"cache_timeout\", children:\n              _jsx(Input, { \"aria-label\": \"Cache timeout\" }) }\n            ),\n            _jsx(StyledHelpBlock, { className: \"help-block\", children:\n              t(\"Duration (in seconds) of the caching timeout for this chart. Set to -1 to bypass the cache. Note this defaults to the dataset's timeout if undefined.\") }\n            )] }\n          ),\n          _jsx(\"h3\", { style: { marginTop: '1em' }, children: t('Access') }),\n          _jsxs(FormItem, { label: ownersLabel, children: [\n            _jsx(AsyncSelect, { ariaLabel: ownersLabel, mode: \"multiple\", name: \"owners\", value: selectedOwners || [], onChange: setSelectedOwners, options: loadOptions, disabled: !selectedOwners, allowClear: true }),\n            _jsx(StyledHelpBlock, { className: \"help-block\", children:\n              t('A list of users who can alter the chart. Searchable by name or username.') }\n            )] }\n          ),\n          isFeatureEnabled(FeatureFlag.TaggingSystem) && _jsx(\"h3\", { css: _ref, children: t('Tags') }),\n          isFeatureEnabled(FeatureFlag.TaggingSystem) && _jsxs(FormItem, { children: [\n            _jsx(AsyncSelect, { ariaLabel: \"Tags\", mode: \"multiple\", value: tagsAsSelectValues, options: loadTags, onChange: handleChangeTags, onClear: handleClearTags, allowClear: true }),\n            _jsx(StyledHelpBlock, { className: \"help-block\", children:\n              t('A list of tags that have been applied to this chart.') }\n            )] }\n          )] }\n        )] }\n      ) }\n    ) }\n  );\n}\nexport default withToasts(PropertiesModal);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}