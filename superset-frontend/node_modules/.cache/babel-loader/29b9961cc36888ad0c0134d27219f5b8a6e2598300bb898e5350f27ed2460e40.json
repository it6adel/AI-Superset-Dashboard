{"ast":null,"code":"import _zip from \"lodash/zip\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\n\nimport { css, GenericDataType, styled } from '@superset-ui/core';\nimport { CopyToClipboardButton, FilterInput } from 'src/explore/components/DataTableControl';\nimport { applyFormattingToTabularData } from 'src/utils/common';\nimport { getTimeColumns } from 'src/explore/components/DataTableControl/utils';\nimport RowCountLabel from 'src/explore/components/RowCountLabel';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport const TableControlsWrapper = styled.div`\n  ${({ theme }) => `\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: ${theme.gridUnit * 2}px;\n\n    span {\n      flex-shrink: 0;\n    }\n  `}\n`;\nexport const TableControls = ({ data, datasourceId, onInputChange, columnNames, columnTypes, rowcount, isLoading, canDownload }) => {\n  const originalTimeColumns = getTimeColumns(datasourceId);\n  const formattedTimeColumns = _zip(columnNames, columnTypes).\n  filter(([name, type]) => type === GenericDataType.Temporal &&\n  name &&\n  !originalTimeColumns.includes(name)).\n  map(([colname]) => colname);\n  const formattedData = useMemo(() => applyFormattingToTabularData(data, formattedTimeColumns), [data, formattedTimeColumns]);\n  return _jsxs(TableControlsWrapper, { children: [\n    _jsx(FilterInput, { onChangeHandler: onInputChange, shouldFocus: true }),\n    _jsxs(\"div\", { css: css`\n          display: flex;\n          align-items: center;\n        `, children: [\n      _jsx(RowCountLabel, { rowcount: rowcount, loading: isLoading }),\n      canDownload && _jsx(CopyToClipboardButton, { data: formattedData, columns: columnNames })] }\n    )] }\n  );\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}