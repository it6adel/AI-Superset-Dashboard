{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getChartTransformPropsRegistry } from '@superset-ui/core';\nimport { getChartConfigs, parseSelectedChart } from '../util/transformPropsUtil';\nexport default function transformProps(chartProps) {\n  const { width, height, formData, hooks, theme } = chartProps;\n  const { geomColumn, selectedChart: selectedChartString, chartSize, layerConfigs, mapView, chartBackgroundColor, chartBackgroundBorderRadius } = formData;\n  const { setControlValue = () => {} } = hooks;\n  const selectedChart = parseSelectedChart(selectedChartString);\n  const transformPropsRegistry = getChartTransformPropsRegistry();\n  const chartTransformer = transformPropsRegistry.get(selectedChart.viz_type);\n  const chartConfigs = getChartConfigs(selectedChart, geomColumn, chartProps, chartTransformer);\n  return {\n    width,\n    height,\n    geomColumn,\n    selectedChart,\n    chartConfigs,\n    chartVizType: selectedChart.viz_type,\n    chartSize,\n    layerConfigs,\n    mapView,\n    chartBackgroundColor,\n    chartBackgroundBorderRadius,\n    setControlValue,\n    theme\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}