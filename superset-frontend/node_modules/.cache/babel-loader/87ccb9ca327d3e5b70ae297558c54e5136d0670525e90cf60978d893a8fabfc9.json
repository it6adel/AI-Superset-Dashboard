{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getStandardizedControls } from '@superset-ui/chart-controls';\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport { autozoom, filterNulls, jsColumns, jsDataMutator, jsOnclickHref, jsTooltip, mapboxStyle, spatial, viewport } from '../../utilities/Shared_DeckGL';\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [spatial],\n    ['row_limit'],\n    ['size'],\n    [filterNulls],\n    ['adhoc_filters']]\n\n  },\n  {\n    label: t('Map'),\n    expanded: true,\n    controlSetRows: [\n    [mapboxStyle],\n    [autozoom, viewport],\n    [\n    {\n      name: 'cellSize',\n      config: {\n        type: 'TextControl',\n        label: t('Cell Size'),\n        default: 300,\n        isInt: true,\n        description: t('The size of each cell in meters'),\n        renderTrigger: true,\n        clearable: false\n      }\n    }],\n\n    [\n    {\n      name: 'aggregation',\n      config: {\n        type: 'SelectControl',\n        label: t('Aggregation'),\n        description: t('The function to use when aggregating points into groups'),\n        default: 'sum',\n        clearable: false,\n        renderTrigger: true,\n        choices: [\n        ['sum', t('sum')],\n        ['min', t('min')],\n        ['max', t('max')],\n        ['mean', t('mean')]]\n\n      }\n    }],\n\n    [\n    {\n      name: 'contours',\n      config: {\n        type: 'ContourControl',\n        label: t('Contours'),\n        renderTrigger: true,\n        description: t('Define contour layers. Isolines represent a collection of line segments that ' +\n        'serparate the area above and below a given threshold. Isobands represent a ' +\n        'collection of polygons that fill the are containing values in a given ' +\n        'threshold range.')\n      }\n    }]]\n\n\n  },\n  {\n    label: t('Advanced'),\n    controlSetRows: [\n    [jsColumns],\n    [jsDataMutator],\n    [jsTooltip],\n    [jsOnclickHref]]\n\n  }],\n\n  controlOverrides: {\n    size: {\n      label: t('Weight'),\n      description: t(\"Metric used as a weight for the grid's coloring\"),\n      validators: [validateNonEmpty]\n    }\n  },\n  formDataOverrides: (formData) => ({\n    ...formData,\n    size: getStandardizedControls().shiftMetric()\n  })\n};\nexport default config;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}