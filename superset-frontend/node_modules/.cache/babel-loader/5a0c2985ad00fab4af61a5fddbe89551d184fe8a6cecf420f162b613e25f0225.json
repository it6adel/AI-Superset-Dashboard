{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, validateNonEmpty } from '@superset-ui/core';\nimport { getStandardizedControls } from '@superset-ui/chart-controls';\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['series'],\n    ['metric'],\n    ['adhoc_filters'],\n    ['row_limit'],\n    ['sort_by_metric']]\n\n  },\n  {\n    label: t('Options'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'size_from',\n      config: {\n        type: 'TextControl',\n        isInt: true,\n        label: t('Minimum Font Size'),\n        renderTrigger: true,\n        default: 10,\n        description: t('Font size for the smallest value in the list')\n      }\n    },\n    {\n      name: 'size_to',\n      config: {\n        type: 'TextControl',\n        isInt: true,\n        label: t('Maximum Font Size'),\n        renderTrigger: true,\n        default: 70,\n        description: t('Font size for the biggest value in the list')\n      }\n    }],\n\n    [\n    {\n      name: 'rotation',\n      config: {\n        type: 'SelectControl',\n        label: t('Word Rotation'),\n        choices: [\n        ['random', t('random')],\n        ['flat', t('flat')],\n        ['square', t('square')]],\n\n        renderTrigger: true,\n        default: 'square',\n        clearable: false,\n        description: t('Rotation to apply to words in the cloud')\n      }\n    }],\n\n    ['color_scheme']]\n\n  }],\n\n  controlOverrides: {\n    series: {\n      validators: [validateNonEmpty],\n      clearable: false\n    },\n    row_limit: {\n      default: 100\n    }\n  },\n  formDataOverrides: (formData) => ({\n    ...formData,\n    series: getStandardizedControls().shiftColumn(),\n    metric: getStandardizedControls().shiftMetric()\n  })\n};\nexport default config;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}