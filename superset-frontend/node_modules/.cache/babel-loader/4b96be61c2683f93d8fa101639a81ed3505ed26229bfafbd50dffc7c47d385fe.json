{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport { Form } from 'src/components/Form';\nimport { recurseReactClone } from './utils';\nimport Field from './Field';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport default class Fieldset extends PureComponent {\n\n\n\n\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n  onChange(fieldKey, val) {\n    return this.props.onChange({\n      ...this.props.item,\n      [fieldKey]: val\n    });\n  }\n  render() {\n    const { title } = this.props;\n    const propExtender = (field) => ({\n      onChange: this.onChange,\n      value: this.props.item[field.props.fieldKey],\n      compact: this.props.compact\n    });\n    return _jsxs(Form, { className: \"CRUD\", layout: \"vertical\", children: [\n      title && _jsx(\"legend\", { children: title }),\n      recurseReactClone(this.props.children, Field, propExtender)] }\n    );\n  }\n}Fieldset.defaultProps = { compact: false, title: null };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}