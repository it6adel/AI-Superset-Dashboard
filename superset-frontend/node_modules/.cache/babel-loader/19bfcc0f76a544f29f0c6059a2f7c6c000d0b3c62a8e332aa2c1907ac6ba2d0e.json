{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, useTheme, getClientErrorObject, SupersetClient, css } from '@superset-ui/core';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';\nimport withToasts from 'src/components/MessageToasts/withToasts';\nimport CopyToClipboard from 'src/components/CopyToClipboard';\nimport useQueryEditor from 'src/SqlLab/hooks/useQueryEditor';\nimport { LOG_ACTIONS_SQLLAB_COPY_LINK } from 'src/logger/LogUtils';\nimport useLogAction from 'src/logger/useLogAction';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst ShareSqlLabQuery = ({ queryEditorId, addDangerToast }) => {\n  const theme = useTheme();\n  const logAction = useLogAction({ queryEditorId });\n  const { dbId, name, schema, autorun, sql, templateParams } = useQueryEditor(queryEditorId, ['dbId', 'name', 'schema', 'autorun', 'sql', 'templateParams']);\n  const getCopyUrlForPermalink = (callback) => {\n    const sharedQuery = { dbId, name, schema, autorun, sql, templateParams };\n    return SupersetClient.post({\n      endpoint: '/api/v1/sqllab/permalink',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(sharedQuery)\n    }).\n    then(({ json }) => {\n      callback(json.url);\n    }).\n    catch((response) => {\n      getClientErrorObject(response).then(() => {\n        addDangerToast(t('There was an error with your request'));\n      });\n    });\n  };\n  const getCopyUrl = (callback) => {\n    logAction(LOG_ACTIONS_SQLLAB_COPY_LINK, {\n      shortcut: false\n    });\n    return getCopyUrlForPermalink(callback);\n  };\n  const buildButton = () => {\n    const tooltip = t('Copy query link to your clipboard');\n    return _jsxs(Button, { buttonSize: \"small\", tooltip: tooltip, css: css`\n          span > :first-of-type {\n            margin-right: 0;\n          }\n        `, children: [\n      _jsx(Icons.LinkOutlined, { iconColor: theme.colors.primary.base, iconSize: \"m\" }),\n      t('Copy link')] }\n    );\n  };\n  return _jsx(CopyToClipboard, { getText: getCopyUrl, wrapped: false, copyNode: buildButton() });\n};\nexport default withToasts(ShareSqlLabQuery);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}