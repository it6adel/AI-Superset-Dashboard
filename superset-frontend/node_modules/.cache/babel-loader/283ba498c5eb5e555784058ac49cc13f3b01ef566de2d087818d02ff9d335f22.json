{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport Popover from 'src/components/Popover';\nimport { FilterCardContent } from './FilterCardContent';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport const FilterCard = ({ children, filter, getPopupContainer, isVisible: externalIsVisible = true, placement }) => {\n  const [internalIsVisible, setInternalIsVisible] = useState(false);\n  const hidePopover = () => {\n    setInternalIsVisible(false);\n  };\n  useEffect(() => {\n    if (!externalIsVisible) {\n      setInternalIsVisible(false);\n    }\n  }, [externalIsVisible]);\n  return _jsx(Popover, { placement: placement, overlayStyle: {\n      width: '240px'\n    }, mouseEnterDelay: 0.2, mouseLeaveDelay: 0.2, onOpenChange: (visible) => {\n      setInternalIsVisible(externalIsVisible && visible);\n    }, open: externalIsVisible && internalIsVisible, content: _jsx(FilterCardContent, { filter: filter, hidePopover: hidePopover }), getPopupContainer: getPopupContainer != null ? getPopupContainer : () => document.body, arrow: false, children:\n    children }\n  );\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}