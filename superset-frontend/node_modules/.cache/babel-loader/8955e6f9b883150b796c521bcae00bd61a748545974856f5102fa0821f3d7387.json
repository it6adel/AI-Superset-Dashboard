{"ast":null,"code":"export var PandasAxis;\n(function (PandasAxis) {\n  PandasAxis[PandasAxis[\"Row\"] = 0] = \"Row\";\n  PandasAxis[PandasAxis[\"Column\"] = 1] = \"Column\";\n})(PandasAxis || (PandasAxis = {}));\nexport function isPostProcessingAggregation(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'aggregation';\n}\nexport function isPostProcessingBoxplot(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'boxplot';\n}\nexport function isPostProcessingContribution(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'contribution';\n}\nexport function isPostProcessingPivot(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'pivot';\n}\nexport function isPostProcessingProphet(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'prophet';\n}\nexport function isPostProcessingDiff(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'diff';\n}\nexport function isPostProcessingRolling(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'rolling';\n}\nexport function isPostProcessingCum(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'cum';\n}\nexport function isPostProcessingCompare(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'compare';\n}\nexport function isPostProcessingSort(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'sort';\n}\nexport function isPostProcessingResample(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'resample';\n}\nexport function isPostProcessingRename(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'rename';\n}\nexport function isPostProcessingFlatten(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'flatten';\n}\nexport function isPostProcessingRank(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'rank';\n}\nexport function isPostProcessingHistogram(rule) {\n  return (rule == null ? void 0 : rule.operation) === 'histogram';\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}