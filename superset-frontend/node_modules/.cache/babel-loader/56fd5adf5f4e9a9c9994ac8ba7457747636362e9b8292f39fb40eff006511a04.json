{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { t, legacyValidateInteger } from '@superset-ui/core';\nimport { D3_FORMAT_DOCS, D3_TIME_FORMAT_OPTIONS, getStandardizedControls } from '@superset-ui/chart-controls';\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Time'),\n    expanded: true,\n    description: t('Time related form attributes'),\n    controlSetRows: [['granularity_sqla'], ['time_range']]\n  },\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    [\n    {\n      name: 'domain_granularity',\n      config: {\n        type: 'SelectControl',\n        label: t('Domain'),\n        default: 'month',\n        choices: [\n        ['hour', t('hour')],\n        ['day', t('day')],\n        ['week', t('week')],\n        ['month', t('month')],\n        ['year', t('year')]],\n\n        description: t('The time unit used for the grouping of blocks')\n      }\n    },\n    {\n      name: 'subdomain_granularity',\n      config: {\n        type: 'SelectControl',\n        label: t('Subdomain'),\n        default: 'day',\n        choices: [\n        ['min', t('min')],\n        ['hour', t('hour')],\n        ['day', t('day')],\n        ['week', t('week')],\n        ['month', t('month')]],\n\n        description: t('The time unit for each block. Should be a smaller unit than ' +\n        'domain_granularity. Should be larger or equal to Time Grain')\n      }\n    }],\n\n    ['metrics'],\n    ['adhoc_filters']]\n\n  },\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    tabOverride: 'customize',\n    controlSetRows: [\n    ['linear_color_scheme'],\n    [\n    {\n      name: 'cell_size',\n      config: {\n        type: 'TextControl',\n        isInt: true,\n        default: 10,\n        validators: [legacyValidateInteger],\n        renderTrigger: true,\n        label: t('Cell Size'),\n        description: t('The size of the square cell, in pixels')\n      }\n    },\n    {\n      name: 'cell_padding',\n      config: {\n        type: 'TextControl',\n        isInt: true,\n        validators: [legacyValidateInteger],\n        renderTrigger: true,\n        default: 2,\n        label: t('Cell Padding'),\n        description: t('The distance between cells, in pixels')\n      }\n    }],\n\n    [\n    {\n      name: 'cell_radius',\n      config: {\n        type: 'TextControl',\n        isInt: true,\n        validators: [legacyValidateInteger],\n        renderTrigger: true,\n        default: 0,\n        label: t('Cell Radius'),\n        description: t('The pixel radius')\n      }\n    },\n    {\n      name: 'steps',\n      config: {\n        type: 'TextControl',\n        isInt: true,\n        validators: [legacyValidateInteger],\n        renderTrigger: true,\n        default: 10,\n        label: t('Color Steps'),\n        description: t('The number color \"steps\"')\n      }\n    }],\n\n    [\n    'y_axis_format',\n    {\n      name: 'x_axis_time_format',\n      config: {\n        type: 'SelectControl',\n        freeForm: true,\n        label: t('Time Format'),\n        renderTrigger: true,\n        default: 'smart_date',\n        choices: D3_TIME_FORMAT_OPTIONS,\n        description: D3_FORMAT_DOCS\n      }\n    }],\n\n    [\n    {\n      name: 'show_legend',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Legend'),\n        renderTrigger: true,\n        default: true,\n        description: t('Whether to display the legend (toggles)')\n      }\n    },\n    {\n      name: 'show_values',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Values'),\n        renderTrigger: true,\n        default: false,\n        description: t('Whether to display the numerical values within the cells')\n      }\n    }],\n\n    [\n    {\n      name: 'show_metric_name',\n      config: {\n        type: 'CheckboxControl',\n        label: t('Show Metric Names'),\n        renderTrigger: true,\n        default: true,\n        description: t('Whether to display the metric name as a title')\n      }\n    },\n    null]]\n\n\n  }],\n\n  controlOverrides: {\n    y_axis_format: {\n      label: t('Number Format')\n    }\n  },\n  formDataOverrides: (formData) => ({\n    ...formData,\n    metrics: getStandardizedControls().popAllMetrics()\n  })\n};\nexport default config;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}