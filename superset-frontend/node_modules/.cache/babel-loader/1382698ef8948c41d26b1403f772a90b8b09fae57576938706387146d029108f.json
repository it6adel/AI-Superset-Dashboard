{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState } from 'react';\nimport { t } from '@superset-ui/core';\nimport TableView, { EmptyWrapperType } from 'src/components/TableView';\nimport { useFilteredTableData, useTableColumns } from 'src/explore/components/DataTableControl';\nimport { TableControls } from './DataTableControls';import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport const SingleQueryResultPane = ({ data, colnames, coltypes, rowcount, datasourceId, dataSize = 50, isVisible, canDownload }) => {\n  const [filterText, setFilterText] = useState('');\n  // this is to preserve the order of the columns, even if there are integer values,\n  // while also only grabbing the first column's keys\n  const columns = useTableColumns(colnames, coltypes, data, datasourceId, isVisible, {}, // moreConfig\n  true);\n  const filteredData = useFilteredTableData(filterText, data);\n  return _jsxs(_Fragment, { children: [\n    _jsx(TableControls, { data: filteredData, columnNames: colnames, columnTypes: coltypes, rowcount: rowcount, datasourceId: datasourceId, onInputChange: (input) => setFilterText(input), isLoading: false, canDownload: canDownload }),\n    _jsx(TableView, { columns: columns, data: filteredData, pageSize: dataSize, noDataText: t('No results'), emptyWrapperType: EmptyWrapperType.Small, className: \"table-condensed\", isPaginationSticky: true, showRowCount: false, small: true })] }\n  );\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}