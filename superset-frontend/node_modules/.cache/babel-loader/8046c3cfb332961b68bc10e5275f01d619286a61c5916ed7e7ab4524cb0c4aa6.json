{"ast":null,"code":"import { ensureIsArray, t } from '@superset-ui/core';\nimport { getQueryMode, isRawMode } from './shared';\nconst dndAllColumns = {\n  type: 'DndColumnSelect',\n  label: t('Columns'),\n  description: t('Columns to display'),\n  default: [],\n  mapStateToProps({ datasource, controls }, controlState) {\n    const newState = {};\n    if (datasource) {var _datasource$columns$;\n      if (datasource != null && (_datasource$columns$ = datasource.columns[0]) != null && _datasource$columns$.hasOwnProperty('filterable')) {var _datasource$columns;\n        newState.options = datasource == null ? void 0 : (_datasource$columns = datasource.columns) == null ? void 0 : _datasource$columns.filter((c) => c.filterable);\n      } else\n\n      newState.options = datasource.columns;\n    }\n    newState.queryMode = getQueryMode(controls);\n    newState.externalValidationErrors =\n    isRawMode({ controls }) && ensureIsArray(controlState == null ? void 0 : controlState.value).length === 0 ?\n    [t('must have a value')] :\n    [];\n    return newState;\n  },\n  visibility: isRawMode,\n  resetOnHide: false\n};\nexport const allColumnsControlSetItem = {\n  name: 'all_columns',\n  config: dndAllColumns\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}