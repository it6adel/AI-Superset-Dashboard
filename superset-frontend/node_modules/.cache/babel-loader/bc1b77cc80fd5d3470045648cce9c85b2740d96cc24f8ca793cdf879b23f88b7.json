{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { CurrencyFormatter, ensureIsArray, getNumberFormatter, getTimeFormatter, isSavedMetric, NumberFormats, SMART_DATE_DETAILED_ID, SMART_DATE_ID, SMART_DATE_VERBOSE_ID } from '@superset-ui/core';\nexport const getSmartDateDetailedFormatter = () => getTimeFormatter(SMART_DATE_DETAILED_ID);\nexport const getSmartDateFormatter = () => getTimeFormatter(SMART_DATE_ID);\nexport const getSmartDateVerboseFormatter = () => getTimeFormatter(SMART_DATE_VERBOSE_ID);\nexport const getPercentFormatter = (format) => getNumberFormatter(!format || format === NumberFormats.SMART_NUMBER ?\nNumberFormats.PERCENT :\nformat);\nexport const getYAxisFormatter = (metrics, forcePercentFormatter, customFormatters, defaultFormatter, format) => {\n  if (forcePercentFormatter) {\n    return getPercentFormatter(format);\n  }\n  const metricsArray = ensureIsArray(metrics);\n  if (metricsArray.every(isSavedMetric) &&\n  metricsArray.\n  map((metric) => customFormatters[metric]).\n  every((formatter, _, formatters) => {var _formatter$currency, _formatters$, _formatters$$currency;return formatter instanceof CurrencyFormatter &&\n    (formatter == null ? void 0 : (_formatter$currency = formatter.currency) == null ? void 0 : _formatter$currency.symbol) === ((_formatters$ =\n    formatters[0]) == null ? void 0 : (_formatters$$currency = _formatters$.currency) == null ? void 0 : _formatters$$currency.symbol);})) {\n    return customFormatters[metricsArray[0]];\n  }\n  return defaultFormatter != null ? defaultFormatter : getNumberFormatter();\n};\nexport function getTooltipTimeFormatter(format) {\n  if (format === SMART_DATE_ID) {\n    return getSmartDateDetailedFormatter();\n  }\n  if (format) {\n    return getTimeFormatter(format);\n  }\n  return String;\n}\nexport function getXAxisFormatter(format) {\n  if (format === SMART_DATE_ID || !format) {\n    return undefined;\n  }\n  if (format) {\n    return getTimeFormatter(format);\n  }\n  return String;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}