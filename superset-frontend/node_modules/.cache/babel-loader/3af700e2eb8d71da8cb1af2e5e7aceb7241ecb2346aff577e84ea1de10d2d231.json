{"ast":null,"code":"import _isEmpty from \"lodash/isEmpty\";\nimport { URL_PARAMS } from 'src/constants';\nimport { getUrlParam } from 'src/utils/urlUtils';\nimport serializeActiveFilterValues from './serializeActiveFilterValues';\nexport default function getDashboardUrl({ pathname, filters = {}, hash = '', standalone }) {\n  const newSearchParams = new URLSearchParams(window.location.search);\n  if (!_isEmpty(filters)) {\n    // convert flattened { [id_column]: values } object\n    // to nested filter object\n    newSearchParams.set(URL_PARAMS.preselectFilters.name, JSON.stringify(serializeActiveFilterValues(filters)));\n  }\n  if (standalone) {\n    newSearchParams.set(URL_PARAMS.standalone.name, standalone.toString());\n  } else\n  {\n    newSearchParams.delete(URL_PARAMS.standalone.name);\n  }\n  const dataMaskKey = getUrlParam(URL_PARAMS.nativeFiltersKey);\n  if (dataMaskKey) {\n    newSearchParams.set(URL_PARAMS.nativeFiltersKey.name, dataMaskKey);\n  }\n  const hashSection = hash ? `#${hash}` : '';\n  return `${pathname}?${newSearchParams.toString()}${hashSection}`;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}