{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}(); // Utils\n\n\n// Helpers\n\n\nvar _utils = require('./util/utils');\n\nvar _html = require('./helpers/html');\n\nvar html = _interopRequireWildcard(_html);\n\nvar _math = require('./helpers/math');\n\nvar math = _interopRequireWildcard(_math);\n\nvar _strings = require('./helpers/strings');\n\nvar strings = _interopRequireWildcard(_strings);\n\nvar _datetime = require('./helpers/datetime');\n\nvar datetime = _interopRequireWildcard(_datetime);\n\nvar _formatters = require('./helpers/formatters');\n\nvar formatters = _interopRequireWildcard(_formatters);\n\nvar _conditionals = require('./helpers/conditionals');\n\nvar conditionals = _interopRequireWildcard(_conditionals);\n\nfunction _interopRequireWildcard(obj) {if (obj && obj.__esModule) {return obj;} else {var newObj = {};if (obj != null) {for (var key in obj) {if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];}}newObj.default = obj;return newObj;}}\n\nfunction _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError(\"Cannot call a class as a function\");}}\n\n/**\n * Class for just-handlebars-helpers.\n */\nvar H = function () {\n  function H() {\n    _classCallCheck(this, H);\n  }\n\n  _createClass(H, null, [{\n    key: 'registerHelpers',\n\n    /**\n     * Static method to register just-handlebars-helpers with Handlebars.\n     *\n     * @param {*} handlebars\n     */\n    value: function registerHelpers(handlebars) {\n\n      handlebars = handlebars || global.Handlebars;\n\n      if (!(0, _utils.isObject)(handlebars)) {\n        // In case, handlebars is not provided and it's not available\n        // in the global namespace as well throw the error and halt.\n        throw new Error('Handlebars not loaded');\n      }\n\n      // Helpers list\n      var helpers = [math, html, strings, conditionals, datetime, formatters];\n\n      helpers.forEach(function (helper) {\n        // Register all the helper functions to Handlebars\n        for (var name in helper) {\n          handlebars.registerHelper(name, helper[name]);\n        }\n      });\n    }\n  }]);\n\n  return H;\n}();\n\nexports.default = H;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}