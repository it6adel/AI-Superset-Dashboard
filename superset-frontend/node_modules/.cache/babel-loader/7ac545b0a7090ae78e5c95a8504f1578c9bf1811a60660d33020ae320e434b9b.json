{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect, useState } from 'react';\nimport { NO_TIME_RANGE, fetchTimeRange } from '@superset-ui/core';\nimport { Operators } from 'src/explore/constants';\nimport { ExpressionTypes } from '../types';\nexport const useGetTimeRangeLabel = (adhocFilter) => {\n  const [actualTimeRange, setActualTimeRange] = useState({});\n  useEffect(() => {\n    if (adhocFilter.operator !== Operators.TemporalRange ||\n    adhocFilter.expressionType !== ExpressionTypes.Simple) {\n      setActualTimeRange({});\n    }\n    if (adhocFilter.operator === Operators.TemporalRange &&\n    adhocFilter.comparator === NO_TIME_RANGE) {\n      setActualTimeRange({\n        actualTimeRange: `${adhocFilter.subject} (${NO_TIME_RANGE})`,\n        title: NO_TIME_RANGE\n      });\n    }\n    if (adhocFilter.operator === Operators.TemporalRange &&\n    adhocFilter.expressionType === ExpressionTypes.Simple &&\n    adhocFilter.comparator !== NO_TIME_RANGE &&\n    actualTimeRange.title !== adhocFilter.comparator) {\n      fetchTimeRange(adhocFilter.comparator, adhocFilter.subject).then(({ value, error }) => {\n        if (error) {\n          setActualTimeRange({\n            actualTimeRange: `${adhocFilter.subject} (${adhocFilter.comparator})`,\n            title: error\n          });\n        } else\n        {\n          setActualTimeRange({\n            actualTimeRange: value != null ? value : '',\n            title: adhocFilter.comparator\n          });\n        }\n      });\n    }\n  }, [adhocFilter]);\n  return actualTimeRange;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}