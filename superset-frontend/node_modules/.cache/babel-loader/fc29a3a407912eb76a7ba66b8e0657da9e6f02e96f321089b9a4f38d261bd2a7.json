{"ast":null,"code":"import { styled, t, css } from '@superset-ui/core';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport { detectOS } from 'src/utils/common';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst userOS = detectOS();\nexport var KeyboardShortcut;\n(function (KeyboardShortcut) {\n  KeyboardShortcut[\"CtrlR\"] = \"ctrl+r\";\n  KeyboardShortcut[\"CtrlEnter\"] = \"ctrl+enter\";\n  KeyboardShortcut[\"CtrlShiftEnter\"] = \"ctrl+shift+enter\";\n  KeyboardShortcut[\"CtrlP\"] = \"ctrl+p\";\n  KeyboardShortcut[\"CtrlQ\"] = \"ctrl+q\";\n  KeyboardShortcut[\"CtrlE\"] = \"ctrl+e\";\n  KeyboardShortcut[\"CtrlT\"] = \"ctrl+t\";\n  KeyboardShortcut[\"CtrlX\"] = \"ctrl+x\";\n  KeyboardShortcut[\"AltEnter\"] = \"alt+enter\";\n  KeyboardShortcut[\"CmdF\"] = \"cmd+f\";\n  KeyboardShortcut[\"CmdOptF\"] = \"cmd+opt+f\";\n  KeyboardShortcut[\"CtrlF\"] = \"ctrl+f\";\n  KeyboardShortcut[\"CtrlH\"] = \"ctrl+h\";\n  KeyboardShortcut[\"CtrlShiftF\"] = \"ctrl+shift+f\";\n  KeyboardShortcut[\"CtrlLeft\"] = \"ctrl+[\";\n  KeyboardShortcut[\"CtrlRight\"] = \"ctrl+]\";\n})(KeyboardShortcut || (KeyboardShortcut = {}));\nexport const KEY_MAP = {\n  [KeyboardShortcut.CtrlR]: t('Run query'),\n  [KeyboardShortcut.CtrlEnter]: t('Run query'),\n  [KeyboardShortcut.AltEnter]: t('Run query'),\n  [KeyboardShortcut.CtrlShiftEnter]: t('Run current query'),\n  [KeyboardShortcut.CtrlX]: userOS === 'MacOS' ? t('Stop query') : undefined,\n  [KeyboardShortcut.CtrlE]: userOS !== 'MacOS' ? t('Stop query') : undefined,\n  [KeyboardShortcut.CtrlQ]: userOS === 'Windows' ? t('New tab') : undefined,\n  [KeyboardShortcut.CtrlT]: userOS !== 'Windows' ? t('New tab') : undefined,\n  [KeyboardShortcut.CtrlP]: t('Previous Line'),\n  [KeyboardShortcut.CtrlShiftF]: t('Format SQL'),\n  [KeyboardShortcut.CtrlLeft]: t('Switch to the previous tab'),\n  [KeyboardShortcut.CtrlRight]: t('Switch to the next tab'),\n  // default ace editor shortcuts\n  [KeyboardShortcut.CmdF]: userOS === 'MacOS' ? t('Find') : undefined,\n  [KeyboardShortcut.CtrlF]: userOS !== 'MacOS' ? t('Find') : undefined,\n  [KeyboardShortcut.CmdOptF]: userOS === 'MacOS' ? t('Replace') : undefined,\n  [KeyboardShortcut.CtrlH]: userOS !== 'MacOS' ? t('Replace') : undefined\n};\nconst KeyMapByCommand = Object.entries(KEY_MAP).reduce((acc, [shortcut, command]) => {\n  if (command) {\n    acc[command] = [...(acc[command] || []), shortcut];\n  }\n  return acc;\n}, {});\nconst ShortcutDescription = styled.span`\n  font-size: ${({ theme }) => theme.typography.sizes.m}px;\n  color: ${({ theme }) => theme.colors.text.help};\n  padding-left: ${({ theme }) => theme.gridUnit * 2}px;\n`;\nconst ShortcutWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${({ theme }) => theme.gridUnit}px;\n  padding: ${({ theme }) => theme.gridUnit * 2}px;\n`;\nconst ShortcutCode = styled.code`\n  font-size: ${({ theme }) => theme.typography.sizes.s}px;\n  color: ${({ theme }) => theme.colors.grayscale.dark1};\n  border-radius: ${({ theme }) => theme.borderRadius}px;\n  padding: ${({ theme }) => `${theme.gridUnit}px ${theme.gridUnit * 2}px`};\n`;\nconst KeyboardShortcutButton = ({ children }) => _jsx(ModalTrigger, { modalTitle: t('Keyboard shortcuts'), modalBody: _jsx(\"div\", { children:\n    Object.entries(KeyMapByCommand).map(([description, shortcuts]) => _jsxs(\"div\", { css: css`\n              display: table-row;\n            `, children: [\n      _jsx(\"div\", { css: css`\n                display: table-cell;\n                max-width: 200px;\n                vertical-align: middle;\n              `, children:\n        _jsx(ShortcutDescription, { children: description }) }\n      ),\n      _jsx(\"div\", { css: css`\n                display: table-cell;\n              `, children:\n        _jsx(ShortcutWrapper, { children:\n          shortcuts.map((shortcut) => _jsx(ShortcutCode, { children: shortcut }, shortcut)) }\n        ) }\n      )] }, description\n    )) }\n  ), triggerNode: children });\nexport default KeyboardShortcutButton;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}