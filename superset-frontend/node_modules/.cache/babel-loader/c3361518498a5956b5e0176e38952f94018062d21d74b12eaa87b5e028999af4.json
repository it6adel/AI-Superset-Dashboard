{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getChartComponentRegistry, ThemeProvider } from '@superset-ui/core';\nimport { useEffect, useState } from 'react';import { Fragment as _Fragment, jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport const ChartWrapper = ({ vizType, theme, height, width, chartConfig }) => {\n  const [Chart, setChart] = useState();\n  const getChartFromRegistry = async (vizType) => {\n    const registry = getChartComponentRegistry();\n    const c = await registry.getAsPromise(vizType);\n    setChart(() => c);\n  };\n  useEffect(() => {\n    getChartFromRegistry(vizType);\n  }, [vizType]);\n  return _jsx(ThemeProvider, { theme: theme, children:\n    Chart === undefined ? _jsx(_Fragment, {}) : _jsx(Chart, { ...chartConfig.properties, height: height, width: width }) }\n  );\n};\nexport default ChartWrapper;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}