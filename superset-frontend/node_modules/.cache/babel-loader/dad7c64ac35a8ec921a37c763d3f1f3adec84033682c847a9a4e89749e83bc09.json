{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { GenericDataType, getColumnLabel, isPhysicalColumn } from '@superset-ui/core';\nimport { checkColumnType } from '..';\nexport function isSortable(controls) {var _controls$x_axis, _controls$datasource, _controls$xAxisForceC, _controls$x_axis2, _controls$datasource2;\n  const isForcedCategorical = checkColumnType(getColumnLabel(controls == null ? void 0 : (_controls$x_axis = controls.x_axis) == null ? void 0 : _controls$x_axis.value), controls == null ? void 0 : (_controls$datasource = controls.datasource) == null ? void 0 : _controls$datasource.datasource, [GenericDataType.Numeric]) && !!(controls != null && (_controls$xAxisForceC = controls.xAxisForceCategorical) != null && _controls$xAxisForceC.value);\n  const xAxisValue = controls == null ? void 0 : (_controls$x_axis2 = controls.x_axis) == null ? void 0 : _controls$x_axis2.value;\n  // Given that we don't know the type of a custom SQL column,\n  // we treat it as sortable and give the responsibility to the\n  // user to provide a sortable result.\n  const isCustomSQL = !isPhysicalColumn(xAxisValue);\n  return isForcedCategorical ||\n  isCustomSQL ||\n  checkColumnType(getColumnLabel(xAxisValue), controls == null ? void 0 : (_controls$datasource2 = controls.datasource) == null ? void 0 : _controls$datasource2.datasource, [GenericDataType.String, GenericDataType.Boolean]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}