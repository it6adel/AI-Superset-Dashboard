{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { css } from '@superset-ui/core';\nimport { Tooltip } from 'src/components/Tooltip';\nimport Icons from 'src/components/Icons';\nimport { NotificationMethodOption } from '../types';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst notificationStyledIcon = (theme) => css`\n  color: ${theme.colors.grayscale.light1};\n  margin-right: ${theme.gridUnit * 2}px;\n`;\nexport default function RecipientIcon({ type }) {\n  const recipientIconConfig = {\n    icon: null,\n    label: ''\n  };\n  switch (type) {\n    case NotificationMethodOption.Email:\n      recipientIconConfig.icon = _jsx(Icons.MailOutlined, { css: notificationStyledIcon, iconSize: \"l\" });\n      recipientIconConfig.label = NotificationMethodOption.Email;\n      break;\n    case NotificationMethodOption.Slack:\n      recipientIconConfig.icon = _jsx(Icons.Slack, { css: notificationStyledIcon, iconSize: \"l\" });\n      recipientIconConfig.label = NotificationMethodOption.Slack;\n      break;\n    case NotificationMethodOption.SlackV2:\n      recipientIconConfig.icon = _jsx(Icons.Slack, { css: notificationStyledIcon, iconSize: \"l\" });\n      recipientIconConfig.label = NotificationMethodOption.Slack;\n      break;\n    default:\n      recipientIconConfig.icon = null;\n      recipientIconConfig.label = '';\n  }\n  return recipientIconConfig.icon ? _jsx(Tooltip, { title: recipientIconConfig.label, placement: \"bottom\", children:\n    recipientIconConfig.icon }\n  ) : null;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}