{"ast":null,"code":"import copyTextToClipboard from 'src/utils/copy';\nimport { t, logging } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { getDashboardPermalink } from 'src/utils/urlUtils';\nimport { MenuKeys } from 'src/dashboard/types';\nimport { shallowEqual, useSelector } from 'react-redux';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst ShareMenuItems = (props) => {\n  const { copyMenuItemTitle, emailMenuItemTitle, emailSubject, emailBody, addDangerToast, addSuccessToast, dashboardId, dashboardComponentId, title, disabled, ...rest } = props;\n  const { dataMask, activeTabs } = useSelector((state) => ({\n    dataMask: state.dataMask,\n    activeTabs: state.dashboardState.activeTabs\n  }), shallowEqual);\n  async function generateUrl() {\n    return getDashboardPermalink({\n      dashboardId,\n      dataMask,\n      activeTabs,\n      anchor: dashboardComponentId\n    });\n  }\n  async function onCopyLink() {\n    try {\n      await copyTextToClipboard(generateUrl);\n      addSuccessToast(t('Copied to clipboard!'));\n    }\n    catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n  async function onShareByEmail() {\n    try {\n      const encodedBody = encodeURIComponent(`${emailBody}${await generateUrl()}`);\n      const encodedSubject = encodeURIComponent(emailSubject);\n      window.location.href = `mailto:?Subject=${encodedSubject}%20&Body=${encodedBody}`;\n    }\n    catch (error) {\n      logging.error(error);\n      addDangerToast(t('Sorry, something went wrong. Try again later.'));\n    }\n  }\n  return _jsxs(Menu.SubMenu, { title: title, disabled: disabled, ...rest, children: [\n    _jsx(Menu.Item, { onClick: () => onCopyLink(), children:\n      copyMenuItemTitle }, MenuKeys.CopyLink\n    ),\n    _jsx(Menu.Item, { onClick: () => onShareByEmail(), children:\n      emailMenuItemTitle }, MenuKeys.ShareByEmail\n    )] }, MenuKeys.Share\n  );\n};\nexport default ShareMenuItems;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}