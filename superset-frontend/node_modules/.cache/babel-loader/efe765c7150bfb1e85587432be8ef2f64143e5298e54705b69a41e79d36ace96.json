{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { ensureIsArray, t, validateNonEmpty } from '@superset-ui/core';\nimport { getStandardizedControls } from '@superset-ui/chart-controls';\nconst config = {\n  controlPanelSections: [\n  {\n    label: t('Query'),\n    expanded: true,\n    controlSetRows: [\n    ['groupby'],\n    ['columns'],\n    ['metric'],\n    ['adhoc_filters'],\n    ['row_limit'],\n    ['sort_by_metric']]\n\n  },\n  {\n    label: t('Chart Options'),\n    expanded: true,\n    controlSetRows: [['y_axis_format', null], ['color_scheme']]\n  }],\n\n  controlOverrides: {\n    y_axis_format: {\n      label: t('Number format'),\n      description: t('Choose a number format')\n    },\n    groupby: {\n      label: t('Source'),\n      multi: false,\n      validators: [validateNonEmpty],\n      description: t('Choose a source')\n    },\n    columns: {\n      label: t('Target'),\n      multi: false,\n      validators: [validateNonEmpty],\n      description: t('Choose a target')\n    }\n  },\n  formDataOverrides: (formData) => {\n    const groupby = getStandardizedControls().\n    popAllColumns().\n    filter((col) => !ensureIsArray(formData.columns).includes(col));\n    return {\n      ...formData,\n      groupby,\n      metric: getStandardizedControls().shiftMetric()\n    };\n  }\n};\nexport default config;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}