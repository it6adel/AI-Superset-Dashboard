{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from 'src/components/List';\nimport { nanoid } from 'nanoid';\nimport { t, withTheme } from '@superset-ui/core';\nimport {\n  SortableContainer,\n  SortableHandle,\n  SortableElement,\n  arrayMove } from\n'react-sortable-hoc';\nimport Icons from 'src/components/Icons';\nimport {\n  HeaderContainer,\n  AddIconButton } from\n'src/explore/components/controls/OptionControls';\nimport { InfoTooltipWithTrigger } from '@superset-ui/chart-controls';\nimport ControlHeader from 'src/explore/components/ControlHeader';\nimport CustomListItem from 'src/explore/components/controls/CustomListItem';\nimport controlMap from '..';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nconst propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  description: PropTypes.string,\n  placeholder: PropTypes.string,\n  addTooltip: PropTypes.string,\n  itemGenerator: PropTypes.func,\n  keyAccessor: PropTypes.func,\n  onChange: PropTypes.func,\n  value: PropTypes.oneOfType([PropTypes.array]),\n  isFloat: PropTypes.bool,\n  isInt: PropTypes.bool,\n  controlName: PropTypes.string.isRequired\n};\n\nconst defaultProps = {\n  label: null,\n  description: null,\n  onChange: () => {},\n  placeholder: t('Empty collection'),\n  itemGenerator: () => ({ key: nanoid(11) }),\n  keyAccessor: (o) => o.key,\n  value: [],\n  addTooltip: t('Add an item')\n};\nconst SortableListItem = SortableElement(CustomListItem);\nconst SortableList = SortableContainer(List);\nconst SortableDragger = SortableHandle(() =>\n// TODO: Remove fa-icon\n// eslint-disable-next-line icons/no-fa-icons-usage\n_jsx(\"i\", {\n  role: \"img\",\n  \"aria-label\": \"drag\",\n  className: \"fa fa-bars text-primary\",\n  style: { cursor: 'ns-resize' } }\n)\n);\n\nclass CollectionControl extends Component {\n  constructor(props) {\n    super(props);\n    this.onAdd = this.onAdd.bind(this);\n  }\n\n  onChange(i, value) {\n    const newValue = [...this.props.value];\n    newValue[i] = { ...this.props.value[i], ...value };\n    this.props.onChange(newValue);\n  }\n\n  onAdd() {\n    this.props.onChange(this.props.value.concat([this.props.itemGenerator()]));\n  }\n\n  onSortEnd({ oldIndex, newIndex }) {\n    this.props.onChange(arrayMove(this.props.value, oldIndex, newIndex));\n  }\n\n  removeItem(i) {\n    this.props.onChange(this.props.value.filter((o, ix) => i !== ix));\n  }\n\n  renderList() {\n    if (this.props.value.length === 0) {\n      return _jsx(\"div\", { className: \"text-muted\", children: this.props.placeholder });\n    }\n    const Control = controlMap[this.props.controlName];\n    return (\n      _jsx(SortableList, {\n        useDragHandle: true,\n        lockAxis: \"y\",\n        onSortEnd: this.onSortEnd.bind(this),\n        bordered: true,\n        css: (theme) => ({\n          borderRadius: theme.gridUnit\n        }), children:\n\n        this.props.value.map((o, i) => {\n          // label relevant only for header, not here\n          const { label, ...commonProps } = this.props;\n          return (\n            _jsxs(SortableListItem, {\n              className: \"clearfix\",\n              css: (theme) => ({\n                justifyContent: 'flex-start',\n                display: '-webkit-flex',\n                paddingInline: theme.gridUnit * 3\n              }),\n\n              index: i, children: [\n\n              _jsx(SortableDragger, {}),\n              _jsx(\"div\", {\n                css: (theme) => ({\n                  flex: 1,\n                  marginLeft: theme.gridUnit * 2,\n                  marginRight: theme.gridUnit * 2\n                }), children:\n\n                _jsx(Control, { ...\n                  commonProps, ...\n                  o,\n                  onChange: this.onChange.bind(this, i) }\n                ) }\n              ),\n              _jsx(InfoTooltipWithTrigger, {\n                icon: \"times\",\n                label: \"remove-item\",\n                tooltip: t('Remove item'),\n                bsStyle: \"primary\",\n                onClick: this.removeItem.bind(this, i) }\n              )] }, this.props.keyAccessor(o)\n            ));\n\n        }) }\n      ));\n\n  }\n\n  render() {\n    const { theme } = this.props;\n    return (\n      _jsxs(\"div\", { className: \"CollectionControl\", children: [\n        _jsxs(HeaderContainer, { children: [\n          _jsx(ControlHeader, { ...this.props }),\n          _jsx(AddIconButton, { onClick: this.onAdd, children:\n            _jsx(Icons.PlusOutlined, {\n              iconSize: \"s\",\n              iconColor: theme.colors.grayscale.light5 }\n            ) }\n          )] }\n        ),\n        this.renderList()] }\n      ));\n\n  }\n}\n\nCollectionControl.propTypes = propTypes;\nCollectionControl.defaultProps = defaultProps;\n\nexport default withTheme(CollectionControl);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}