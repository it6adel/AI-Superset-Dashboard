{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { getColumnLabel, isDefined } from '@superset-ui/core';\nimport { getCrossFilterIndicator } from '../../selectors';\nexport const crossFiltersSelector = (props) => {\n  const { dataMask, chartIds, chartLayoutItems, verboseMaps } = props;\n  return chartIds.\n  map((chartId) => {\n    const filterIndicator = getCrossFilterIndicator(chartId, dataMask[chartId], chartLayoutItems);\n    if (isDefined(filterIndicator.column) &&\n    isDefined(filterIndicator.value)) {var _verboseMaps$chartId;\n      const verboseColName = ((_verboseMaps$chartId = verboseMaps[chartId]) == null ? void 0 : _verboseMaps$chartId[getColumnLabel(filterIndicator.column)]) ||\n      filterIndicator.column;\n      return {\n        ...filterIndicator,\n        column: verboseColName,\n        emitterId: chartId\n      };\n    }\n    return null;\n  }).\n  filter(Boolean);\n};\nexport default crossFiltersSelector;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}