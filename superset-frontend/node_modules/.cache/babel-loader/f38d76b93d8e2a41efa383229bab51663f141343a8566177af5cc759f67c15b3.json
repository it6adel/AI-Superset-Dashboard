{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { FeatureFlag, isFeatureEnabled } from '@superset-ui/core';\nimport { Menu } from 'src/components/Menu';\nimport { useDownloadScreenshot } from 'src/dashboard/hooks/useDownloadScreenshot';\nimport { DownloadScreenshotFormat } from './types';\nimport DownloadAsPdf from './DownloadAsPdf';\nimport DownloadAsImage from './DownloadAsImage';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst DownloadMenuItems = (props) => {\n  const { pdfMenuItemTitle, imageMenuItemTitle, logEvent, dashboardId, dashboardTitle, submenuKey, disabled, title, ...rest } = props;\n  const isWebDriverScreenshotEnabled = isFeatureEnabled(FeatureFlag.EnableDashboardScreenshotEndpoints) &&\n  isFeatureEnabled(FeatureFlag.EnableDashboardDownloadWebDriverScreenshot);\n  const downloadScreenshot = useDownloadScreenshot(dashboardId, logEvent);\n  return isWebDriverScreenshotEnabled ? _jsxs(Menu.SubMenu, { title: title, disabled: disabled, ...rest, children: [\n    _jsx(Menu.Item, { onClick: () => downloadScreenshot(DownloadScreenshotFormat.PDF), children:\n      pdfMenuItemTitle }, DownloadScreenshotFormat.PDF\n    ),\n    _jsx(Menu.Item, { onClick: () => downloadScreenshot(DownloadScreenshotFormat.PNG), children:\n      imageMenuItemTitle }, DownloadScreenshotFormat.PNG\n    )] }, submenuKey\n  ) : _jsxs(Menu.SubMenu, { title: title, disabled: disabled, ...rest, children: [\n    _jsx(DownloadAsPdf, { text: pdfMenuItemTitle, dashboardTitle: dashboardTitle, logEvent: logEvent }),\n    _jsx(DownloadAsImage, { text: imageMenuItemTitle, dashboardTitle: dashboardTitle, logEvent: logEvent })] }, submenuKey\n  );\n};\nexport default DownloadMenuItems;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}