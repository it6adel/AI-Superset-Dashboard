{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useReducer, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useDatasetsList from 'src/features/datasets/hooks/useDatasetLists';\nimport Header from 'src/features/datasets/AddDataset/Header';\nimport EditPage from 'src/features/datasets/AddDataset/EditDataset';\nimport DatasetPanel from 'src/features/datasets/AddDataset/DatasetPanel';\nimport LeftPanel from 'src/features/datasets/AddDataset/LeftPanel';\nimport Footer from 'src/features/datasets/AddDataset/Footer';\nimport { DatasetActionType } from 'src/features/datasets/AddDataset/types';\nimport DatasetLayout from 'src/features/datasets/DatasetLayout';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport function datasetReducer(state, action) {\n  const trimmedState = {\n    ...(state || {})\n  };\n  switch (action.type) {\n    case DatasetActionType.SelectDatabase:\n      return {\n        ...trimmedState,\n        ...action.payload,\n        catalog: null,\n        schema: null,\n        table_name: null\n      };\n    case DatasetActionType.SelectCatalog:\n      return {\n        ...trimmedState,\n        [action.payload.name]: action.payload.value,\n        schema: null,\n        table_name: null\n      };\n    case DatasetActionType.SelectSchema:\n      return {\n        ...trimmedState,\n        [action.payload.name]: action.payload.value,\n        table_name: null\n      };\n    case DatasetActionType.SelectTable:\n      return {\n        ...trimmedState,\n        [action.payload.name]: action.payload.value\n      };\n    case DatasetActionType.ChangeDataset:\n      return {\n        ...trimmedState,\n        [action.payload.name]: action.payload.value\n      };\n    default:\n      return null;\n  }\n}\nconst prevUrl = '/tablemodelview/list/?pageIndex=0&sortColumn=changed_on_delta_humanized&sortOrder=desc';\nexport default function AddDataset() {\n  const [dataset, setDataset] = useReducer(datasetReducer, null);\n  const [hasColumns, setHasColumns] = useState(false);\n  const [editPageIsVisible, setEditPageIsVisible] = useState(false);\n  const { datasets, datasetNames } = useDatasetsList(dataset == null ? void 0 : dataset.db, dataset == null ? void 0 : dataset.schema);\n  const { datasetId: id } = useParams();\n  useEffect(() => {\n    if (!Number.isNaN(parseInt(id, 10))) {\n      setEditPageIsVisible(true);\n    }\n  }, [id]);\n  const HeaderComponent = () => _jsx(Header, { setDataset: setDataset, title: dataset == null ? void 0 : dataset.table_name });\n  const LeftPanelComponent = () => _jsx(LeftPanel, { setDataset: setDataset, dataset: dataset, datasetNames: datasetNames });\n  const EditPageComponent = () => _jsx(EditPage, { id: id });\n  const DatasetPanelComponent = () => {var _dataset$db;return _jsx(DatasetPanel, { tableName: dataset == null ? void 0 : dataset.table_name, dbId: dataset == null ? void 0 : (_dataset$db = dataset.db) == null ? void 0 : _dataset$db.id, catalog: dataset == null ? void 0 : dataset.catalog, schema: dataset == null ? void 0 : dataset.schema, setHasColumns: setHasColumns, datasets: datasets });};\n  const FooterComponent = () => _jsx(Footer, { url: prevUrl, datasetObject: dataset, hasColumns: hasColumns, datasets: datasetNames });\n  return _jsx(DatasetLayout, { header: HeaderComponent(), leftPanel: editPageIsVisible ? null : LeftPanelComponent(), datasetPanel: editPageIsVisible ? EditPageComponent() : DatasetPanelComponent(), footer: FooterComponent() });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}