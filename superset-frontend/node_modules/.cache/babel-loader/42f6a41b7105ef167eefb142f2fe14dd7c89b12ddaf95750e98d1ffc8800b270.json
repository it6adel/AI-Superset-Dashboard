{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useCallback } from 'react';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst NUM_COLUMNS = 12;\nexport default function ControlRow({ controls }) {\n  const isHiddenControl = useCallback((control) => {\n    const props = control && 'shouldStash' in control.props ?\n    control.props.children.props :\n    control == null ? void 0 : control.props;\n    return (props == null ? void 0 : props.type) === 'HiddenControl' || (props == null ? void 0 : props.isVisible) === false;\n  }, []);\n  // Invisible control should not be counted\n  // in the columns number\n  const countableControls = controls.filter((control) => !isHiddenControl(control));\n  const colSize = countableControls.length ?\n  NUM_COLUMNS / countableControls.length :\n  NUM_COLUMNS;\n  return _jsx(\"div\", { className: \"row\", children:\n    controls.map((control, i) => _jsx(\"div\", { className: `col-lg-${colSize} col-xs-12`, style: {\n        display: isHiddenControl(control) ? 'none' : 'block'\n      }, children:\n      control }, i\n    )) }\n  );\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}