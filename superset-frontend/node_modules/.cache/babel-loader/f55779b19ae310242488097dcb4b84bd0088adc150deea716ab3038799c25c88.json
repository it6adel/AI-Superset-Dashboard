{"ast":null,"code":"import { useDrag } from 'react-dnd';\nimport { css, styled } from '@superset-ui/core';\nimport { DndItemType } from 'src/explore/components/DndItemType';\nimport { StyledColumnOption, StyledMetricOption } from 'src/explore/components/optionRenderers';\nimport Icons from 'src/components/Icons';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst DatasourceItemContainer = styled.div`\n  ${({ theme }) => css`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    height: ${theme.gridUnit * 6}px;\n    padding: 0 ${theme.gridUnit}px;\n\n    // hack to make the drag preview image corners rounded\n    transform: translate(0, 0);\n    background-color: inherit;\n    border-radius: 4px;\n\n    > div {\n      min-width: 0;\n      margin-right: ${theme.gridUnit * 2}px;\n    }\n  `}\n`;\nexport default function DatasourcePanelDragOption(props) {\n  const { labelRef, showTooltip, type, value } = props;\n  const [{ isDragging }, drag] = useDrag({\n    item: {\n      value: props.value,\n      type: props.type\n    },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const optionProps = {\n    labelRef,\n    showTooltip: !isDragging && showTooltip,\n    showType: true\n  };\n  return _jsxs(DatasourceItemContainer, { ref: drag, children: [\n    type === DndItemType.Column ? _jsx(StyledColumnOption, { column: value, ...optionProps }) : _jsx(StyledMetricOption, { metric: value, ...optionProps }),\n    _jsx(Icons.Drag, {})] }\n  );\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}