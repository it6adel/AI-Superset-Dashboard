{"ast":null,"code":"import { t, tn } from '@superset-ui/core';\nimport IssueCode from './IssueCode';\nimport ErrorAlert from './ErrorAlert';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";import { createElement as _createElement } from \"@emotion/react\";\nfunction DatabaseErrorMessage({ error, source, subtitle }) {var _extra$issue_codes;\n  const { extra, level, message } = error;\n  const isVisualization = ['dashboard', 'explore'].includes(source || '');\n  const [firstLine, ...remainingLines] = message.split('\\n');\n  const alertMessage = firstLine;\n  const alertDescription = remainingLines.length > 0 ? remainingLines.join('\\n') : null;\n  const body = extra && _jsxs(_Fragment, { children: [\n    _jsxs(\"p\", { children: [\n      t('This may be triggered by:'),\n      _jsx(\"br\", {}), (_extra$issue_codes =\n      extra.issue_codes) == null ? void 0 : _extra$issue_codes.\n      map((issueCode) => _createElement(IssueCode, { ...issueCode, key: issueCode.code })).\n      reduce((prev, curr) => [prev, _jsx(\"br\", {}), curr])] }\n    ),\n    isVisualization && extra.owners && _jsxs(_Fragment, { children: [\n      _jsx(\"br\", {}),\n      _jsx(\"p\", { children:\n        tn('Please reach out to the Chart Owner for assistance.', 'Please reach out to the Chart Owners for assistance.', extra.owners.length) }\n      ),\n      _jsx(\"p\", { children:\n        tn('Chart Owner: %s', 'Chart Owners: %s', extra.owners.length, extra.owners.join(', ')) }\n      )] }\n    )] }\n  );\n  return _jsx(ErrorAlert, { errorType: t('%s Error', (extra == null ? void 0 : extra.engine_name) || t('DB engine')), message: alertMessage, description: alertDescription, type: level, descriptionDetails: body });\n}\nexport default DatabaseErrorMessage;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}