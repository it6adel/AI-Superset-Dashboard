{"ast":null,"code":"export const getTimeOffset = (series, timeCompare) => timeCompare.find((timeOffset) =>\n// offset is represented as <offset>, group by list\nseries.name.includes(`${timeOffset},`) ||\n// offset is represented as <metric>__<offset>\nseries.name.includes(`__${timeOffset}`));\nexport const hasTimeOffset = (series, timeCompare) => typeof series.name === 'string' ?\n!!getTimeOffset(series, timeCompare) :\nfalse;\nexport const getOriginalSeries = (seriesName, timeCompare) => {\n  let result = seriesName;\n  timeCompare.forEach((compare) => {\n    // offset is represented as <offset>, group by list\n    result = result.replace(`${compare},`, '');\n    // offset is represented as <metric>__<offset>\n    result = result.replace(`__${compare}`, '');\n  });\n  return result.trim();\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}