{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useMemo } from 'react';\nimport Card from 'src/components/Card';\nimport ProgressBar from 'src/components/ProgressBar';\nimport { t, useTheme } from '@superset-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { queryEditorSetSql, cloneQueryToNewTab, fetchQueryResults, clearQueryResults, removeQuery } from 'src/SqlLab/actions/sqlLab';\nimport TableView from 'src/components/TableView';\nimport Button from 'src/components/Button';\nimport { fDuration, extendedDayjs } from 'src/utils/dates';\nimport Icons from 'src/components/Icons';\nimport Label from 'src/components/Label';\nimport { Tooltip } from 'src/components/Tooltip';\nimport ModalTrigger from 'src/components/ModalTrigger';\nimport ResultSet from '../ResultSet';\nimport HighlightedSql from '../HighlightedSql';\nimport { StaticPosition, StyledTooltip } from './styles';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nconst openQuery = (id) => {\n  const url = `/sqllab?queryId=${id}`;\n  window.open(url);\n};\nconst QueryTable = ({ columns = ['started', 'duration', 'rows'], queries = [], onUserClicked = () => undefined, onDbClicked = () => undefined, displayLimit, latestQueryId }) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const QUERY_HISTORY_TABLE_HEADERS_LOCALIZED = {\n    state: t('State'),\n    started: t('Started'),\n    duration: t('Duration'),\n    progress: t('Progress'),\n    rows: t('Rows'),\n    sql: t('SQL'),\n    results: t('Results'),\n    actions: t('Actions')\n  };\n  const setHeaders = (column) => {\n    if (column === 'sql') {\n      return column.toUpperCase();\n    }\n    return column.charAt(0).toUpperCase().concat(column.slice(1));\n  };\n  const columnsOfTable = useMemo(() => columns.map((column) => ({\n    accessor: column,\n    Header: QUERY_HISTORY_TABLE_HEADERS_LOCALIZED[column] || setHeaders(column),\n    disableSortBy: true\n  })), [columns]);\n  const user = useSelector((state) => state.user);\n  const data = useMemo(() => {\n    const restoreSql = (query) => {\n      dispatch(queryEditorSetSql({ id: query.sqlEditorId }, query.sql, query.id));\n    };\n    const openQueryInNewTab = (query) => {\n      dispatch(cloneQueryToNewTab(query, true));\n    };\n    const openAsyncResults = (query, displayLimit) => {\n      dispatch(fetchQueryResults(query, displayLimit));\n    };\n    const statusAttributes = {\n      success: {\n        config: {\n          icon: _jsx(Icons.CheckOutlined, { iconColor: theme.colors.success.base, iconSize: \"m\" }),\n          // icon: <Icons.Edit iconSize=\"xl\" />,\n          label: t('Success')\n        }\n      },\n      failed: {\n        config: {\n          icon: _jsx(Icons.CloseOutlined, { iconColor: theme.colors.error.base, iconSize: \"m\" }),\n          label: t('Failed')\n        }\n      },\n      stopped: {\n        config: {\n          icon: _jsx(Icons.CloseOutlined, { iconColor: theme.colors.error.base, iconSize: \"m\" }),\n          label: t('Failed')\n        }\n      },\n      running: {\n        config: {\n          icon: _jsx(Icons.LoadingOutlined, { iconColor: theme.colors.primary.base, iconSize: \"m\" }),\n          label: t('Running')\n        }\n      },\n      fetching: {\n        config: {\n          icon: _jsx(Icons.LoadingOutlined, { iconColor: theme.colors.primary.base, iconSize: \"m\" }),\n          label: t('Fetching')\n        }\n      },\n      timed_out: {\n        config: {\n          icon: _jsx(Icons.ClockCircleOutlined, { iconColor: theme.colors.error.base, iconSize: \"m\" }),\n          label: t('Offline')\n        }\n      },\n      scheduled: {\n        config: {\n          icon: _jsx(Icons.LoadingOutlined, { iconColor: theme.colors.warning.base, iconSize: \"m\" }),\n          label: t('Scheduled')\n        }\n      },\n      pending: {\n        config: {\n          icon: _jsx(Icons.LoadingOutlined, { iconColor: theme.colors.warning.base, iconSize: \"m\" }),\n          label: t('Scheduled')\n        }\n      },\n      error: {\n        config: {\n          icon: _jsx(Icons.Error, { iconColor: theme.colors.error.base, iconSize: \"m\" }),\n          label: t('Unknown Status')\n        }\n      },\n      started: {\n        config: {\n          icon: _jsx(Icons.LoadingOutlined, { iconColor: theme.colors.primary.base, iconSize: \"m\" }),\n          label: t('Started')\n        }\n      }\n    };\n    return queries.\n    map((query) => {\n      const { state, sql, progress, ...rest } = query;\n      const q = rest;\n      const status = statusAttributes[state] || statusAttributes.error;\n      if (q.endDttm) {\n        q.duration = _jsx(Label, { monospace: true, children: fDuration(q.startDttm, q.endDttm) });\n      }\n      q.user = _jsx(Button, { buttonSize: \"small\", buttonStyle: \"link\", onClick: () => onUserClicked(q.userId), children:\n        q.user }\n      );\n      q.db = _jsx(Button, { buttonSize: \"small\", buttonStyle: \"link\", onClick: () => onDbClicked(q.dbId), children:\n        q.db }\n      );\n      q.started = _jsx(Label, { monospace: true, children:\n        extendedDayjs(q.startDttm).format('L HH:mm:ss') }\n      );\n      q.querylink = _jsxs(Button, { buttonSize: \"small\", buttonStyle: \"link\", onClick: () => openQuery(q.queryId), children: [\n        _jsx(Icons.Full, { iconSize: \"m\", iconColor: theme.colors.primary.dark1 }),\n        t('Edit')] }\n      );\n      q.sql = _jsx(Card, { css: [StaticPosition, process.env.NODE_ENV === \"production\" ? \"\" : \";label:q-sql;\", process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"], children:\n        _jsx(HighlightedSql, { sql: sql, rawSql: q.executedSql, shrink: true, maxWidth: 60 }) }\n      );\n      if (q.resultsKey) {\n        q.results = _jsx(ModalTrigger, { className: \"ResultsModal\", triggerNode: _jsx(Button, { buttonSize: \"xsmall\", buttonStyle: \"tertiary\", children:\n            t('View') }\n          ), modalTitle: t('Data preview'), beforeOpen: () => openAsyncResults(query, displayLimit), onExit: () => dispatch(clearQueryResults(query)), modalBody: _jsx(ResultSet, { showSql: true, queryId: query.id, height: 400, displayLimit: displayLimit, defaultQueryLimit: 1000 }), responsive: true });\n      } else\n      {\n        q.results = _jsx(_Fragment, {});\n      }\n      q.progress =\n      state === 'success' ? _jsx(ProgressBar, { percent: parseInt(progress.toFixed(0), 10), striped: true, showInfo: false }) : _jsx(ProgressBar, { percent: parseInt(progress.toFixed(0), 10), striped: true });\n      q.state = _jsx(Tooltip, { title: status.config.label, children: status.config.icon });\n      q.actions = _jsxs(\"div\", { children: [\n        _jsx(StyledTooltip, { onClick: () => restoreSql(query), tooltip: t('Overwrite text in the editor with a query on this table'), placement: \"top\", className: \"pointer\", children:\n          _jsx(Icons.EditOutlined, { iconSize: \"l\" }) }\n        ),\n        _jsx(StyledTooltip, { onClick: () => openQueryInNewTab(query), tooltip: t('Run query in a new tab'), placement: \"top\", className: \"pointer\", children:\n          _jsx(Icons.PlusCircleOutlined, { iconSize: \"l\" }) }\n        ),\n        q.id !== latestQueryId && _jsx(StyledTooltip, { tooltip: t('Remove query from log'), onClick: () => dispatch(removeQuery(query)), className: \"pointer\", children:\n          _jsx(Icons.DeleteOutlined, { iconSize: \"l\" }) }\n        )] }\n      );\n      return q;\n    }).\n    reverse();\n  }, [queries, onUserClicked, onDbClicked, user, displayLimit]);\n  return _jsx(\"div\", { className: \"QueryTable\", children:\n    _jsx(TableView, { columns: columnsOfTable, data: data, className: \"table-condensed\", pageSize: 50 }) }\n  );\n};\nexport default QueryTable;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}