{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { Component } from 'react';\nimport { t } from '@superset-ui/core';\nimport ErrorAlert from 'src/components/ErrorMessage/ErrorAlert';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nexport default class ErrorBoundary extends Component {\n\n\n\n  constructor(props) {\n    super(props);\n    this.state = { error: null, info: null };\n  }\n  componentDidCatch(error, info) {var _this$props$onError, _this$props;\n    (_this$props$onError = (_this$props = this.props).onError) == null ? void 0 : _this$props$onError.call(_this$props, error, info);\n    this.setState({ error, info });\n  }\n  render() {\n    const { error, info } = this.state;\n    const { showMessage, className } = this.props;\n    if (error) {\n      const firstLine = error.toString().split('\\n')[0];\n      if (showMessage) {\n        return _jsx(ErrorAlert, { errorType: t('Unexpected error'), message: firstLine, descriptionDetails: info == null ? void 0 : info.componentStack, className: className });\n      }\n      return null;\n    }\n    return this.props.children;\n  }\n}ErrorBoundary.defaultProps = { showMessage: true };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}