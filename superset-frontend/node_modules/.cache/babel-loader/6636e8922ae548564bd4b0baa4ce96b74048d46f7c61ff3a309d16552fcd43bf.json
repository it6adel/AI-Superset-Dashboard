{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { css, styled, t } from '@superset-ui/core';\nimport backgroundStyleOptions from 'src/dashboard/util/backgroundStyleOptions';\nimport PopoverDropdown from 'src/components/PopoverDropdown';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nconst BackgroundStyleOption = styled.div`\n  ${({ theme }) => css`\n    display: inline-block;\n\n    &:before {\n      content: '';\n      width: 1em;\n      height: 1em;\n      margin-right: ${theme.gridUnit * 2}px;\n      display: inline-block;\n      vertical-align: middle;\n    }\n\n    &.background--white {\n      padding-left: 0;\n      background: transparent;\n\n      &:before {\n        background: ${theme.colors.grayscale.light5};\n        border: 1px solid ${theme.colors.grayscale.light2};\n      }\n    }\n\n    /* Create the transparent rect icon */\n    &.background--transparent:before {\n      background-image:\n        linear-gradient(45deg, ${theme.colors.text.label} 25%, transparent 25%),\n        linear-gradient(\n          -45deg,\n          ${theme.colors.text.label} 25%,\n          transparent 25%\n        ),\n        linear-gradient(45deg, transparent 75%, ${theme.colors.text.label} 75%),\n        linear-gradient(-45deg, transparent 75%, ${theme.colors.text.label} 75%);\n      background-size: ${theme.gridUnit * 2}px ${theme.gridUnit * 2}px;\n      background-position:\n        0 0,\n        0 ${theme.gridUnit}px,\n        ${theme.gridUnit}px ${-theme.gridUnit}px,\n        ${-theme.gridUnit}px 0px;\n    }\n  `}\n`;\nfunction renderButton(option) {\n  const BACKGROUND_TEXT = t('background');\n  return _jsx(BackgroundStyleOption, { className: cx('background-style-option', option.className), children:\n    `${option.label} ${BACKGROUND_TEXT}` }\n  );\n}\nfunction renderOption(option) {\n  return _jsx(BackgroundStyleOption, { className: cx('background-style-option', option.className), children:\n    option.label }\n  );\n}\nexport default class BackgroundStyleDropdown extends PureComponent {\n  render() {\n    const { id, value, onChange } = this.props;\n    return _jsx(PopoverDropdown, { id: id, options: backgroundStyleOptions, value: value, onChange: onChange, renderButton: renderButton, renderOption: renderOption });\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}