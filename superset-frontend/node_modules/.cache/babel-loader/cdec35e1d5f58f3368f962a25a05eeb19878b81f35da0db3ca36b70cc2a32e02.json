{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { isFeatureEnabled, FeatureFlag, t, css } from '@superset-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\nimport ConfirmStatusChange from 'src/components/ConfirmStatusChange';\nimport Icons from 'src/components/Icons';\nimport ListViewCard from 'src/components/ListViewCard';\nimport Label from 'src/components/Label';\nimport { Dropdown } from 'src/components/Dropdown';\nimport { Menu } from 'src/components/Menu';\nimport FaveStar from 'src/components/FaveStar';\nimport FacePile from 'src/components/FacePile';\nimport { handleChartDelete, CardStyles } from 'src/views/CRUD/utils';\nimport Button from 'src/components/Button';import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"@emotion/react/jsx-runtime\";\nexport default function ChartCard({ chart, hasPerm, openChartEditModal, bulkSelectEnabled, addDangerToast, addSuccessToast, refreshData, loading, showThumbnails, saveFavoriteStatus, favoriteStatus, chartFilter, userId, handleBulkChartExport }) {\n  const history = useHistory();\n  const canEdit = hasPerm('can_write');\n  const canDelete = hasPerm('can_write');\n  const canExport = hasPerm('can_export');\n  const menu = _jsxs(Menu, { children: [\n    canEdit && _jsx(Menu.Item, { children:\n      _jsxs(\"div\", { role: \"button\", tabIndex: 0, onClick: () => openChartEditModal(chart), children: [\n        _jsx(Icons.EditOutlined, { iconSize: \"l\", css: css`\n                vertical-align: text-top;\n              ` }), ' ',\n        t('Edit')] }\n      ) }\n    ),\n    canExport && _jsx(Menu.Item, { children:\n      _jsxs(\"div\", { role: \"button\", tabIndex: 0, onClick: () => handleBulkChartExport([chart]), children: [\n        _jsx(Icons.UploadOutlined, { iconSize: \"l\", css: css`\n                vertical-align: text-top;\n              ` }), ' ',\n        t('Export')] }\n      ) }\n    ),\n    canDelete && _jsx(Menu.Item, { children:\n      _jsx(ConfirmStatusChange, { title: t('Please confirm'), description: _jsxs(_Fragment, { children: [\n          t('Are you sure you want to delete'), \" \", _jsx(\"b\", { children: chart.slice_name }), \"?\"] }\n\n        ), onConfirm: () => handleChartDelete(chart, addSuccessToast, addDangerToast, refreshData, chartFilter, userId), children:\n        (confirmDelete) => _jsxs(\"div\", { role: \"button\", tabIndex: 0, className: \"action-button\", onClick: confirmDelete, children: [\n          _jsx(Icons.DeleteOutlined, { iconSize: \"l\", css: css`\n                    vertical-align: text-top;\n                  ` }), ' ',\n          t('Delete')] }\n        ) }\n      ) }\n    )] }\n  );\n  return _jsx(CardStyles, { onClick: () => {\n      if (!bulkSelectEnabled && chart.url) {\n        history.push(chart.url);\n      }\n    }, children:\n    _jsx(ListViewCard, { loading: loading, title: chart.slice_name, certifiedBy: chart.certified_by, certificationDetails: chart.certification_details, cover: !isFeatureEnabled(FeatureFlag.Thumbnails) || !showThumbnails ? _jsx(_Fragment, {}) : null, url: bulkSelectEnabled ? undefined : chart.url, imgURL: chart.thumbnail_url || '', imgFallbackURL: \"/static/assets/images/chart-card-fallback.svg\", description: t('Modified %s', chart.changed_on_delta_humanized), coverLeft: _jsx(FacePile, { users: chart.owners || [] }), coverRight: _jsx(Label, { type: \"secondary\", children: chart.datasource_name_text }), linkComponent: Link, actions: _jsxs(ListViewCard.Actions, { onClick: (e) => {\n          e.stopPropagation();\n          e.preventDefault();\n        }, children: [\n        userId && _jsx(FaveStar, { itemId: chart.id, saveFaveStar: saveFavoriteStatus, isStarred: favoriteStatus }),\n        _jsx(Dropdown, { dropdownRender: () => menu, trigger: ['click', 'hover'], children:\n          _jsx(Button, { buttonSize: \"xsmall\", type: \"link\", children:\n            _jsx(Icons.MoreOutlined, { iconSize: \"xl\" }) }\n          ) }\n        )] }\n      ) }) }\n  );\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}