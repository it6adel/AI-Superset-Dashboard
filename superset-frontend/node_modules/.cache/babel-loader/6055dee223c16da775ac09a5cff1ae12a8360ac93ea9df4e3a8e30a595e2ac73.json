{"ast":null,"code":"import { t } from '@superset-ui/core';\nimport { InfoTooltipWithTrigger } from './InfoTooltipWithTrigger';\nimport { Tooltip } from './Tooltip';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport function ControlHeader({ name, description, label, tooltipOnClick, onClick, warning, danger, leftNode, rightNode, validationErrors = [], renderTrigger = false, hovered = false, required = false }) {\n  const renderOptionalIcons = () => {\n    if (hovered) {\n      return _jsxs(\"span\", { children: [\n        description && _jsxs(\"span\", { children: [\n          _jsx(InfoTooltipWithTrigger, { label: t('description'), tooltip: description, placement: \"top\", onClick: tooltipOnClick }), ' '] }\n        ),\n        renderTrigger && _jsxs(\"span\", { children: [\n          _jsx(InfoTooltipWithTrigger, { label: t('bolt'), tooltip: t('Changing this control takes effect instantly'), placement: \"top\", icon: \"bolt\" }), ' '] }\n        )] }\n      );\n    }\n    return null;\n  };\n  if (!label) {\n    return null;\n  }\n  const labelClass = validationErrors.length > 0 ? 'text-danger' : '';\n  return _jsxs(\"div\", { className: \"ControlHeader\", children: [\n    _jsx(\"div\", { className: \"pull-left\", children:\n      _jsxs(\"label\", { className: \"control-label\", htmlFor: name, children: [\n        leftNode && _jsx(\"span\", { children: leftNode }),\n        _jsx(\"span\", { role: \"button\", tabIndex: 0, onClick: onClick, className: labelClass, style: { cursor: onClick ? 'pointer' : '' }, children:\n          label }\n        ), ' ',\n        warning && _jsxs(\"span\", { children: [\n          _jsx(Tooltip, { id: \"error-tooltip\", placement: \"top\", title: warning, children:\n\n\n            _jsx(\"i\", { className: \"fa fa-exclamation-circle text-warning\" }) }\n          ), ' '] }\n        ),\n        danger && _jsxs(\"span\", { children: [\n          _jsx(Tooltip, { id: \"error-tooltip\", placement: \"top\", title: danger, children:\n\n\n            _jsx(\"i\", { className: \"fa fa-exclamation-circle text-danger\" }) }\n          ), ' '] }\n        ),\n        validationErrors.length > 0 && _jsxs(\"span\", { children: [\n          _jsx(Tooltip, { id: \"error-tooltip\", placement: \"top\", title: validationErrors.join(' '), children:\n\n\n            _jsx(\"i\", { className: \"fa fa-exclamation-circle text-danger\" }) }\n          ), ' '] }\n        ),\n        renderOptionalIcons(),\n        required && _jsx(\"span\", { className: \"text-danger m-l-4\", children:\n          _jsx(\"strong\", { children: \"*\" }) }\n        )] }\n      ) }\n    ),\n    rightNode && _jsx(\"div\", { className: \"pull-right\", children: rightNode }),\n    _jsx(\"div\", { className: \"clearfix\" })] }\n  );\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}