{"ast":null,"code":"import _debounce from \"lodash/debounce\"; /**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { styled, css, t, useTheme } from '@superset-ui/core';\nimport cx from 'classnames';\nimport { Tooltip } from 'src/components/Tooltip';\n\nimport { Row } from 'src/components';\nimport { Menu, MainNav } from 'src/components/Menu';\nimport Button from 'src/components/Button';\nimport Icons from 'src/components/Icons';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nconst StyledHeader = styled.div`\n  margin-bottom: ${({ theme }) => theme.gridUnit * 4}px;\n  .header {\n    font-weight: ${({ theme }) => theme.typography.weights.bold};\n    margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    text-align: left;\n    font-size: 18px;\n    padding: ${({ theme }) => theme.gridUnit * 3}px;\n    display: inline-block;\n    line-height: ${({ theme }) => theme.gridUnit * 9}px;\n  }\n  .nav-right {\n    display: flex;\n    align-items: center;\n    padding: ${({ theme }) => theme.gridUnit * 3.5}px 0;\n    margin-right: ${({ theme }) => theme.gridUnit * 3}px;\n    float: right;\n    position: absolute;\n    right: 0;\n    ul.antd5-menu-root {\n      padding: 0px;\n    }\n    li[role='menuitem'] {\n      border: 0;\n      border-bottom: none;\n      &:hover {\n        border-bottom: transparent;\n      }\n    }\n  }\n  .nav-right-collapse {\n    display: flex;\n    align-items: center;\n    padding: 14px 0;\n    margin-right: 0;\n    float: left;\n    padding-left: 10px;\n  }\n  .menu {\n    background-color: ${({ theme }) => theme.colors.grayscale.light5};\n  }\n\n  .menu > .antd5-menu {\n    padding: ${({ theme }) => theme.gridUnit * 5}px\n      ${({ theme }) => theme.gridUnit * 8}px;\n\n    .antd5-menu-item {\n      border-radius: ${({ theme }) => theme.borderRadius}px;\n      font-size: ${({ theme }) => theme.typography.sizes.s}px;\n      padding: ${({ theme }) => theme.gridUnit}px\n        ${({ theme }) => theme.gridUnit * 4}px;\n      margin-right: ${({ theme }) => theme.gridUnit}px;\n    }\n    .antd5-menu-item:hover,\n    .antd5-menu-item:has(> span > .active) {\n      background-color: ${({ theme }) => theme.colors.secondary.light4};\n    }\n  }\n\n  .btn-link {\n    padding: 10px 0;\n  }\n  @media (max-width: 767px) {\n    .header,\n    .nav-right {\n      position: relative;\n      margin-left: ${({ theme }) => theme.gridUnit * 2}px;\n    }\n  }\n`;\nconst styledDisabled = (theme) => css`\n  color: ${theme.colors.grayscale.light1};\n  cursor: not-allowed;\n\n  &:hover {\n    color: ${theme.colors.grayscale.light1};\n  }\n\n  .antd5-menu-item-selected {\n    background-color: ${theme.colors.grayscale.light1};\n  }\n`;\nconst { SubMenu } = MainNav;\nconst SubMenuComponent = (props) => {var _props$tabs, _props$dropDownLinks, _props$buttons;\n  const [showMenu, setMenu] = useState('horizontal');\n  const [navRightStyle, setNavRightStyle] = useState('nav-right');\n  const theme = useTheme();\n  let hasHistory = true;\n  // If no parent <Router> component exists, useHistory throws an error\n  try {\n    useHistory();\n  }\n  catch (err) {\n    // If error is thrown, we know not to use <Link> in render\n    hasHistory = false;\n  }\n  useEffect(() => {\n    function handleResize() {\n      if (window.innerWidth <= 767)\n      setMenu('inline');else\n\n      setMenu('horizontal');\n      if (props.buttons &&\n      props.buttons.length >= 3 &&\n      window.innerWidth >= 795) {\n        // eslint-disable-next-line no-unused-expressions\n        setNavRightStyle('nav-right');\n      } else\n      if (props.buttons &&\n      props.buttons.length >= 3 &&\n      window.innerWidth <= 795) {\n        setNavRightStyle('nav-right-collapse');\n      }\n    }\n    handleResize();\n    const resize = _debounce(handleResize, 10);\n    window.addEventListener('resize', resize);\n    return () => window.removeEventListener('resize', resize);\n  }, [props.buttons]);\n  return _jsxs(StyledHeader, { children: [\n    _jsxs(Row, { className: \"menu\", role: \"navigation\", children: [\n      props.name && _jsx(\"div\", { className: \"header\", children: props.name }),\n      _jsx(Menu, { mode: showMenu, disabledOverflow: true, children: (_props$tabs =\n        props.tabs) == null ? void 0 : _props$tabs.map((tab) => {\n          if ((props.usesRouter || hasHistory) && !!tab.usesRouter) {\n            return _jsx(Menu.Item, { children:\n              _jsx(\"div\", { role: \"tab\", className: tab.name === props.activeChild ? 'active' : '', children:\n                _jsx(\"div\", { children:\n                  _jsx(Link, { to: tab.url || '', children: tab.label }) }\n                ) }\n              ) }, tab.label\n            );\n          }\n          return _jsx(Menu.Item, { children:\n            _jsx(\"div\", { className: cx('no-router', {\n                active: tab.name === props.activeChild\n              }), role: \"tab\", children:\n              _jsx(\"a\", { href: tab.url, onClick: tab.onClick, children:\n                tab.label }\n              ) }\n            ) }, tab.label\n          );\n        }) }\n      ),\n      _jsxs(\"div\", { className: navRightStyle, children: [\n        _jsx(Menu, { mode: \"horizontal\", triggerSubMenuAction: \"click\", disabledOverflow: true, children: (_props$dropDownLinks =\n          props.dropDownLinks) == null ? void 0 : _props$dropDownLinks.map((link, i) => {var _link$childs;return _jsx(SubMenu, { css: css`\n                  [data-icon='caret-down'] {\n                    color: ${theme.colors.grayscale.base};\n                    font-size: ${theme.typography.sizes.xxs}px;\n                    margin-left: ${theme.gridUnit}px;\n                  }\n                `, title: link.label, icon: _jsx(Icons.CaretDownOutlined, {}), popupOffset: [10, 20], className: \"dropdown-menu-links\", children: (_link$childs =\n              link.childs) == null ? void 0 : _link$childs.map((item) => {\n                if (typeof item === 'object') {\n                  return item.disable ? _jsx(MainNav.Item, { css: styledDisabled, disabled: true, children:\n                    _jsx(Tooltip, { placement: \"top\", title: t(\"Enable 'Allow file uploads to database' in any database's settings\"), children:\n                      item.label }\n                    ) }, item.label\n                  ) : _jsx(MainNav.Item, { children:\n                    _jsx(\"a\", { href: item.url, onClick: item.onClick, children:\n                      item.label }\n                    ) }, item.label\n                  );\n                }\n                return null;\n              }) }, i\n            );}) }\n        ), (_props$buttons =\n        props.buttons) == null ? void 0 : _props$buttons.map((btn, i) => _jsx(Button, { buttonStyle: btn.buttonStyle, onClick: btn.onClick, children:\n          btn.name }, i\n        ))] }\n      )] }\n    ),\n    props.children] }\n  );\n};\nexport default SubMenuComponent;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}