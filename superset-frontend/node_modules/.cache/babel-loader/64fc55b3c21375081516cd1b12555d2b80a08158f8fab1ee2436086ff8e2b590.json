{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-console: 0 */\nimport Translator from './Translator';\nlet singleton;\nlet isConfigured = false;\nfunction configure(config) {\n  singleton = new Translator(config);\n  isConfigured = true;\n  return singleton;\n}\nfunction getInstance() {\n  if (!isConfigured) {\n    console.warn('You should call configure(...) before calling other methods');\n  }\n  if (typeof singleton === 'undefined') {\n    singleton = new Translator();\n  }\n  return singleton;\n}\nfunction resetTranslation() {\n  if (isConfigured) {\n    isConfigured = false;\n    singleton = undefined;\n  }\n}\nfunction addTranslation(key, translations) {\n  return getInstance().addTranslation(key, translations);\n}\nfunction addTranslations(translations) {\n  return getInstance().addTranslations(translations);\n}\nfunction addLocaleData(data) {\n  return getInstance().addLocaleData(data);\n}\nfunction t(input, ...args) {\n  return getInstance().translate(input, ...args);\n}\nfunction tn(key, ...args) {\n  return getInstance().translateWithNumber(key, ...args);\n}\nexport { configure, addTranslation, addTranslations, addLocaleData, t, tn, resetTranslation };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}