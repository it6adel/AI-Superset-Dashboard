{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PureComponent } from 'react';\nimport { isDefined } from '../utils';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nfunction checkNumber(input) {\n  return isDefined(input) && typeof input === 'number';\n}\nexport default class ChartFrame extends PureComponent {\n\n\n\n  render() {\n    const { contentWidth, contentHeight, width, height, renderContent } = this.props;\n    const overflowX = checkNumber(contentWidth) && contentWidth > width;\n    const overflowY = checkNumber(contentHeight) && contentHeight > height;\n    if (overflowX || overflowY) {\n      return _jsx(\"div\", { style: {\n          height,\n          overflowX: overflowX ? 'auto' : 'hidden',\n          overflowY: overflowY ? 'auto' : 'hidden',\n          width\n        }, children:\n        renderContent({\n          height: Math.max(contentHeight != null ? contentHeight : 0, height),\n          width: Math.max(contentWidth != null ? contentWidth : 0, width)\n        }) }\n      );\n    }\n    return renderContent({ height, width });\n  }\n}ChartFrame.defaultProps = { renderContent() {} };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}