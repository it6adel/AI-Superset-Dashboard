{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { css, isFeatureEnabled, FeatureFlag } from '@superset-ui/core';\nimport { useSqlLabInitialState } from 'src/hooks/apiResources/sqlLab';\nimport { resetState } from 'src/SqlLab/actions/sqlLab';\nimport { addDangerToast } from 'src/components/MessageToasts/actions';\nimport { SqlLabGlobalStyles } from 'src/SqlLab//SqlLabGlobalStyles';\nimport App from 'src/SqlLab/components/App';\nimport Loading from 'src/components/Loading';\nimport EditorAutoSync from 'src/SqlLab/components/EditorAutoSync';\nimport useEffectEvent from 'src/hooks/useEffectEvent';\nimport { LocationProvider } from './LocationContext';import { jsx as _jsx, jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nexport default function SqlLab() {\n  const lastInitializedAt = useSelector((state) => state.sqlLab.queriesLastUpdate || 0);\n  const { data, isLoading, isError, error, fulfilledTimeStamp } = useSqlLabInitialState();\n  const shouldInitialize = lastInitializedAt <= (fulfilledTimeStamp || 0);\n  const dispatch = useDispatch();\n  const initBootstrapData = useEffectEvent((sqlLabInitialState) => {\n    if (shouldInitialize) {\n      dispatch(resetState(sqlLabInitialState));\n    }\n  });\n  useEffect(() => {\n    if (data) {\n      initBootstrapData(data);\n    }\n  }, [data, initBootstrapData]);\n  if (isLoading || shouldInitialize)\n  return _jsx(Loading, {});\n  if (isError && error != null && error.message) {\n    dispatch(addDangerToast(error == null ? void 0 : error.message));\n    return null;\n  }\n  return _jsx(LocationProvider, { children:\n    _jsxs(\"div\", { css: css`\n          flex: 1 1 auto;\n          position: relative;\n          display: flex;\n          flex-direction: column;\n        `, children: [\n      _jsx(SqlLabGlobalStyles, {}),\n      _jsx(App, {}),\n      isFeatureEnabled(FeatureFlag.SqllabBackendPersistence) && _jsx(EditorAutoSync, {})] }\n    ) }\n  );\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}