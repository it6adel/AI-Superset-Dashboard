{"ast":null,"code":"/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { buildQueryContext, ensureIsArray } from '@superset-ui/core';\nexport default function buildQuery(formData) {\n  const { series_limit_metric } = formData;\n  const sortByMetric = ensureIsArray(series_limit_metric)[0];\n  return buildQueryContext(formData, (baseQueryObject) => {var _metrics;\n    let { metrics, orderby = [] } = baseQueryObject;\n    metrics = metrics || [];\n    // override orderby with timeseries metric\n    if (sortByMetric) {\n      orderby = [[sortByMetric, false]];\n    } else\n    if (((_metrics = metrics) == null ? void 0 : _metrics.length) > 0) {\n      // default to ordering by first metric in descending order\n      // when no \"sort by\" metric is set (regardless if \"SORT DESC\" is set to true)\n      orderby = [[metrics[0], false]];\n    }\n    return [\n    {\n      ...baseQueryObject,\n      orderby\n    }];\n\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}