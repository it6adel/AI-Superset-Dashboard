{"ast":null,"code":"/* eslint-disable react/no-array-index-key */\n/**\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { PathLayer } from '@deck.gl/layers';\nimport { commonLayerProps } from '../common';\nimport sandboxedEval from '../../utils/sandbox';\nimport { createDeckGLComponent } from '../../factory';\nimport TooltipRow from '../../TooltipRow';import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nfunction setTooltipContent(o) {var _o$object;\n  return ((_o$object = o.object) == null ? void 0 : _o$object.extraProps) && _jsx(\"div\", { className: \"deckgl-tooltip\", children:\n    Object.keys(o.object.extraProps).map((prop, index) => _jsx(TooltipRow, { label: `${prop}: `, value: `${o.object.extraProps[prop]}` }, `prop-${index}`)) }\n  );\n}\nexport function getLayer(formData, payload, onAddFilter, setTooltip) {\n  const fd = formData;\n  const c = fd.color_picker;\n  const fixedColor = [c.r, c.g, c.b, 255 * c.a];\n  let data = payload.data.features.map((feature) => ({\n    ...feature,\n    path: feature.path,\n    width: fd.line_width,\n    color: fixedColor\n  }));\n  if (fd.js_data_mutator) {\n    const jsFnMutator = sandboxedEval(fd.js_data_mutator);\n    data = jsFnMutator(data);\n  }\n  return new PathLayer({\n    id: `path-layer-${fd.slice_id}`,\n    getColor: (d) => d.color,\n    getPath: (d) => d.path,\n    getWidth: (d) => d.width,\n    data,\n    rounded: true,\n    widthScale: 1,\n    widthUnits: fd.line_width_unit,\n    ...commonLayerProps(fd, setTooltip, setTooltipContent)\n  });\n}\nfunction getPoints(data) {\n  let points = [];\n  data.forEach((d) => {\n    points = points.concat(d.path);\n  });\n  return points;\n}\nexport default createDeckGLComponent(getLayer, getPoints);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}