{"ast":null,"code":"/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { format as d3Format } from 'd3-format';\nimport NumberFormatter from '../NumberFormatter';\nexport default function createSiAtMostNDigitFormatter(config = {}) {\n  const { description, n = 3, id, label } = config;\n  const siFormatter = d3Format(`.${n}s`);\n  return new NumberFormatter({\n    description,\n    formatFunc: (value) => {\n      const si = siFormatter(value);\n      /* Removing trailing `.00` if any */\n      return si.slice(-1) < 'A' ? parseFloat(si).toString() : si;\n    },\n    id: id != null ? id : `si_at_most_${n}_digit`,\n    label: label != null ? label : `SI with at most ${n} significant digits`\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}