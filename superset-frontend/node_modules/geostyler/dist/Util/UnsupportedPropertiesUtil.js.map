{"version":3,"file":"UnsupportedPropertiesUtil.js","sourceRoot":"","sources":["../../src/Util/UnsupportedPropertiesUtil.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;AAIH,0DAAoC;AAUpC;;GAEG;AACH;IAAA;IAoDA,CAAC;IAlDQ,yCAAe,GAAG,UAAuB,EAY/C;YAXC,QAAQ,cAAA,EACR,cAAc,oBAAA,EACd,qBAAqB,2BAAA,EACrB,uBAAuB,EAAvB,eAAe,mBAAG,KAAK,KAAA,EACvB,cAAwC,EAAxC,MAAM,mBAAG,eAAK,CAAC,yBAAyB,KAAA;QASxC,IAAI,CAAC,qBAAqB,IAAI,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YAC3E,OAAO,EAAE,CAAC;SACX;QAED,IAAM,KAAK,GAA2B,EAAE,CAAC;QACzC,IAAM,0BAA0B,GAAG,yBAAyB;aACzD,gCAAgC,CAAI,qBAAqB,EAAE,cAAc,CAAC,CAAC;QAE9E,IAAM,GAAG,GAAe,0BAA0B,aAA1B,0BAA0B,uBAA1B,0BAA0B,CAAI,QAAmB,CAAC,CAAC;QAC3E,IAAI,GAAG,EAAE;YACP,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;YACzB,IAAI,GAAG,KAAK,MAAM,EAAE;gBAClB,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC;gBACjC,IAAI,eAAe,EAAE;oBACnB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;iBACrB;aACF;iBAAM,IAAI,GAAG,KAAK,SAAS,EAAE;gBAC5B,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,kBAAkB,CAAC;aACxC;iBAAM;gBACL,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBACtB,KAAK,CAAC,cAAc,GAAG,SAAS,CAAC;gBACjC,IAAI,GAAG,CAAC,OAAO,KAAK,MAAM,IAAI,eAAe,EAAE;oBAC7C,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;iBACrB;aACF;SACF;QAED,OAAO,KAAK,CAAC;IACf,CAAC,CAAC;IAEK,0DAAgC,GAAG,UACxC,qBAA4C,EAC5C,cAA8B;;QAE9B,OAAO,MAAA,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,UAAU,0CAAG,cAAc,CAAC,CAAC;IAC7D,CAAC,CAAC;IACJ,gCAAC;CAAA,AApDD,IAoDC;AAED,kBAAe,yBAAyB,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2022-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { FormItemProps } from 'antd';\nimport { SupportDef, Symbolizer, UnsupportedProperties } from 'geostyler-style';\nimport en_US from '../locale/en_US';\nimport { GeoStylerLocale } from '../locale/locale';\n\ntype SymbolizerName = 'LineSymbolizer' |\n'FillSymbolizer' | 'MarkSymbolizer' | 'IconSymbolizer' | 'TextSymbolizer' | 'RasterSymbolizer';\n\ntype UnsupportedSymbolizerProps<T extends Symbolizer> = SupportDef | {\n  [key in keyof Required<T>]?: SupportDef\n};\n\n/**\n * @class UnsupportedPropertiesUtil\n */\nclass UnsupportedPropertiesUtil {\n\n  static getSupportProps = <T extends Symbolizer>({\n    propName,\n    symbolizerName,\n    unsupportedProperties,\n    hideUnsupported = false,\n    locale = en_US.UnsupportedPropertiesUtil\n  }: {\n    propName: keyof T;\n    symbolizerName: SymbolizerName;\n    unsupportedProperties: UnsupportedProperties;\n    hideUnsupported?: boolean;\n    locale?: GeoStylerLocale['UnsupportedPropertiesUtil'];\n  }): Partial<FormItemProps> => {\n\n    if (!unsupportedProperties || Object.keys(unsupportedProperties).length < 1) {\n      return {};\n    }\n\n    const props: Partial<FormItemProps> = {};\n    const unsupportedSymbolizerProps = UnsupportedPropertiesUtil\n      .getUnsupportedPropsForSymbolizer<T>(unsupportedProperties, symbolizerName);\n\n    const val: SupportDef = unsupportedSymbolizerProps?.[(propName as string)];\n    if (val) {\n      props.hasFeedback = true;\n      if (val === 'none') {\n        props.help = locale.notSupported;\n        if (hideUnsupported) {\n          props.hidden = true;\n        }\n      } else if (val === 'partial') {\n        props.help = locale.partiallySupported;\n      } else {\n        props.help = val.info;\n        props.validateStatus = 'warning';\n        if (val.support === 'none' && hideUnsupported) {\n          props.hidden = true;\n        }\n      }\n    }\n\n    return props;\n  };\n\n  static getUnsupportedPropsForSymbolizer = <T extends Symbolizer>(\n    unsupportedProperties: UnsupportedProperties,\n    symbolizerName: SymbolizerName\n  ): UnsupportedSymbolizerProps<T> => {\n    return unsupportedProperties?.Symbolizer?.[symbolizerName];\n  };\n}\n\nexport default UnsupportedPropertiesUtil;\n"]}