{"version":3,"file":"DataUtil.js","sourceRoot":"","sources":["../../src/Util/DataUtil.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;AAIH;;GAEG;AACH;IAAA;IAcA,CAAC;IAbC;;OAEG;IACI,iBAAQ,GAAG,UAAC,CAAO;QACxB,OAAO,CAAc,CAAE,aAAF,CAAC,uBAAD,CAAC,CAAG,eAAe,MAAK,SAAS,CAAC;IACzD,CAAC,CAAC;IAEF;;OAEG;IACI,iBAAQ,GAAG,UAAC,CAAO;QACxB,OAAO,CAAc,CAAE,aAAF,CAAC,uBAAD,CAAC,CAAG,cAAc,MAAK,SAAS,CAAC;IACxD,CAAC,CAAC;IACJ,eAAC;CAAA,AAdD,IAcC;AAED,kBAAe,QAAQ,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { Data, VectorData, RasterData } from 'geostyler-data';\n\n/**\n * @class DataUtil\n */\nclass DataUtil {\n  /**\n   * Checks if Data object is of type VectorData.\n   */\n  static isVector = (v: Data): v is VectorData => {\n    return (<VectorData> v)?.exampleFeatures !== undefined;\n  };\n\n  /**\n   * Checks if Data object is of type RasterData.\n   */\n  static isRaster = (r: Data): r is RasterData => {\n    return (<RasterData> r)?.rasterBandInfo !== undefined;\n  };\n}\n\nexport default DataUtil;\n"]}