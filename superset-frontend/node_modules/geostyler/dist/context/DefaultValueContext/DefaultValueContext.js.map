{"version":3,"file":"DefaultValueContext.js","sourceRoot":"","sources":["../../../src/context/DefaultValueContext/DefaultValueContext.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;;;;;;;;;;;;;;;;;;;;;AAGH,2CAA+B;AAiElB,QAAA,mBAAmB,GAAG,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { WellKnownName } from 'geostyler-style';\nimport * as React from 'react';\n\n/**\n * Creates the DefaultValueContext used for customising\n * default values.\n */\nexport interface DefaultValues {\n  LineEditor?: {\n    defaultWidth?: number;\n    defaultColor?: string;\n    defaultOpacity?: number;\n    defaultPerpendicularOffset?: number;\n    defaultDashOffset?: number;\n    defaultCap?: string;\n    defaultJoin?: string;\n  };\n  IconEditor?: {\n    defaultImage?: string;\n    defaultSize?: number;\n    defaultOffsetX?: number;\n    defaultOffsetY?: number;\n    defaultRotate?: number;\n    defaultOpacity?: number;\n  };\n  FillEditor?: {\n    defaultFillColor?: string;\n    defaultFillOpacity?: number;\n    defaultOpacity?: number;\n    defaultOutlineColor?: string;\n    defaultOutlineWidth?: number;\n    defaultOutlineOpacity?: number;\n  };\n  TextEditor?: {\n    defaultLabel?: string;\n    defaultColor?: string;\n    defaultFont?: string;\n    defaultOpacity?: number;\n    defaultSize?: number;\n    defaultOffsetX?: number;\n    defaultOffsetY?: number;\n    defaultRotate?: number;\n    defaultHaloColor?: string;\n    defaultHaloWidth?: number;\n  };\n  RasterEditor?: {\n    defaultOpacity?: number;\n    defaultGammaValue?: number;\n  };\n  MarkEditor?: {\n    defaultWellKnownName?: WellKnownName;\n  };\n  WellKnownNameEditor?: {\n    defaultRadius?: string;\n    defaultOffsetX?: number;\n    defaultOffsetY?: number;\n    defaultColor?: string;\n    defaultOpacity?: number;\n    defaultFillOpacity?: number;\n    defaultStrokeColor?: string;\n    defaultStrokeWidth?: number;\n    defaultStrokeOpacity?: number;\n    defaultRotate?: number;\n  };\n}\n\nexport const DefaultValueContext = React.createContext({});\n"]}