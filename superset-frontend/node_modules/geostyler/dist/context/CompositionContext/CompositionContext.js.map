{"version":3,"file":"CompositionContext.js","sourceRoot":"","sources":["../../../src/context/CompositionContext/CompositionContext.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,2CAA+B;AAsFlB,QAAA,kBAAkB,GAAG,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\n/**\n * Creates the CompositionContext used for customising\n * specified components. Components can be replaced or\n * disabled.\n *\n * Definition of the compositions object.\n * This object can be used for a CompositionContext\n * to describe which components should be replaced\n * or disabled. For replacing a component, another\n * React component needs to be set as value. By\n * assigning \"false\", the component will be disabled.\n *\n * Important: Context overrides the onChange and value\n * properties for a custom component. This may lead to\n * sideeffects if these props are used elsewhere.\n */\nexport interface Compositions {\n  Editor?: {\n    kindField?: React.ReactElement | false;\n    markEditor?: React.ReactElement | false;\n    iconEditor?: React.ReactElement | false;\n    lineEditor?: React.ReactElement | false;\n    fillEditor?: React.ReactElement | false;\n    textEditor?: React.ReactElement | false;\n    rasterEditor?: React.ReactElement | false;\n  };\n  LineEditor?: {\n    widthField?: React.ReactElement | false;\n    colorField?: React.ReactElement | false;\n    opacityField?: React.ReactElement | false;\n    lineDashField?: React.ReactElement | false;\n    dashOffsetField?: React.ReactElement | false;\n    capField?: React.ReactElement | false;\n    joinField?: React.ReactElement | false;\n    graphicStrokeField?: React.ReactElement | false;\n    graphicFillField?: React.ReactElement | false;\n  };\n  IconEditor?: {\n    imageField?: React.ReactElement | false;\n    sizeField?: React.ReactElement | false;\n    rotateField?: React.ReactElement | false;\n    opacityField?: React.ReactElement | false;\n  };\n  FillEditor?: {\n    fillColorField?: React.ReactElement | false;\n    fillOpacityField?: React.ReactElement | false;\n    outlineColorField?: React.ReactElement | false;\n    outlineWidthField?: React.ReactElement | false;\n    outlineDasharrayField?: React.ReactElement | false;\n    graphicEditorField?: React.ReactElement | false;\n  };\n  TextEditor?: {\n    templateField?: React.ReactElement | false;\n    colorField?: React.ReactElement | false;\n    fontField?: React.ReactElement | false;\n    opacityField?: React.ReactElement | false;\n    sizeField?: React.ReactElement | false;\n    offsetXField?: React.ReactElement | false;\n    offsetYField?: React.ReactElement | false;\n    rotateField?: React.ReactElement | false;\n    haloColorField?: React.ReactElement | false;\n    haloWidthField?: React.ReactElement | false;\n  };\n  RasterEditor?: {\n    opacityField?: React.ReactElement | false;\n    contrastEnhancementField?: React.ReactElement | false;\n    gammaValueField?: React.ReactElement | false;\n    rasterChannelField?: React.ReactElement | false;\n    colorMapField?: React.ReactElement | false;\n  };\n  MarkEditor?: {\n    wellKnownNameField?: React.ReactElement | false;\n  };\n  WellKnownNameEditor?: {\n    radiusField?: React.ReactElement | false;\n    fillColorField?: React.ReactElement | false;\n    fillOpacityField?: React.ReactElement | false;\n    strokeColorField?: React.ReactElement | false;\n    strokeWidthField?: React.ReactElement | false;\n    strokeOpacityField?: React.ReactElement | false;\n    rotateField?: React.ReactElement | false;\n  };\n}\n\nexport const CompositionContext = React.createContext({});\n"]}