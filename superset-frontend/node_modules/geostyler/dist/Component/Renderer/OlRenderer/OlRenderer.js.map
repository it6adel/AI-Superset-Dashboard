{"version":3,"file":"OlRenderer.js","sourceRoot":"","sources":["../../../../src/Component/Renderer/OlRenderer/OlRenderer.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\n\nimport OlMap from 'ol/Map';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\nimport OlGeomPoint from 'ol/geom/Point';\nimport OlGeomLineString from 'ol/geom/LineString';\nimport OlGeomPolygon from 'ol/geom/Polygon';\nimport OlFeature from 'ol/Feature';\nimport OlView from 'ol/View';\n\nimport OlStyleParser from 'geostyler-openlayers-parser';\n\nimport { Symbolizer, SymbolizerKind } from 'geostyler-style';\n\nimport './OlRenderer.less';\n\nimport 'ol/ol.css';\nimport { Data } from 'geostyler-data';\n\nimport _isEqual from 'lodash/isEqual';\nimport _get from 'lodash/get';\nimport _uniqueId from 'lodash/uniqueId';\n\n// non default props\nexport interface OlRendererProps {\n  data?: Data;\n  symbolizers: Symbolizer[];\n  symbolizerKind?: SymbolizerKind;\n  onClick?: (symbolizers: Symbolizer[], event: any) => void;\n}\n\n/**\n * Symbolizer Renderer UI.\n */\nexport const OlRenderer: React.FC<OlRendererProps> = ({\n  data,\n  onClick,\n  symbolizerKind,\n  symbolizers\n}) => {\n\n  /** reference to the underlying OpenLayers map */\n  const map = useRef<OlMap>();\n  const layer = useRef<OlLayerVector<any>>();\n  const [ mapId ] = useState(_uniqueId('map_'));\n\n  const getSampleGeomFromSymbolizer = useCallback(() => {\n    const kind: SymbolizerKind = symbolizerKind || _get(symbolizers, '[0].kind');\n    switch (kind) {\n      case 'Mark':\n      case 'Icon':\n      case 'Text':\n        return new OlGeomPoint([7.10066, 50.735851]);\n      case 'Fill':\n        return new OlGeomPolygon([[\n          [7.1031761169433585, 50.734268655851345],\n          [7.109270095825195, 50.734268655851345, ],\n          [7.109270095825195, 50.73824770380063],\n          [7.1031761169433585, 50.73824770380063],\n          [7.1031761169433585, 50.734268655851345, ]\n        ]]);\n      case 'Line':\n        return new OlGeomLineString([\n          [7.062578201293945, 50.721786104206004],\n          [7.077512741088867, 50.729610159968296],\n          [7.082319259643555, 50.732435192351126],\n          [7.097940444946289, 50.73748722929948],\n          [7.106866836547852, 50.73775882875318],\n          [7.117509841918945, 50.73889952925885],\n          [7.129182815551758, 50.7504679214779]\n        ]);\n      default:\n        return new OlGeomPoint([7.10066, 50.735851]);\n    }\n  }, [symbolizerKind, symbolizers]);\n\n  const updateFeature = useCallback(() => {\n    const exampleFeatureProps: object = _get(data, 'exampleFeatures.features[0].properties');\n\n    layer.current.getSource().clear();\n    const sampleFeature = new OlFeature({\n      geometry: getSampleGeomFromSymbolizer(),\n      Name: 'Sample Feature',\n      ...exampleFeatureProps\n    });\n    layer.current.getSource().addFeature(sampleFeature);\n    // zoom to feature extent\n    const extent = layer.current.getSource().getExtent();\n    map.current.getView().fit(extent, {\n      maxZoom: 20\n    });\n  }, [data, getSampleGeomFromSymbolizer]);\n\n  useEffect(() => {\n    layer.current = new OlLayerVector({\n      source: new OlSourceVector()\n    });\n    map.current = new OlMap({\n      layers: [layer.current],\n      controls: [],\n      interactions: [],\n      target: mapId,\n      view: new OlView({\n        projection: 'EPSG:4326'\n      })\n    });\n  }, [mapId]);\n\n  useEffect(() => {\n    updateFeature();\n  }, [updateFeature]);\n\n  useEffect(() => {\n    applySymbolizers(symbolizers);\n  }, [symbolizers]);\n\n  /**\n   * Transforms the incoming symbolizers to an OpenLayers style object the\n   * GeoStyler parser and applies it to the vector features on the map.\n   *\n   * @param {Symbolizer[]} newSymbolizers The symbolizers holding the style to apply\n   */\n  const applySymbolizers = async(newSymbolizers: Symbolizer[]) => {\n    if (!newSymbolizers) {\n      return undefined;\n    }\n    const styleParser = new OlStyleParser();\n\n    // we have to wrap the symbolizer in a Style object since the writeStyle\n    // only accepts a Style object\n    const style = {\n      name: 'WrapperStyle4Symbolizer',\n      rules: [{\n        name: 'WrapperRule4Symbolizer',\n        symbolizers: newSymbolizers\n      }]\n    };\n    // parser style to OL style\n    const { output: olStyles, errors = [] } = await styleParser.writeStyle(style);\n    if (errors.length > 0) {\n      return undefined;\n    } else {\n      // apply new OL style to vector layer\n      layer.current.setStyle(olStyles);\n      return olStyles;\n    }\n  };\n\n  return (\n    <div\n      onClick={(event) => {\n        if (onClick) {\n          onClick(symbolizers, event);\n        }\n      }}\n      className=\"gs-symbolizer-olrenderer\"\n      id={mapId}\n    />\n  );\n\n};\n\nexport default OlRenderer;\n"]}