"use strict";
/* Released under the BSD 2-Clause License
 *
 * Copyright Â© 2021-present, terrestris GmbH & Co. KG and GeoStyler contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Renderer = void 0;
var react_1 = __importDefault(require("react"));
require("./Renderer.css");
var OlRenderer_1 = __importDefault(require("../OlRenderer/OlRenderer"));
var SLDRenderer_1 = __importDefault(require("../SLDRenderer/SLDRenderer"));
var GeoStylerContext_1 = require("../../../context/GeoStylerContext/GeoStylerContext");
var Renderer = function (props) {
    var composition = (0, GeoStylerContext_1.useGeoStylerComposition)('Renderer', {});
    var composed = __assign(__assign({}, props), composition);
    var _a = composed.rendererType, rendererType = _a === void 0 ? 'OpenLayers' : _a;
    var renderer = null;
    if (rendererType === 'OpenLayers') {
        renderer = (react_1.default.createElement(OlRenderer_1.default, __assign({}, composed)));
    }
    else if (rendererType === 'SLD') {
        renderer = (react_1.default.createElement(SLDRenderer_1.default, __assign({}, composed)));
    }
    return (react_1.default.createElement("div", { className: 'gs-renderer' }, renderer));
};
exports.Renderer = Renderer;
exports.default = exports.Renderer;
//# sourceMappingURL=Renderer.js.map