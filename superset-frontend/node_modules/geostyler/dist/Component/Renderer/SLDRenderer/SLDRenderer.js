"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SLDRenderer = void 0;
/* Released under the BSD 2-Clause License
 *
 * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
var react_1 = __importStar(require("react"));
var geostyler_sld_parser_1 = __importDefault(require("geostyler-sld-parser"));
require("./SLDRenderer.css");
var HTTPUtil_1 = __importDefault(require("../../../Util/HTTPUtil"));
var LoadingIcon_1 = __importDefault(require("./LoadingIcon"));
var styleParser = new geostyler_sld_parser_1.default();
/**
 * Symbolizer Renderer UI.
 */
var SLDRenderer = function (_a) {
    var _b = _a.requestDelay, requestDelay = _b === void 0 ? 500 : _b, _c = _a.width, width = _c === void 0 ? 150 : _c, _d = _a.height, height = _d === void 0 ? 100 : _d, wmsBaseUrl = _a.wmsBaseUrl, layer = _a.layer, rasterLayer = _a.rasterLayer, additionalHeaders = _a.additionalHeaders, wmsParams = _a.wmsParams, onClick = _a.onClick, symbolizers = _a.symbolizers;
    var _e = (0, react_1.useState)(), alt = _e[0], setAlt = _e[1];
    var _f = (0, react_1.useState)(), legendDataUrl = _f[0], setLegendDataUrl = _f[1];
    var requestTimeout = (0, react_1.useRef)();
    /**
     * The function that sets the legends graphic for the symbolizers
     *
     * @param {Symbolizer[]} newSymbolizers The passed symbolizer
     */
    var setLegendGraphicUrlForRule = (0, react_1.useCallback)(function (newSymbolizers) {
        setLegendDataUrl(LoadingIcon_1.default);
        if (requestTimeout) {
            clearTimeout(requestTimeout.current);
        }
        requestTimeout.current = setTimeout(function () { return __awaiter(void 0, void 0, void 0, function () {
            var style, lyr, _a, sld, _b, errors, params, response, error_1;
            var _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        style = {
                            name: 'sld-renderer-style',
                            rules: [{
                                    name: '',
                                    symbolizers: newSymbolizers
                                }]
                        };
                        // As soon as a symbolizer is of type raster symbolizer,
                        // we will only create a legendGraphic for raster layers
                        // as wms cannot return a mixed legendGraphic
                        // TODO
                        if (newSymbolizers.some(function (symbolizer) { return symbolizer.kind === 'Raster'; })) {
                            lyr = rasterLayer || layer;
                        }
                        else {
                            lyr = layer;
                        }
                        return [4 /*yield*/, styleParser.writeStyle(style)];
                    case 1:
                        _a = _d.sent(), sld = _a.output, _b = _a.errors, errors = _b === void 0 ? [] : _b;
                        params = __assign({ 'SERVICE': 'WMS', 'VERSION': '1.3.0', 'REQUEST': 'GetLegendGraphic', 'FORMAT': 'image/png', 'TRANSPARENT': 'true', 'LAYER': lyr, 'SLD_BODY': sld, 'WIDTH': width, 'HEIGHT': height }, wmsParams);
                        _d.label = 2;
                    case 2:
                        _d.trys.push([2, 4, , 5]);
                        return [4 /*yield*/, HTTPUtil_1.default.post({
                                url: wmsBaseUrl,
                                params: params,
                                additionalHeaders: additionalHeaders
                            })];
                    case 3:
                        response = _d.sent();
                        if (response && response.ok) {
                            response.blob().then(function (blob) {
                                setLegendDataUrl(window.URL.createObjectURL(blob));
                            });
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        error_1 = _d.sent();
                        errors.push(error_1);
                        return [3 /*break*/, 5];
                    case 5:
                        if (errors.length > 0) {
                            setAlt((_c = errors[0]) === null || _c === void 0 ? void 0 : _c.message);
                        }
                        return [2 /*return*/];
                }
            });
        }); }, requestDelay);
    }, [
        additionalHeaders,
        height,
        layer,
        rasterLayer,
        requestDelay,
        width,
        wmsBaseUrl,
        wmsParams
    ]);
    (0, react_1.useEffect)(function () {
        setLegendGraphicUrlForRule(symbolizers);
    }, [symbolizers, setLegendGraphicUrlForRule]);
    return (react_1.default.createElement("div", { onClick: function (event) {
            if (onClick) {
                onClick(symbolizers, event);
            }
        }, className: "gs-symbolizer-sldrenderer" },
        react_1.default.createElement("img", { width: width, height: height, src: legendDataUrl, alt: alt })));
};
exports.SLDRenderer = SLDRenderer;
exports.default = exports.SLDRenderer;
//# sourceMappingURL=SLDRenderer.js.map