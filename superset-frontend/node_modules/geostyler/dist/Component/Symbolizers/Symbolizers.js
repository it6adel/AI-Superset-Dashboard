"use strict";
/* eslint-disable camelcase */
/* Released under the BSD 2-Clause License
 *
 * Copyright Â© 2021-present, terrestris GmbH & Co. KG and GeoStyler contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Symbolizers = void 0;
var react_1 = __importStar(require("react"));
var core_1 = require("@dnd-kit/core");
var sortable_1 = require("@dnd-kit/sortable");
var LocaleWrapper_1 = require("../LocaleWrapper/LocaleWrapper");
var en_US_1 = __importDefault(require("../../locale/en_US"));
require("./Symbolizers.css");
var antd_1 = require("antd");
var cloneDeep_1 = __importDefault(require("lodash/cloneDeep"));
var uniqueId_1 = __importDefault(require("lodash/uniqueId"));
var SymbolizerCard_1 = __importDefault(require("../SymbolizerCard/SymbolizerCard"));
var icons_1 = require("@ant-design/icons");
var SymbolizerUtil_1 = __importDefault(require("../../Util/SymbolizerUtil"));
var SortableItem_1 = require("../SortableItem/SortableItem");
var UseDragDropSensors_1 = require("../../hook/UseDragDropSensors");
var RemovableItem_1 = require("../RemovableItem/RemovableItem");
var Symbolizers = function (_a) {
    var _b = _a.locale, locale = _b === void 0 ? en_US_1.default.Symbolizers : _b, symbolizers = _a.symbolizers, _c = _a.onSymbolizersChange, onSymbolizersChange = _c === void 0 ? function () { } : _c, _d = _a.onEditSymbolizerClick, onEditSymbolizerClick = _d === void 0 ? function () { } : _d, data = _a.data;
    var _e = (0, react_1.useState)(false), showAll = _e[0], setShowAll = _e[1];
    var toggleShowAll = function () {
        setShowAll(!showAll);
    };
    var removeSymbolizer = function (symbolizerIdx) {
        var symbolizersClone = (0, cloneDeep_1.default)(symbolizers);
        symbolizersClone.splice(symbolizerIdx, 1);
        onSymbolizersChange(symbolizersClone);
    };
    var onAddSymbolizerClick = function () {
        var symbolizersClone = (0, cloneDeep_1.default)(symbolizers);
        symbolizersClone.push(SymbolizerUtil_1.default.defaultSymbolizer);
        onSymbolizersChange(symbolizersClone);
    };
    var symbolizerCards = symbolizers.map(function (symbolizer, idx) {
        return (react_1.default.createElement(SymbolizerCard_1.default, { key: (0, uniqueId_1.default)('symbolizer'), symbolizer: symbolizer, onSymbolizerClick: function () {
                onEditSymbolizerClick(idx);
            }, data: data }));
    });
    var removableSymbolizerCards = symbolizerCards.map(function (symbolizerCard, idx) {
        var key = (0, uniqueId_1.default)('symbolizer');
        return (react_1.default.createElement(RemovableItem_1.RemovableItem, { key: key, onRemoveClick: function () {
                removeSymbolizer(idx);
            } }, symbolizerCard));
    });
    var sortableAndRemovableSymbolizerCards = removableSymbolizerCards.map(function (symbolizerCard, idx) {
        var key = (0, uniqueId_1.default)('symbolizer');
        // id must be truthy, so we have to increment the index by 1
        var id = idx + 1;
        return (react_1.default.createElement(SortableItem_1.SortableItem, { key: key, id: id }, symbolizerCard));
    });
    var onDragEnd = function (evt) {
        var active = evt.active, over = evt.over;
        if (active.id !== over.id) {
            var newOrder = (0, sortable_1.arrayMove)(__spreadArray([], symbolizers, true), active.id - 1, over.id - 1);
            onSymbolizersChange(newOrder);
        }
    };
    var sensors = (0, UseDragDropSensors_1.useDragDropSensors)();
    return (react_1.default.createElement("div", { className: 'gs-symbolizers' },
        react_1.default.createElement("div", { className: 'gs-symbolizers-header' },
            react_1.default.createElement("h2", null, locale.symbolizersTitle)),
        react_1.default.createElement(antd_1.Divider, null),
        react_1.default.createElement("div", { className: 'gs-symbolizers-content' },
            react_1.default.createElement("div", { className: "".concat(showAll ? 'gs-symbolizers-grid' : 'gs-symbolizers-list') },
                showAll && (react_1.default.createElement(core_1.DndContext, { onDragEnd: onDragEnd, sensors: sensors, collisionDetection: core_1.closestCenter },
                    react_1.default.createElement(sortable_1.SortableContext, { items: symbolizers.map(function (s, idx) { return idx + 1; }) },
                        sortableAndRemovableSymbolizerCards,
                        react_1.default.createElement("div", null,
                            react_1.default.createElement(antd_1.Card, { className: 'gs-symbolizer-card gs-add-button', hoverable: true, onClick: onAddSymbolizerClick },
                                react_1.default.createElement(icons_1.PlusOutlined, null)))))),
                !showAll && (react_1.default.createElement(core_1.DndContext, { onDragEnd: onDragEnd, sensors: sensors, collisionDetection: core_1.closestCenter },
                    react_1.default.createElement(sortable_1.SortableContext, { items: symbolizers.map(function (s, idx) { return idx + 1; }) }, sortableAndRemovableSymbolizerCards)))),
            !showAll && (react_1.default.createElement("div", { className: 'gs-symbolizer-card' },
                react_1.default.createElement(antd_1.Card, { className: 'gs-symbolizer-card gs-add-button', hoverable: true, onClick: onAddSymbolizerClick },
                    react_1.default.createElement(icons_1.PlusOutlined, null))))),
        react_1.default.createElement("div", { className: 'gs-symbolizers-footer' },
            react_1.default.createElement(antd_1.Button, { type: "link", onClick: toggleShowAll }, showAll ? locale.hide : locale.showAll))));
};
exports.Symbolizers = Symbolizers;
exports.default = (0, LocaleWrapper_1.localize)(exports.Symbolizers, 'Symbolizers');
//# sourceMappingURL=Symbolizers.js.map