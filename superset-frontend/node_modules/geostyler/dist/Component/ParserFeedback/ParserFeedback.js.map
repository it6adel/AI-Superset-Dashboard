{"version":3,"file":"ParserFeedback.js","sourceRoot":"","sources":["../../../src/Component/ParserFeedback/ParserFeedback.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2022-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { Alert } from 'antd';\nimport { ReadStyleResult, WriteStyleResult } from 'geostyler-style';\nimport React from 'react';\nimport en_US from '../../locale/en_US';\nimport { GeoStylerLocale } from '../../locale/locale';\n\nexport interface ParserFeedbackProps {\n  locale?: GeoStylerLocale['ParserFeedback'];\n  feedback: ReadStyleResult | WriteStyleResult;\n}\n\n/**\n * Checkbox field for a boolean filter value.\n */\nexport const ParserFeedback: React.FC<ParserFeedbackProps> = ({\n  locale  = en_US.ParserFeedback,\n  feedback\n}) => {\n\n  if (!feedback || Object.keys(feedback).length < 1) {\n    return null;\n  }\n\n  const {\n    errors,\n    warnings,\n    unsupportedProperties\n  } = feedback;\n\n  const warningAlerts = warnings?.map((warning, index) => (\n    <Alert\n      showIcon\n      key={`warning-${index}`}\n      type='warning'\n      message={warning}\n    />\n  ));\n\n  const errorAlerts = errors?.map((error, index) => (\n    <Alert\n      showIcon\n      key={`error-${index}`}\n      type='error'\n      message={error.message}\n    />\n  ));\n\n  const strings: string[] = [];\n\n  const getTextualRepresentation = (value: any) => {\n    let text;\n    if (typeof value === 'string' || value instanceof String) {\n      if (value === 'none') {\n        text = locale.notSupported;\n      } else if (value === 'partial') {\n        text = locale.partiallySupported;\n      }\n    } else if (value.support) {\n      if (value.support === 'none') {\n        text = `${locale.notSupported}: ${value.info}`;\n      } else if (value.support === 'partial') {\n        text = `${locale.partiallySupported}: ${value.info}`;\n      }\n    }\n    return text;\n  };\n\n  const prepareUnsupportedProperties = (obj: any, prefix = '') => {\n    Object.keys(obj)\n      .forEach(key => {\n        const value = obj[key];\n        if (typeof value === 'string' || value instanceof String || value.support) {\n          strings.push(`${prefix}${key} ${getTextualRepresentation(value)}`);\n        } else {\n          prepareUnsupportedProperties(value, `${key}.`);\n        }\n      });\n  };\n\n  if (unsupportedProperties) {\n    prepareUnsupportedProperties(unsupportedProperties);\n  }\n\n  const unsupportedPropertiesAlerts = strings?.map((unsupportedProperty, index) => (\n    <Alert\n      showIcon\n      key={`unsupportedProperty-${index}`}\n      type='warning'\n      message={unsupportedProperty}\n    />\n  ));\n\n  return (\n    <div className=\"gs-parser-feedback\">\n      <div className={'error-alerts'}>\n        {errorAlerts}\n      </div>\n      <div className={'warning-alerts'}>\n        {warningAlerts}\n        {unsupportedPropertiesAlerts}\n      </div>\n    </div>\n  );\n};\n\nexport default ParserFeedback;\n"]}