{"version":3,"file":"TextEditor.js","sourceRoot":"","sources":["../../../../src/Component/Symbolizer/TextEditor/TextEditor.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React, { useContext } from 'react';\nimport {\n  Mentions,\n  Form\n} from 'antd';\n\nconst {\n  Option: MentionOption\n} = Mentions;\n\nimport {\n  Symbolizer,\n  TextSymbolizer\n} from 'geostyler-style';\n\nimport ColorField from '../Field/ColorField/ColorField';\nimport OpacityField from '../Field/OpacityField/OpacityField';\nimport WidthField from '../Field/WidthField/WidthField';\nimport FontPicker from '../Field/FontPicker/FontPicker';\nimport OffsetField from '../Field/OffsetField/OffsetField';\nimport RotateField from '../Field/RotateField/RotateField';\nimport { CompositionContext, Compositions } from '../../../context/CompositionContext/CompositionContext';\nimport CompositionUtil from '../../../Util/CompositionUtil';\nimport withDefaultsContext from '../../../hoc/withDefaultsContext';\nimport { DefaultValues } from '../../../context/DefaultValueContext/DefaultValueContext';\n\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\n\nimport './TextEditor.less';\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../../locale/en_US';\nimport { VectorData } from 'geostyler-data';\nimport { GeoStylerLocale } from '../../../locale/locale';\nimport {\n  UnsupportedPropertiesContext\n} from '../../../context/UnsupportedPropertiesContext/UnsupportedPropertiesContext';\nimport UnsupportedPropertiesUtil from '../../../Util/UnsupportedPropertiesUtil';\n\ninterface TextEditorDefaultProps {\n  locale: GeoStylerLocale['TextEditor'];\n}\n\n// non default props\nexport interface TextEditorProps extends Partial<TextEditorDefaultProps> {\n  symbolizer: TextSymbolizer;\n  onSymbolizerChange?: (changedSymb: Symbolizer) => void;\n  internalDataDef?: VectorData;\n  defaultValues?: DefaultValues;\n}\n\nconst COMPONENTNAME = 'TextEditor';\n\n/**\n * The TextEditor class. Allows to edit text styles based on a template string\n * where words wrapped in double curly braces ({{}}) will be understood as\n * feature properties and text without curly braces as static text.\n */\nexport const TextEditor: React.FC<TextEditorProps> = ({\n  locale = en_US.TextEditor,\n  symbolizer,\n  onSymbolizerChange,\n  internalDataDef,\n  defaultValues\n}) => {\n\n  const {\n    unsupportedProperties,\n    options\n  } = useContext(UnsupportedPropertiesContext);\n\n  const onLabelChange = (value: any) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.label = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onColorChange = (value: string) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.color = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onFontChange = (value: string[]) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.font = value.length > 0 ? value : undefined;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOpacityChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.opacity = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onSizeChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.size = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOffsetXChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    let newOffset: [number, number] = [value, (symbolizerClone.offset ? symbolizerClone.offset[1] : 0) as number];\n    symbolizerClone.offset = newOffset;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOffsetYChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    let newOffset: [number, number] = [(symbolizerClone.offset ? symbolizerClone.offset[0] : 0) as number, value];\n    symbolizerClone.offset = newOffset;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onRotateChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.rotate = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onHaloColorChange = (value: string) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.haloColor = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onHaloWidthChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.haloWidth = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const clonedSymbolizer = _cloneDeep(symbolizer);\n\n  const {\n    opacity,\n    color,\n    font,\n    offset,\n    size,\n    rotate,\n    haloColor,\n    haloWidth\n  } = clonedSymbolizer;\n\n  // split the current offset\n  let offsetX: number;\n  let offsetY: number;\n  if (offset) {\n    offsetX = offset[0] as number;\n    offsetY = offset[1] as number;\n  }\n  const properties = internalDataDef && internalDataDef.schema ? Object.keys(internalDataDef.schema.properties) : [];\n\n  const getSupportProps = (propName: keyof TextSymbolizer) => {\n    return UnsupportedPropertiesUtil.getSupportProps<TextSymbolizer>({\n      propName,\n      symbolizerName: 'TextSymbolizer',\n      unsupportedProperties,\n      ...options\n    });\n  };\n\n  return (\n    <CompositionContext.Consumer>\n      {(composition: Compositions) => (\n        <div className=\"gs-text-symbolizer-editor\" >\n          <Form.Item\n            label={locale.templateFieldLabel}\n            {...getSupportProps('label')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'TextEditor.templateField',\n                onChange: onLabelChange,\n                propName: 'value',\n                propValue: symbolizer.label || '',\n                defaultValue: defaultValues?.TextEditor?.defaultLabel,\n                defaultElement: (\n                  <Mentions\n                    className=\"editor-field\"\n                    placeholder={locale.templateFieldLabel}\n                    prefix=\"{{\"\n                    notFoundContent={locale.attributeNotFound}\n                  >\n                    {properties.map(p => <MentionOption key={p} value={`${p}}}`}>{p}</MentionOption>)}\n                  </Mentions>\n                )\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.colorLabel}\n            {...getSupportProps('color')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'TextEditor.colorField',\n                onChange: onColorChange,\n                propName: 'color',\n                propValue: color,\n                defaultValue: defaultValues?.TextEditor?.defaultColor,\n                defaultElement: <ColorField />\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.fontLabel}\n            {...getSupportProps('font')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'TextEditor.fontField',\n                onChange: onFontChange,\n                propName: 'font',\n                propValue: font,\n                defaultValue: defaultValues?.TextEditor?.defaultFont,\n                defaultElement: <FontPicker />\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.opacityLabel}\n            {...getSupportProps('opacity')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'TextEditor.opacityField',\n                onChange: onOpacityChange,\n                propName: 'opacity',\n                propValue: opacity,\n                defaultValue: defaultValues?.TextEditor?.defaultOpacity,\n                defaultElement: <OpacityField />\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.sizeLabel}\n            {...getSupportProps('size')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'TextEditor.sizeField',\n                onChange: onSizeChange,\n                propName: 'width',\n                propValue: size,\n                defaultValue: defaultValues?.TextEditor?.defaultSize,\n                defaultElement: <WidthField />\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.offsetXLabel}\n            {...getSupportProps('offset')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'TextEditor.offsetXField',\n                onChange: onOffsetXChange,\n                propName: 'offset',\n                propValue: offsetX,\n                defaultValue: defaultValues?.TextEditor?.defaultOffsetX,\n                defaultElement: <OffsetField />\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.offsetYLabel}\n            {...getSupportProps('offset')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'TextEditor.offsetYField',\n                onChange: onOffsetYChange,\n                propName: 'offset',\n                propValue: offsetY,\n                defaultValue: defaultValues?.TextEditor?.defaultOffsetY,\n                defaultElement: <OffsetField />\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.rotateLabel}\n            {...getSupportProps('rotate')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'TextEditor.rotateField',\n                onChange: onRotateChange,\n                propName: 'rotate',\n                propValue: rotate,\n                defaultValue: defaultValues?.TextEditor?.defaultRotate,\n                defaultElement: <RotateField />\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.haloColorLabel}\n            {...getSupportProps('haloColor')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'TextEditor.haloColorField',\n                onChange: onHaloColorChange,\n                propName: 'color',\n                propValue: haloColor,\n                defaultValue: defaultValues?.TextEditor?.defaultHaloColor,\n                defaultElement: <ColorField />\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.haloWidthLabel}\n            {...getSupportProps('haloWidth')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'TextEditor.haloWidthField',\n                onChange: onHaloWidthChange,\n                propName: 'width',\n                propValue: haloWidth,\n                defaultValue: defaultValues?.TextEditor?.defaultHaloWidth,\n                defaultElement: <WidthField />\n              })\n            }\n          </Form.Item>\n        </div>\n      )}\n    </CompositionContext.Consumer>\n  );\n};\n\nexport default withDefaultsContext(localize(TextEditor, COMPONENTNAME));\n"]}