"use strict";
/* Released under the BSD 2-Clause License
 *
 * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextEditor = void 0;
var react_1 = __importStar(require("react"));
var antd_1 = require("antd");
var MentionOption = antd_1.Mentions.Option;
var ColorField_1 = __importDefault(require("../Field/ColorField/ColorField"));
var OpacityField_1 = __importDefault(require("../Field/OpacityField/OpacityField"));
var WidthField_1 = __importDefault(require("../Field/WidthField/WidthField"));
var FontPicker_1 = __importDefault(require("../Field/FontPicker/FontPicker"));
var OffsetField_1 = __importDefault(require("../Field/OffsetField/OffsetField"));
var RotateField_1 = __importDefault(require("../Field/RotateField/RotateField"));
var CompositionContext_1 = require("../../../context/CompositionContext/CompositionContext");
var CompositionUtil_1 = __importDefault(require("../../../Util/CompositionUtil"));
var withDefaultsContext_1 = __importDefault(require("../../../hoc/withDefaultsContext"));
var cloneDeep_1 = __importDefault(require("lodash/cloneDeep"));
require("./TextEditor.css");
var LocaleWrapper_1 = require("../../LocaleWrapper/LocaleWrapper");
var en_US_1 = __importDefault(require("../../../locale/en_US"));
var UnsupportedPropertiesContext_1 = require("../../../context/UnsupportedPropertiesContext/UnsupportedPropertiesContext");
var UnsupportedPropertiesUtil_1 = __importDefault(require("../../../Util/UnsupportedPropertiesUtil"));
var COMPONENTNAME = 'TextEditor';
/**
 * The TextEditor class. Allows to edit text styles based on a template string
 * where words wrapped in double curly braces ({{}}) will be understood as
 * feature properties and text without curly braces as static text.
 */
var TextEditor = function (_a) {
    var _b = _a.locale, locale = _b === void 0 ? en_US_1.default.TextEditor : _b, symbolizer = _a.symbolizer, onSymbolizerChange = _a.onSymbolizerChange, internalDataDef = _a.internalDataDef, defaultValues = _a.defaultValues;
    var _c = (0, react_1.useContext)(UnsupportedPropertiesContext_1.UnsupportedPropertiesContext), unsupportedProperties = _c.unsupportedProperties, options = _c.options;
    var onLabelChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.label = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onColorChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.color = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onFontChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.font = value.length > 0 ? value : undefined;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onOpacityChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.opacity = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onSizeChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.size = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onOffsetXChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        var newOffset = [value, (symbolizerClone.offset ? symbolizerClone.offset[1] : 0)];
        symbolizerClone.offset = newOffset;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onOffsetYChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        var newOffset = [(symbolizerClone.offset ? symbolizerClone.offset[0] : 0), value];
        symbolizerClone.offset = newOffset;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onRotateChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.rotate = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onHaloColorChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.haloColor = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onHaloWidthChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.haloWidth = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var clonedSymbolizer = (0, cloneDeep_1.default)(symbolizer);
    var opacity = clonedSymbolizer.opacity, color = clonedSymbolizer.color, font = clonedSymbolizer.font, offset = clonedSymbolizer.offset, size = clonedSymbolizer.size, rotate = clonedSymbolizer.rotate, haloColor = clonedSymbolizer.haloColor, haloWidth = clonedSymbolizer.haloWidth;
    // split the current offset
    var offsetX;
    var offsetY;
    if (offset) {
        offsetX = offset[0];
        offsetY = offset[1];
    }
    var properties = internalDataDef && internalDataDef.schema ? Object.keys(internalDataDef.schema.properties) : [];
    var getSupportProps = function (propName) {
        return UnsupportedPropertiesUtil_1.default.getSupportProps(__assign({ propName: propName, symbolizerName: 'TextSymbolizer', unsupportedProperties: unsupportedProperties }, options));
    };
    return (react_1.default.createElement(CompositionContext_1.CompositionContext.Consumer, null, function (composition) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        return (react_1.default.createElement("div", { className: "gs-text-symbolizer-editor" },
            react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.templateFieldLabel }, getSupportProps('label')), CompositionUtil_1.default.handleComposition({
                composition: composition,
                path: 'TextEditor.templateField',
                onChange: onLabelChange,
                propName: 'value',
                propValue: symbolizer.label || '',
                defaultValue: (_a = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.TextEditor) === null || _a === void 0 ? void 0 : _a.defaultLabel,
                defaultElement: (react_1.default.createElement(antd_1.Mentions, { className: "editor-field", placeholder: locale.templateFieldLabel, prefix: "{{", notFoundContent: locale.attributeNotFound }, properties.map(function (p) { return react_1.default.createElement(MentionOption, { key: p, value: "".concat(p, "}}") }, p); })))
            })),
            react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.colorLabel }, getSupportProps('color')), CompositionUtil_1.default.handleComposition({
                composition: composition,
                path: 'TextEditor.colorField',
                onChange: onColorChange,
                propName: 'color',
                propValue: color,
                defaultValue: (_b = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.TextEditor) === null || _b === void 0 ? void 0 : _b.defaultColor,
                defaultElement: react_1.default.createElement(ColorField_1.default, null)
            })),
            react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.fontLabel }, getSupportProps('font')), CompositionUtil_1.default.handleComposition({
                composition: composition,
                path: 'TextEditor.fontField',
                onChange: onFontChange,
                propName: 'font',
                propValue: font,
                defaultValue: (_c = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.TextEditor) === null || _c === void 0 ? void 0 : _c.defaultFont,
                defaultElement: react_1.default.createElement(FontPicker_1.default, null)
            })),
            react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.opacityLabel }, getSupportProps('opacity')), CompositionUtil_1.default.handleComposition({
                composition: composition,
                path: 'TextEditor.opacityField',
                onChange: onOpacityChange,
                propName: 'opacity',
                propValue: opacity,
                defaultValue: (_d = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.TextEditor) === null || _d === void 0 ? void 0 : _d.defaultOpacity,
                defaultElement: react_1.default.createElement(OpacityField_1.default, null)
            })),
            react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.sizeLabel }, getSupportProps('size')), CompositionUtil_1.default.handleComposition({
                composition: composition,
                path: 'TextEditor.sizeField',
                onChange: onSizeChange,
                propName: 'width',
                propValue: size,
                defaultValue: (_e = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.TextEditor) === null || _e === void 0 ? void 0 : _e.defaultSize,
                defaultElement: react_1.default.createElement(WidthField_1.default, null)
            })),
            react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.offsetXLabel }, getSupportProps('offset')), CompositionUtil_1.default.handleComposition({
                composition: composition,
                path: 'TextEditor.offsetXField',
                onChange: onOffsetXChange,
                propName: 'offset',
                propValue: offsetX,
                defaultValue: (_f = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.TextEditor) === null || _f === void 0 ? void 0 : _f.defaultOffsetX,
                defaultElement: react_1.default.createElement(OffsetField_1.default, null)
            })),
            react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.offsetYLabel }, getSupportProps('offset')), CompositionUtil_1.default.handleComposition({
                composition: composition,
                path: 'TextEditor.offsetYField',
                onChange: onOffsetYChange,
                propName: 'offset',
                propValue: offsetY,
                defaultValue: (_g = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.TextEditor) === null || _g === void 0 ? void 0 : _g.defaultOffsetY,
                defaultElement: react_1.default.createElement(OffsetField_1.default, null)
            })),
            react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.rotateLabel }, getSupportProps('rotate')), CompositionUtil_1.default.handleComposition({
                composition: composition,
                path: 'TextEditor.rotateField',
                onChange: onRotateChange,
                propName: 'rotate',
                propValue: rotate,
                defaultValue: (_h = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.TextEditor) === null || _h === void 0 ? void 0 : _h.defaultRotate,
                defaultElement: react_1.default.createElement(RotateField_1.default, null)
            })),
            react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.haloColorLabel }, getSupportProps('haloColor')), CompositionUtil_1.default.handleComposition({
                composition: composition,
                path: 'TextEditor.haloColorField',
                onChange: onHaloColorChange,
                propName: 'color',
                propValue: haloColor,
                defaultValue: (_j = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.TextEditor) === null || _j === void 0 ? void 0 : _j.defaultHaloColor,
                defaultElement: react_1.default.createElement(ColorField_1.default, null)
            })),
            react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.haloWidthLabel }, getSupportProps('haloWidth')), CompositionUtil_1.default.handleComposition({
                composition: composition,
                path: 'TextEditor.haloWidthField',
                onChange: onHaloWidthChange,
                propName: 'width',
                propValue: haloWidth,
                defaultValue: (_k = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.TextEditor) === null || _k === void 0 ? void 0 : _k.defaultHaloWidth,
                defaultElement: react_1.default.createElement(WidthField_1.default, null)
            }))));
    }));
};
exports.TextEditor = TextEditor;
exports.default = (0, withDefaultsContext_1.default)((0, LocaleWrapper_1.localize)(exports.TextEditor, COMPONENTNAME));
//# sourceMappingURL=TextEditor.js.map