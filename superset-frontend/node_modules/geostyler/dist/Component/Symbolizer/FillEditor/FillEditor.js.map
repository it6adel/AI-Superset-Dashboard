{"version":3,"file":"FillEditor.js","sourceRoot":"","sources":["../../../../src/Component/Symbolizer/FillEditor/FillEditor.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React, { useContext } from 'react';\nimport {\n  Collapse,\n  Form\n} from 'antd';\n\nimport {\n  Symbolizer,\n  FillSymbolizer,\n  PointSymbolizer,\n  GraphicType\n} from 'geostyler-style';\n\nimport ColorField from '../Field/ColorField/ColorField';\nimport OpacityField from '../Field/OpacityField/OpacityField';\nimport GraphicEditor from '../GraphicEditor/GraphicEditor';\nimport WidthField from '../Field/WidthField/WidthField';\n\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _get from 'lodash/get';\nimport _isEqual from 'lodash/isEqual';\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../../locale/en_US';\nimport LineDashField from '../Field/LineDashField/LineDashField';\nimport { CompositionContext, Compositions } from '../../../context/CompositionContext/CompositionContext';\nimport CompositionUtil from '../../../Util/CompositionUtil';\nimport withDefaultsContext from '../../../hoc/withDefaultsContext';\nimport { DefaultValues } from '../../../context/DefaultValueContext/DefaultValueContext';\nimport { GeoStylerLocale } from '../../../locale/locale';\nimport {\n  UnsupportedPropertiesContext\n} from '../../../context/UnsupportedPropertiesContext/UnsupportedPropertiesContext';\nimport UnsupportedPropertiesUtil from '../../../Util/UnsupportedPropertiesUtil';\n\nconst Panel = Collapse.Panel;\n\ninterface FillEditorDefaultProps {\n  locale: GeoStylerLocale['FillEditor'];\n}\n\n// non default props\nexport interface FillEditorProps extends Partial<FillEditorDefaultProps> {\n  symbolizer: FillSymbolizer;\n  onSymbolizerChange?: (changedSymb: Symbolizer) => void;\n  defaultValues?: DefaultValues;\n}\n\nconst COMPONENTNAME = 'FillEditor';\n\nexport const FillEditor: React.FC<FillEditorProps> = ({\n  locale = en_US.FillEditor,\n  symbolizer,\n  onSymbolizerChange,\n  defaultValues\n}) => {\n\n  const {\n    unsupportedProperties,\n    options\n  } = useContext(UnsupportedPropertiesContext);\n\n  const onFillColorChange = (value: string) => {\n    const symbolizerClone: FillSymbolizer = _cloneDeep(symbolizer);\n    symbolizerClone.color = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onFillOpacityChange = (value: number) => {\n    const symbolizerClone: FillSymbolizer = _cloneDeep(symbolizer);\n    symbolizerClone.fillOpacity = value;\n\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOpacityChange = (value: number) => {\n    const symbolizerClone: FillSymbolizer = _cloneDeep(symbolizer);\n    symbolizerClone.opacity = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOutlineOpacityChange = (value: number) => {\n    const symbolizerClone: FillSymbolizer = _cloneDeep(symbolizer);\n    symbolizerClone.outlineOpacity = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOutlineColorChange = (value: string) => {\n    const symbolizerClone: FillSymbolizer = _cloneDeep(symbolizer);\n    symbolizerClone.outlineColor = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOutlineWidthChange = (value: number) => {\n    const symbolizerClone: FillSymbolizer = _cloneDeep(symbolizer);\n    symbolizerClone.outlineWidth = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOutlineDasharrayChange = (value: number[]) => {\n    const symbolizerClone: FillSymbolizer = _cloneDeep(symbolizer);\n    symbolizerClone.outlineDasharray = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onGraphicChange = (newGraphicFill: PointSymbolizer) => {\n    const symbolizerClone: FillSymbolizer = _cloneDeep(symbolizer);\n    symbolizerClone.graphicFill = newGraphicFill;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const {\n    color,\n    fillOpacity,\n    outlineColor,\n    graphicFill,\n    outlineWidth,\n    outlineDasharray,\n    opacity,\n    outlineOpacity\n  } = symbolizer;\n\n  const getSupportProps = (propName: keyof FillSymbolizer) => {\n    return UnsupportedPropertiesUtil.getSupportProps<FillSymbolizer>({\n      propName,\n      symbolizerName: 'FillSymbolizer',\n      unsupportedProperties,\n      ...options\n    });\n  };\n\n  return (\n    <CompositionContext.Consumer>\n      {(composition: Compositions) => (\n        <div className=\"gs-fill-symbolizer-editor\" >\n          <Collapse bordered={false} defaultActiveKey={['1']}>\n            <Panel header=\"General\" key=\"1\">\n              <Form.Item\n                label={locale.fillColorLabel}\n                {...getSupportProps('color')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'FillEditor.fillColorField',\n                    onChange: onFillColorChange,\n                    propName: 'color',\n                    propValue: color,\n                    defaultValue: defaultValues?.FillEditor?.defaultFillColor,\n                    defaultElement: <ColorField />\n                  })\n                }\n              </Form.Item>\n              <Form.Item\n                label={locale.fillOpacityLabel}\n                {...getSupportProps('fillOpacity')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'FillEditor.fillOpacityField',\n                    onChange: onFillOpacityChange,\n                    propName: 'fillOpacity',\n                    propValue: fillOpacity,\n                    defaultValue: defaultValues?.FillEditor?.defaultFillOpacity,\n                    defaultElement: <OpacityField />\n                  })\n                }\n              </Form.Item>\n              <Form.Item\n                label={locale.opacityLabel}\n                {...getSupportProps('opacity')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'FillEditor.opacityField',\n                    onChange: onOpacityChange,\n                    propName: 'opacity',\n                    propValue: opacity,\n                    defaultValue: defaultValues?.FillEditor?.defaultOpacity,\n                    defaultElement: <OpacityField />\n                  })\n                }\n              </Form.Item>\n              <Form.Item\n                label={locale.outlineOpacityLabel}\n                {...getSupportProps('outlineOpacity')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'FillEditor.outlineOpacityField',\n                    onChange: onOutlineOpacityChange,\n                    propName: 'opacity',\n                    propValue: outlineOpacity,\n                    defaultValue: defaultValues?.FillEditor?.defaultOutlineOpacity,\n                    defaultElement: <OpacityField />\n                  })\n                }\n              </Form.Item>\n              <Form.Item\n                label={locale.outlineColorLabel}\n                {...getSupportProps('outlineColor')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'FillEditor.outlineColorField',\n                    onChange: onOutlineColorChange,\n                    propName: 'color',\n                    propValue: outlineColor,\n                    defaultValue: defaultValues?.FillEditor?.defaultOutlineColor,\n                    defaultElement: <ColorField />\n                  })\n                }\n              </Form.Item>\n              <Form.Item\n                label={locale.outlineWidthLabel}\n                {...getSupportProps('outlineWidth')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'FillEditor.outlineWidthField',\n                    onChange: onOutlineWidthChange,\n                    propName: 'width',\n                    propValue: outlineWidth,\n                    defaultValue: defaultValues?.FillEditor?.defaultOutlineWidth,\n                    defaultElement: <WidthField />\n                  })\n                }\n              </Form.Item>\n              <Form.Item\n                label={locale.outlineDasharrayLabel}\n                {...getSupportProps('outlineDasharray')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'FillEditor.outlineDasharrayField',\n                    onChange: onOutlineDasharrayChange,\n                    propName: 'dashArray',\n                    propValue: outlineDasharray,\n                    defaultElement: <LineDashField />\n                  })\n                }\n              </Form.Item>\n            </Panel>\n            <Panel header=\"Graphic Fill\" key=\"2\">\n              {\n                CompositionUtil.handleComposition({\n                  composition,\n                  path: 'FillEditor.graphicEditorField',\n                  onChange: onGraphicChange,\n                  onChangeName: 'onGraphicChange',\n                  propName: 'graphic',\n                  propValue: graphicFill,\n                  defaultElement: (\n                    <GraphicEditor\n                      graphicTypeFieldLabel={locale.graphicFillTypeLabel}\n                      graphic={graphicFill}\n                      graphicType={_get(graphicFill, 'kind') as GraphicType}\n                    />\n                  )\n                })\n              }\n            </Panel>\n          </Collapse>\n        </div>\n      )}\n    </CompositionContext.Consumer>\n  );\n};\n\nexport default withDefaultsContext(localize(FillEditor, COMPONENTNAME));\n"]}