{"version":3,"file":"MarkEditor.js","sourceRoot":"","sources":["../../../../src/Component/Symbolizer/MarkEditor/MarkEditor.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,6CAA0C;AAQ1C,sGAAgF;AAChF,mGAA6E;AAC7E,mEAA6D;AAC7D,gEAA0C;AAC1C,6FAA0G;AAC1G,kFAA4D;AAC5D,yFAAmE;AAEnE,6BAA4B;AAE5B,+DAA0C;AAE1C,2HAEoF;AACpF,sGAAgF;AAchF,IAAM,aAAa,GAAG,YAAY,CAAC;AAE5B,IAAM,UAAU,GAA8B,UAAC,EAKrD;QAJC,cAAyB,EAAzB,MAAM,mBAAG,eAAK,CAAC,UAAU,KAAA,EACzB,UAAU,gBAAA,EACV,kBAAkB,wBAAA,EAClB,aAAa,mBAAA;IAGP,IAAA,KAGF,IAAA,kBAAU,EAAC,2DAA4B,CAAC,EAF1C,qBAAqB,2BAAA,EACrB,OAAO,aACmC,CAAC;IAE7C,IAAM,qBAAqB,GAAG,UAAC,aAA4B;QACzD,IAAM,gBAAgB,GAAG,IAAA,mBAAU,EAAC,UAAU,CAAC,CAAC;QAChD,gBAAgB,CAAC,aAAa,GAAG,aAAa,CAAC;QAC/C,IAAI,kBAAkB,EAAE;YACtB,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;SACtC;IACH,CAAC,CAAC;IAEF,IAAM,eAAe,GAAG,UAAC,QAA8B;QACrD,OAAO,mCAAyB,CAAC,eAAe,YAC9C,QAAQ,UAAA,EACR,cAAc,EAAE,gBAAgB,EAChC,qBAAqB,uBAAA,IAClB,OAAO,EACV,CAAC;IACL,CAAC,CAAC;IAEF,OAAO,CACL,8BAAC,uCAAkB,CAAC,QAAQ,QACzB,UAAC,WAAyB;;QAAK,OAAA,CAC9B,uCAAK,SAAS,EAAC,2BAA2B;YACxC,8BAAC,WAAI,CAAC,IAAI,aACR,KAAK,EAAE,MAAM,CAAC,uBAAuB,IACjC,eAAe,CAAC,eAAe,CAAC,GAGlC,yBAAe,CAAC,iBAAiB,CAAC;gBAChC,WAAW,aAAA;gBACX,IAAI,EAAE,+BAA+B;gBACrC,QAAQ,EAAE,qBAAqB;gBAC/B,QAAQ,EAAE,eAAe;gBACzB,SAAS,EAAE,UAAU,CAAC,aAAa;gBACnC,YAAY,EAAE,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,UAAU,0CAAE,oBAAoB;gBAC7D,cAAc,EAAE,8BAAC,4BAAkB,OAAG;aACvC,CAAC,CAEM;YACZ,8BAAC,6BAAmB,IAClB,UAAU,EAAE,UAAU,EACtB,kBAAkB,EAAE,kBAAkB,GACtC,CACE,CACP,CAAA;KAAA,CAC2B,CAC/B,CAAC;AACJ,CAAC,CAAC;AAzDW,QAAA,UAAU,cAyDrB;AAEF,kBAAe,IAAA,6BAAmB,EAAC,IAAA,wBAAQ,EAAC,kBAAU,EAAE,aAAa,CAAC,CAAC,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React, { useContext } from 'react';\n\nimport {\n  Symbolizer,\n  MarkSymbolizer,\n  WellKnownName\n} from 'geostyler-style';\n\nimport WellKnownNameField from '../Field/WellKnownNameField/WellKnownNameField';\nimport WellKnownNameEditor from '../WellKnownNameEditor/WellKnownNameEditor';\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../../locale/en_US';\nimport { CompositionContext, Compositions } from '../../../context/CompositionContext/CompositionContext';\nimport CompositionUtil from '../../../Util/CompositionUtil';\nimport withDefaultsContext from '../../../hoc/withDefaultsContext';\nimport { DefaultValues } from '../../../context/DefaultValueContext/DefaultValueContext';\nimport { Form } from 'antd';\n\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { GeoStylerLocale } from '../../../locale/locale';\nimport {\n  UnsupportedPropertiesContext\n} from '../../../context/UnsupportedPropertiesContext/UnsupportedPropertiesContext';\nimport UnsupportedPropertiesUtil from '../../../Util/UnsupportedPropertiesUtil';\n\n// default props\ninterface MarkEditorDefaultProps {\n  locale: GeoStylerLocale['MarkEditor'];\n}\n\n// non default props\nexport interface MarkEditorProps extends Partial<MarkEditorDefaultProps> {\n  symbolizer: MarkSymbolizer;\n  onSymbolizerChange?: (changedSymb: Symbolizer) => void;\n  defaultValues?: DefaultValues;\n}\n\nconst COMPONENTNAME = 'MarkEditor';\n\nexport const MarkEditor: React.FC<MarkEditorProps> = ({\n  locale = en_US.MarkEditor,\n  symbolizer,\n  onSymbolizerChange,\n  defaultValues\n}) => {\n\n  const {\n    unsupportedProperties,\n    options\n  } = useContext(UnsupportedPropertiesContext);\n\n  const onWellKnownNameChange = (wellKnownName: WellKnownName) => {\n    const clonedSymbolizer = _cloneDeep(symbolizer);\n    clonedSymbolizer.wellKnownName = wellKnownName;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(clonedSymbolizer);\n    }\n  };\n\n  const getSupportProps = (propName: keyof MarkSymbolizer) => {\n    return UnsupportedPropertiesUtil.getSupportProps<MarkSymbolizer>({\n      propName,\n      symbolizerName: 'MarkSymbolizer',\n      unsupportedProperties,\n      ...options\n    });\n  };\n\n  return (\n    <CompositionContext.Consumer>\n      {(composition: Compositions) => (\n        <div className=\"gs-mark-symbolizer-editor\" >\n          <Form.Item\n            label={locale.wellKnownNameFieldLabel}\n            {...getSupportProps('wellKnownName')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'MarkEditor.wellKnownNameField',\n                onChange: onWellKnownNameChange,\n                propName: 'wellKnownName',\n                propValue: symbolizer.wellKnownName,\n                defaultValue: defaultValues?.MarkEditor?.defaultWellKnownName,\n                defaultElement: <WellKnownNameField />\n              })\n            }\n          </Form.Item>\n          <WellKnownNameEditor\n            symbolizer={symbolizer}\n            onSymbolizerChange={onSymbolizerChange}\n          />\n        </div>\n      )}\n    </CompositionContext.Consumer>\n  );\n};\n\nexport default withDefaultsContext(localize(MarkEditor, COMPONENTNAME));\n"]}