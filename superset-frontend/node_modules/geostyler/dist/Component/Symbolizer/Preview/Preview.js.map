{"version":3,"file":"Preview.js","sourceRoot":"","sources":["../../../../src/Component/Symbolizer/Preview/Preview.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\nimport OlMap from 'ol/Map';\nimport OlLayerVector from 'ol/layer/Vector';\nimport OlSourceVector from 'ol/source/Vector';\nimport OlGeomPoint from 'ol/geom/Point';\nimport OlGeomLineString from 'ol/geom/LineString';\nimport OlGeomPolygon from 'ol/geom/Polygon';\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\nimport OlFeature from 'ol/Feature';\nimport OlView from 'ol/View';\nimport OlLayerTile from 'ol/layer/Tile';\nimport OlSourceOSM from 'ol/source/OSM';\n\nimport { Symbolizer, SymbolizerKind, Style } from 'geostyler-style';\n\nimport './Preview.less';\n\nimport {\n  Button\n} from 'antd';\n\nimport { EditOutlined } from '@ant-design/icons';\n\nimport 'ol/ol.css';\n\nimport OlStyleParser from 'geostyler-openlayers-parser';\n\nimport _get from 'lodash/get';\nimport _isEqual from 'lodash/isEqual';\n\nimport { VectorData } from 'geostyler-data';\nimport { IconEditorProps } from '../IconEditor/IconEditor';\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport SymbolizerEditorWindow from '../SymbolizerEditorWindow/SymbolizerEditorWindow';\nimport en_US from '../../../locale/en_US';\nimport { GeoStylerLocale } from '../../../locale/locale';\n\n// default props\nexport interface PreviewDefaultProps {\n  hideEditButton: boolean;\n  projection: string;\n  dataProjection: string;\n  showOsmBackground: boolean;\n  mapHeight: number;\n  locale: GeoStylerLocale['Preview'];\n}\n\n// non default props\nexport interface PreviewProps extends Partial<PreviewDefaultProps> {\n  internalDataDef?: VectorData;\n  symbolizers: Symbolizer[];\n  iconEditorProps?: Partial<IconEditorProps>;\n  onSymbolizersChange?: (symbolizers: Symbolizer[]) => void;\n  onAddSymbolizer?: () => void;\n  onRemoveSymbolizer?: (symbolizer: Symbolizer, key: number) => void;\n  onMapDidMount?: (map: any) => void;\n  map?: any;\n  layers?: any[];\n  controls?: any[];\n  interactions?: any[];\n  colorRamps?: {\n    [name: string]: string[];\n  };\n}\n\n// state\ninterface PreviewState {\n  symbolizers: Symbolizer[];\n  editorVisible: boolean;\n  mapTargetId: string;\n  editorId: string;\n}\n\n/**\n * Symbolizer preview UI.\n * @deprecated This component is deprecated and will be removed with v10.\n */\nexport class Preview extends React.Component<PreviewProps, PreviewState> {\n\n  static componentName: string = 'Preview';\n\n  public static defaultProps: PreviewDefaultProps = {\n    locale: en_US.Preview,\n    hideEditButton: false,\n    projection: 'EPSG:3857',\n    dataProjection: 'EPSG:4326',\n    showOsmBackground: true,\n    mapHeight: 267\n  };\n\n  /** reference to the underlying OpenLayers map */\n  map: any;\n\n  /** reference to the vector layer for the passed features  */\n  dataLayer: any;\n\n  /** reference to the editButton */\n  _editButton: any;\n\n  constructor(props: PreviewProps) {\n    super(props);\n\n    const randomId = Math.floor((1 + Math.random()) * 0x10000);\n    this.state = {\n      editorVisible: false,\n      symbolizers: props.symbolizers,\n      mapTargetId: `map_${randomId}`,\n      editorId: `gs-edit-preview-button_${randomId}`\n    };\n  }\n\n  static getDerivedStateFromProps(\n    nextProps: PreviewProps): Partial<PreviewState> {\n\n    return {\n      symbolizers: nextProps.symbolizers\n    };\n  }\n\n  public shouldComponentUpdate(nextProps: PreviewProps, nextState: PreviewState): boolean {\n    const diffProps = !_isEqual(this.props, nextProps);\n    const diffState = !_isEqual(this.state, nextState);\n    return diffProps || diffState;\n  }\n\n  componentDidUpdate(prevProps: PreviewProps, prevState: PreviewState) {\n    if (this.dataLayer) {\n      this.applySymbolizersToMapFeatures(this.state.symbolizers);\n    }\n\n    const features = this.props.internalDataDef ? this.props.internalDataDef.exampleFeatures : undefined;\n    const prevFeatures = prevProps.internalDataDef ? prevProps.internalDataDef.exampleFeatures : undefined;\n    let equal: boolean = true;\n    if (!_isEqual(features, prevFeatures)) {\n      equal = false;\n    }\n    this.state.symbolizers.some((symb: Symbolizer, idx: number) => {\n      if (!prevState.symbolizers[idx] || !_isEqual(symb.kind, prevState.symbolizers[idx].kind)) {\n        equal = false;\n        return true;\n      } else {\n        return false;\n      }\n    });\n    if (!equal) {\n      this.updateFeatures();\n    }\n  }\n\n  updateFeatures() {\n    const {\n      projection\n    } = this.props;\n    // Remove previous features\n    this.dataLayer.getSource().clear();\n\n    const format = new OlFormatGeoJSON({\n      dataProjection: this.props.dataProjection,\n      featureProjection: this.map.getView().getProjection()\n    });\n    // add data features to style according to symbolizer and zoom to them (when existing)\n    if (this.props.internalDataDef && this.props.internalDataDef.exampleFeatures) {\n      const olFeatures = format.readFeatures(this.props.internalDataDef.exampleFeatures);\n      this.dataLayer.getSource().addFeatures(olFeatures);\n    // create a simple feature to see the symbolizer anyway\n    } else {\n      const geom = this.getSampleGeomFromSymbolizer();\n      const sampleFeature = new OlFeature({\n        geometry: geom.transform('EPSG:4326', projection),\n        Name: 'Sample Feature'\n      });\n      this.dataLayer.getSource().addFeature(sampleFeature);\n    }\n\n    // zoom to feature extent\n    const extent = this.dataLayer.getSource().getExtent();\n    this.map.getView().fit(extent, {\n      maxZoom: 20\n    });\n  }\n\n  public componentDidMount() {\n    const {\n      controls,\n      interactions,\n      layers,\n      onMapDidMount,\n      showOsmBackground\n    } = this.props;\n\n    let map: any;\n    if (!this.props.map) {\n      // create a new OL map and bind it to this preview DIV\n      map = new OlMap({\n        layers: [],\n        controls: [],\n        interactions: [],\n        target: this.state.mapTargetId,\n        view: new OlView({\n          projection: this.props.projection\n        })\n      });\n    } else {\n      // use passed in OL map and bind it to this preview DIV\n      map = this.props.map;\n      map.setTarget(this.state.mapTargetId);\n    }\n\n    // show an OSM background layer if configured and no map was passed in\n    if (!this.props.map && showOsmBackground) {\n      const osmLayer = new OlLayerTile({\n        source: new OlSourceOSM()\n      });\n      map.addLayer(osmLayer);\n    }\n\n    // add configured OL control to map, when no map was passed in\n    if (!this.props.map && controls) {\n      this.props.controls.forEach((ctrl) => {\n        map.addControl(ctrl);\n      });\n    }\n\n    // add configured OL interaction to map, when no map was passed in\n    if (!this.props.map && interactions) {\n      this.props.interactions.forEach((iac) => {\n        map.addInteraction(iac);\n      });\n    }\n\n    // add configured additional layers\n    if (layers) {\n      layers.forEach((layer) => {\n        map.addLayer(layer);\n      });\n    }\n\n    const vectorLayer = new OlLayerVector({\n      source: new OlSourceVector()\n    });\n\n    map.addLayer(vectorLayer);\n    this.dataLayer = vectorLayer;\n\n    this.map = map;\n    this.updateFeatures();\n    this.applySymbolizersToMapFeatures(this.state.symbolizers);\n\n    if (onMapDidMount) {\n      onMapDidMount(map);\n    }\n  }\n\n  getSampleGeomFromSymbolizer = () => {\n    const kind: SymbolizerKind = _get(this.state, 'symbolizers[0].kind');\n    switch (kind) {\n      case 'Mark':\n      case 'Icon':\n      case 'Text':\n        return new OlGeomPoint([7.10066, 50.735851]);\n      case 'Fill':\n        return new OlGeomPolygon([[\n          [7.1031761169433585, 50.734268655851345],\n          [7.109270095825195, 50.734268655851345, ],\n          [7.109270095825195, 50.73824770380063],\n          [7.1031761169433585, 50.73824770380063],\n          [7.1031761169433585, 50.734268655851345, ]\n        ]]);\n      case 'Line':\n        return new OlGeomLineString([\n          [7.062578201293945, 50.721786104206004],\n          [7.077512741088867, 50.729610159968296],\n          [7.082319259643555, 50.732435192351126],\n          [7.097940444946289, 50.73748722929948],\n          [7.106866836547852, 50.73775882875318],\n          [7.117509841918945, 50.73889952925885],\n          [7.129182815551758, 50.7504679214779]\n        ]);\n      default:\n        return new OlGeomPoint([7.10066, 50.735851]);\n    }\n  };\n\n  /**\n   *\n   */\n  onEditButtonClicked = () => {\n    this.setState({\n      editorVisible: !this.state.editorVisible\n    });\n  };\n\n  /**\n   * Transforms the incoming symbolizers to an OpenLayers style object the\n   * GeoStyler parser and applies it to the vector features on the map.\n   *\n   * @param {Symbolizer[]} symbolizers The symbolizers holding the style to apply\n   */\n  applySymbolizersToMapFeatures = async(symbolizers: Symbolizer[]) => {\n    const styleParser = new OlStyleParser();\n\n    // we have to wrap the symbolizer in a Style object since the writeStyle\n    // only accepts a Style object\n    const style: Style = {\n      name: 'WrapperStyle4Symbolizer',\n      rules: [{\n        name: 'WrapperRule4Symbolizer',\n        symbolizers: symbolizers\n      }]\n    };\n    // parser style to OL style\n    const { output: olStyle, errors = [] } = await styleParser.writeStyle(style);\n    if (errors.length < 1) {\n      // apply new OL style to vector layer\n      this.dataLayer.setStyle(olStyle);\n      return olStyle;\n    }\n    return undefined;\n  };\n\n  render() {\n    const {\n      mapHeight,\n      locale,\n      symbolizers,\n      hideEditButton,\n      onSymbolizersChange,\n      colorRamps\n    } = this.props;\n\n    const {\n      editorVisible,\n      editorId,\n      mapTargetId\n    } = this.state;\n\n    let windowX, windowY;\n\n    if (editorVisible && !hideEditButton ) {\n      const buttonElement = document.getElementById(editorId);\n      const buttonBounds = buttonElement.getBoundingClientRect();\n      windowX = buttonBounds.right + window.scrollX;\n      windowY = buttonBounds.top + window.scrollY;\n    }\n\n    return (\n      <div className=\"gs-symbolizer-preview\">\n        <div\n          id={mapTargetId}\n          className=\"map\"\n          style={{ height: mapHeight }}\n        >\n          {\n            !hideEditButton &&\n          <Button\n            id={editorId}\n            className=\"gs-edit-preview-button\"\n            icon={<EditOutlined />}\n            onClick={this.onEditButtonClicked}\n          >\n            {editorVisible ? locale.closeEditorText : locale.openEditorText}\n          </Button>\n          }\n          {\n            editorVisible && !hideEditButton ?\n              <SymbolizerEditorWindow\n                x={windowX}\n                y={windowY}\n                onClose={this.onEditButtonClicked}\n                symbolizers={symbolizers}\n                onSymbolizersChange={onSymbolizersChange}\n                colorRamps={colorRamps}\n              /> : null\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default localize(Preview, Preview.componentName);\n"]}