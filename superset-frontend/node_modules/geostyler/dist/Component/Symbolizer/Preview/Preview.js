"use strict";
/* Released under the BSD 2-Clause License
 *
 * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Preview = void 0;
var React = __importStar(require("react"));
var Map_1 = __importDefault(require("ol/Map"));
var Vector_1 = __importDefault(require("ol/layer/Vector"));
var Vector_2 = __importDefault(require("ol/source/Vector"));
var Point_1 = __importDefault(require("ol/geom/Point"));
var LineString_1 = __importDefault(require("ol/geom/LineString"));
var Polygon_1 = __importDefault(require("ol/geom/Polygon"));
var GeoJSON_1 = __importDefault(require("ol/format/GeoJSON"));
var Feature_1 = __importDefault(require("ol/Feature"));
var View_1 = __importDefault(require("ol/View"));
var Tile_1 = __importDefault(require("ol/layer/Tile"));
var OSM_1 = __importDefault(require("ol/source/OSM"));
require("./Preview.css");
var antd_1 = require("antd");
var icons_1 = require("@ant-design/icons");
require("ol/ol.css");
var geostyler_openlayers_parser_1 = __importDefault(require("geostyler-openlayers-parser"));
var get_1 = __importDefault(require("lodash/get"));
var isEqual_1 = __importDefault(require("lodash/isEqual"));
var LocaleWrapper_1 = require("../../LocaleWrapper/LocaleWrapper");
var SymbolizerEditorWindow_1 = __importDefault(require("../SymbolizerEditorWindow/SymbolizerEditorWindow"));
var en_US_1 = __importDefault(require("../../../locale/en_US"));
/**
 * Symbolizer preview UI.
 * @deprecated This component is deprecated and will be removed with v10.
 */
var Preview = /** @class */ (function (_super) {
    __extends(Preview, _super);
    function Preview(props) {
        var _this = _super.call(this, props) || this;
        _this.getSampleGeomFromSymbolizer = function () {
            var kind = (0, get_1.default)(_this.state, 'symbolizers[0].kind');
            switch (kind) {
                case 'Mark':
                case 'Icon':
                case 'Text':
                    return new Point_1.default([7.10066, 50.735851]);
                case 'Fill':
                    return new Polygon_1.default([[
                            [7.1031761169433585, 50.734268655851345],
                            [7.109270095825195, 50.734268655851345,],
                            [7.109270095825195, 50.73824770380063],
                            [7.1031761169433585, 50.73824770380063],
                            [7.1031761169433585, 50.734268655851345,]
                        ]]);
                case 'Line':
                    return new LineString_1.default([
                        [7.062578201293945, 50.721786104206004],
                        [7.077512741088867, 50.729610159968296],
                        [7.082319259643555, 50.732435192351126],
                        [7.097940444946289, 50.73748722929948],
                        [7.106866836547852, 50.73775882875318],
                        [7.117509841918945, 50.73889952925885],
                        [7.129182815551758, 50.7504679214779]
                    ]);
                default:
                    return new Point_1.default([7.10066, 50.735851]);
            }
        };
        /**
         *
         */
        _this.onEditButtonClicked = function () {
            _this.setState({
                editorVisible: !_this.state.editorVisible
            });
        };
        /**
         * Transforms the incoming symbolizers to an OpenLayers style object the
         * GeoStyler parser and applies it to the vector features on the map.
         *
         * @param {Symbolizer[]} symbolizers The symbolizers holding the style to apply
         */
        _this.applySymbolizersToMapFeatures = function (symbolizers) { return __awaiter(_this, void 0, void 0, function () {
            var styleParser, style, _a, olStyle, _b, errors;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        styleParser = new geostyler_openlayers_parser_1.default();
                        style = {
                            name: 'WrapperStyle4Symbolizer',
                            rules: [{
                                    name: 'WrapperRule4Symbolizer',
                                    symbolizers: symbolizers
                                }]
                        };
                        return [4 /*yield*/, styleParser.writeStyle(style)];
                    case 1:
                        _a = _c.sent(), olStyle = _a.output, _b = _a.errors, errors = _b === void 0 ? [] : _b;
                        if (errors.length < 1) {
                            // apply new OL style to vector layer
                            this.dataLayer.setStyle(olStyle);
                            return [2 /*return*/, olStyle];
                        }
                        return [2 /*return*/, undefined];
                }
            });
        }); };
        var randomId = Math.floor((1 + Math.random()) * 0x10000);
        _this.state = {
            editorVisible: false,
            symbolizers: props.symbolizers,
            mapTargetId: "map_".concat(randomId),
            editorId: "gs-edit-preview-button_".concat(randomId)
        };
        return _this;
    }
    Preview.getDerivedStateFromProps = function (nextProps) {
        return {
            symbolizers: nextProps.symbolizers
        };
    };
    Preview.prototype.shouldComponentUpdate = function (nextProps, nextState) {
        var diffProps = !(0, isEqual_1.default)(this.props, nextProps);
        var diffState = !(0, isEqual_1.default)(this.state, nextState);
        return diffProps || diffState;
    };
    Preview.prototype.componentDidUpdate = function (prevProps, prevState) {
        if (this.dataLayer) {
            this.applySymbolizersToMapFeatures(this.state.symbolizers);
        }
        var features = this.props.internalDataDef ? this.props.internalDataDef.exampleFeatures : undefined;
        var prevFeatures = prevProps.internalDataDef ? prevProps.internalDataDef.exampleFeatures : undefined;
        var equal = true;
        if (!(0, isEqual_1.default)(features, prevFeatures)) {
            equal = false;
        }
        this.state.symbolizers.some(function (symb, idx) {
            if (!prevState.symbolizers[idx] || !(0, isEqual_1.default)(symb.kind, prevState.symbolizers[idx].kind)) {
                equal = false;
                return true;
            }
            else {
                return false;
            }
        });
        if (!equal) {
            this.updateFeatures();
        }
    };
    Preview.prototype.updateFeatures = function () {
        var projection = this.props.projection;
        // Remove previous features
        this.dataLayer.getSource().clear();
        var format = new GeoJSON_1.default({
            dataProjection: this.props.dataProjection,
            featureProjection: this.map.getView().getProjection()
        });
        // add data features to style according to symbolizer and zoom to them (when existing)
        if (this.props.internalDataDef && this.props.internalDataDef.exampleFeatures) {
            var olFeatures = format.readFeatures(this.props.internalDataDef.exampleFeatures);
            this.dataLayer.getSource().addFeatures(olFeatures);
            // create a simple feature to see the symbolizer anyway
        }
        else {
            var geom = this.getSampleGeomFromSymbolizer();
            var sampleFeature = new Feature_1.default({
                geometry: geom.transform('EPSG:4326', projection),
                Name: 'Sample Feature'
            });
            this.dataLayer.getSource().addFeature(sampleFeature);
        }
        // zoom to feature extent
        var extent = this.dataLayer.getSource().getExtent();
        this.map.getView().fit(extent, {
            maxZoom: 20
        });
    };
    Preview.prototype.componentDidMount = function () {
        var _a = this.props, controls = _a.controls, interactions = _a.interactions, layers = _a.layers, onMapDidMount = _a.onMapDidMount, showOsmBackground = _a.showOsmBackground;
        var map;
        if (!this.props.map) {
            // create a new OL map and bind it to this preview DIV
            map = new Map_1.default({
                layers: [],
                controls: [],
                interactions: [],
                target: this.state.mapTargetId,
                view: new View_1.default({
                    projection: this.props.projection
                })
            });
        }
        else {
            // use passed in OL map and bind it to this preview DIV
            map = this.props.map;
            map.setTarget(this.state.mapTargetId);
        }
        // show an OSM background layer if configured and no map was passed in
        if (!this.props.map && showOsmBackground) {
            var osmLayer = new Tile_1.default({
                source: new OSM_1.default()
            });
            map.addLayer(osmLayer);
        }
        // add configured OL control to map, when no map was passed in
        if (!this.props.map && controls) {
            this.props.controls.forEach(function (ctrl) {
                map.addControl(ctrl);
            });
        }
        // add configured OL interaction to map, when no map was passed in
        if (!this.props.map && interactions) {
            this.props.interactions.forEach(function (iac) {
                map.addInteraction(iac);
            });
        }
        // add configured additional layers
        if (layers) {
            layers.forEach(function (layer) {
                map.addLayer(layer);
            });
        }
        var vectorLayer = new Vector_1.default({
            source: new Vector_2.default()
        });
        map.addLayer(vectorLayer);
        this.dataLayer = vectorLayer;
        this.map = map;
        this.updateFeatures();
        this.applySymbolizersToMapFeatures(this.state.symbolizers);
        if (onMapDidMount) {
            onMapDidMount(map);
        }
    };
    Preview.prototype.render = function () {
        var _a = this.props, mapHeight = _a.mapHeight, locale = _a.locale, symbolizers = _a.symbolizers, hideEditButton = _a.hideEditButton, onSymbolizersChange = _a.onSymbolizersChange, colorRamps = _a.colorRamps;
        var _b = this.state, editorVisible = _b.editorVisible, editorId = _b.editorId, mapTargetId = _b.mapTargetId;
        var windowX, windowY;
        if (editorVisible && !hideEditButton) {
            var buttonElement = document.getElementById(editorId);
            var buttonBounds = buttonElement.getBoundingClientRect();
            windowX = buttonBounds.right + window.scrollX;
            windowY = buttonBounds.top + window.scrollY;
        }
        return (React.createElement("div", { className: "gs-symbolizer-preview" },
            React.createElement("div", { id: mapTargetId, className: "map", style: { height: mapHeight } },
                !hideEditButton &&
                    React.createElement(antd_1.Button, { id: editorId, className: "gs-edit-preview-button", icon: React.createElement(icons_1.EditOutlined, null), onClick: this.onEditButtonClicked }, editorVisible ? locale.closeEditorText : locale.openEditorText),
                editorVisible && !hideEditButton ?
                    React.createElement(SymbolizerEditorWindow_1.default, { x: windowX, y: windowY, onClose: this.onEditButtonClicked, symbolizers: symbolizers, onSymbolizersChange: onSymbolizersChange, colorRamps: colorRamps }) : null)));
    };
    Preview.componentName = 'Preview';
    Preview.defaultProps = {
        locale: en_US_1.default.Preview,
        hideEditButton: false,
        projection: 'EPSG:3857',
        dataProjection: 'EPSG:4326',
        showOsmBackground: true,
        mapHeight: 267
    };
    return Preview;
}(React.Component));
exports.Preview = Preview;
exports.default = (0, LocaleWrapper_1.localize)(Preview, Preview.componentName);
//# sourceMappingURL=Preview.js.map