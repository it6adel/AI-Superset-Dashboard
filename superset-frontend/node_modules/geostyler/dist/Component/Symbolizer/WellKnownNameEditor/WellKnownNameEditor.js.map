{"version":3,"file":"WellKnownNameEditor.js","sourceRoot":"","sources":["../../../../src/Component/Symbolizer/WellKnownNameEditor/WellKnownNameEditor.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport {\n  MarkSymbolizer,\n  Symbolizer\n} from 'geostyler-style';\n\nimport ColorField from '../Field/ColorField/ColorField';\nimport OpacityField from '../Field/OpacityField/OpacityField';\nimport RadiusField from '../Field/RadiusField/RadiusField';\nimport WidthField from '../Field/WidthField/WidthField';\nimport RotateField from '../Field/RotateField/RotateField';\nimport { CompositionContext, Compositions } from '../../../context/CompositionContext/CompositionContext';\nimport CompositionUtil from '../../../Util/CompositionUtil';\nimport withDefaultsContext from '../../../hoc/withDefaultsContext';\nimport { DefaultValues } from '../../../context/DefaultValueContext/DefaultValueContext';\n\nimport en_US from '../../../locale/en_US';\nimport { Form } from 'antd';\n\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport { GeoStylerLocale } from '../../../locale/locale';\nimport OffsetField from '../Field/OffsetField/OffsetField';\n\ninterface WellKnownNameEditorDefaultProps {\n  locale: GeoStylerLocale['WellKnownNameEditor'];\n}\n\n// non default props\nexport interface WellKnownNameEditorProps extends Partial<WellKnownNameEditorDefaultProps> {\n  symbolizer: MarkSymbolizer;\n  onSymbolizerChange?: (changedSymb: Symbolizer) => void;\n  defaultValues?: DefaultValues;\n}\n\nconst COMPONENTNAME = 'WellKnownNameEditor';\n\nexport const WellKnownNameEditor: React.FC<WellKnownNameEditorProps> = ({\n  locale =  en_US.WellKnownNameEditor,\n  symbolizer,\n  onSymbolizerChange,\n  defaultValues\n}) => {\n\n  const onRadiusChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.radius = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOffsetXChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    let newOffset: [number, number] = [value, (symbolizerClone.offset ? symbolizerClone.offset[1] : 0) as number];\n    symbolizerClone.offset = newOffset;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOffsetYChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    let newOffset: [number, number] = [(symbolizerClone.offset ? symbolizerClone.offset[0] : 0) as number, value];\n    symbolizerClone.offset = newOffset;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onColorChange = (value: string) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.color = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOpacityChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.opacity = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onFillOpacityChange = (newFillOpacity: number) => {\n    if (onSymbolizerChange) {\n      onSymbolizerChange({\n        ...symbolizer,\n        fillOpacity: newFillOpacity\n      });\n    }\n  };\n\n  const onStrokeColorChange = (value: string) => {\n    const cloneSymbolizer = _cloneDeep(symbolizer);\n    cloneSymbolizer.strokeColor = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(cloneSymbolizer);\n    }\n  };\n\n  const onStrokeWidthChange = (value: number) => {\n    const cloneSymbolizer = _cloneDeep(symbolizer);\n    cloneSymbolizer.strokeWidth = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(cloneSymbolizer);\n    }\n  };\n\n  const onStrokeOpacityChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.strokeOpacity = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onRotateChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.rotate = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  /**\n   * Wraps a Form Item around a given element and adds its locale\n   * to the From Item label.\n   */\n  const wrapFormItem = (label: string, element: React.ReactElement): React.ReactElement => {\n    return element == null ? null : (\n      <Form.Item\n        label={label}\n      >\n        {element}\n      </Form.Item>\n    );\n  };\n\n  const {\n    color,\n    fillOpacity,\n    opacity,\n    radius,\n    rotate,\n    strokeColor,\n    strokeOpacity,\n    strokeWidth,\n    offset\n  } = symbolizer;\n\n  return (\n    <CompositionContext.Consumer>\n      {(composition: Compositions) => (\n        <div>\n          {\n            wrapFormItem(\n              locale.radiusLabel,\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'WellKnownNameEditor.radiusField',\n                onChange: onRadiusChange,\n                propName: 'radius',\n                propValue: radius,\n                defaultValue: defaultValues?.WellKnownNameEditor?.defaultRadius,\n                defaultElement: <RadiusField />\n              })\n            )\n          }\n          {\n            wrapFormItem(\n              locale.offsetXLabel,\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'WellKnownNameEditor.offsetXField',\n                onChange: onOffsetXChange,\n                propName: 'offset',\n                propValue: offset?.[0],\n                defaultValue: defaultValues?.WellKnownNameEditor?.defaultOffsetX,\n                defaultElement: <OffsetField />\n              })\n            )\n          }\n          {\n            wrapFormItem(\n              locale.offsetYLabel,\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'WellKnownNameEditor.offsetYField',\n                onChange: onOffsetYChange,\n                propName: 'offset',\n                propValue: offset?.[1],\n                defaultValue: defaultValues?.WellKnownNameEditor?.defaultOffsetY,\n                defaultElement: <OffsetField />\n              })\n            )\n          }\n          {\n            wrapFormItem(\n              locale.fillColorLabel,\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'WellKnownNameEditor.fillColorField',\n                onChange: onColorChange,\n                propName: 'color',\n                propValue: color,\n                defaultValue: defaultValues?.WellKnownNameEditor?.defaultColor,\n                defaultElement: <ColorField />\n              })\n            )\n          }\n          {\n            wrapFormItem(\n              locale.opacityLabel,\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'WellKnownNameEditor.opacityField',\n                onChange: onOpacityChange,\n                propName: 'opacity',\n                propValue: opacity,\n                defaultValue: defaultValues?.WellKnownNameEditor?.defaultOpacity,\n                defaultElement: <OpacityField />\n              })\n            )\n          }\n          {\n            wrapFormItem(\n              locale.fillOpacityLabel,\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'WellKnownNameEditor.fillOpacityField',\n                onChange: onFillOpacityChange,\n                propName: 'opacity',\n                propValue: fillOpacity,\n                defaultValue: defaultValues?.WellKnownNameEditor?.defaultFillOpacity,\n                defaultElement: <OpacityField />\n              })\n            )\n          }\n          {\n            wrapFormItem(\n              locale.strokeColorLabel,\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'WellKnownNameEditor.strokeColorField',\n                onChange: onStrokeColorChange,\n                propName: 'color',\n                propValue: strokeColor,\n                defaultValue: defaultValues?.WellKnownNameEditor?.defaultStrokeColor,\n                defaultElement: <ColorField />\n              })\n            )\n          }\n          {\n            wrapFormItem(\n              locale.strokeWidthLabel,\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'WellKnownNameEditor.strokeWidthField',\n                onChange: onStrokeWidthChange,\n                propName: 'width',\n                propValue: strokeWidth,\n                defaultValue: defaultValues?.WellKnownNameEditor?.defaultStrokeWidth,\n                defaultElement: <WidthField />\n              })\n            )\n          }\n          {\n            wrapFormItem(\n              locale.strokeOpacityLabel,\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'WellKnownNameEditor.strokeOpacityField',\n                onChange: onStrokeOpacityChange,\n                propName: 'opacity',\n                propValue: strokeOpacity,\n                defaultValue: defaultValues?.WellKnownNameEditor?.defaultStrokeOpacity,\n                defaultElement: <OpacityField />\n              })\n            )\n          }\n          {\n            wrapFormItem(\n              locale.rotateLabel,\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'WellKnownNameEditor.rotateField',\n                onChange: onRotateChange,\n                propName: 'rotate',\n                propValue: rotate,\n                defaultValue: defaultValues?.WellKnownNameEditor?.defaultRotate,\n                defaultElement: <RotateField />\n              })\n            )\n          }\n        </div>\n      )}\n    </CompositionContext.Consumer>\n  );\n};\n\nexport default withDefaultsContext(localize(WellKnownNameEditor, COMPONENTNAME));\n"]}