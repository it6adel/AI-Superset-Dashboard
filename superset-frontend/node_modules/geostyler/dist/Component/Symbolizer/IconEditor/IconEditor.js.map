{"version":3,"file":"IconEditor.js","sourceRoot":"","sources":["../../../../src/Component/Symbolizer/IconEditor/IconEditor.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,6CAA0C;AAO1C,oFAA8D;AAC9D,8EAA6E;AAG7E,+DAA0C;AAC1C,2DAAsC;AAEtC,iFAA2D;AAC3D,2EAAqD;AAErD,mEAA6D;AAC7D,gEAA0C;AAC1C,6BAA4B;AAE5B,6FAA0G;AAC1G,kFAA4D;AAC5D,yFAAmE;AAGnE,2HAEoF;AACpF,sGAAgF;AAChF,iFAA2D;AAsB3D,IAAM,aAAa,GAAG,YAAY,CAAC;AAE5B,IAAM,UAAU,GAA8B,UAAC,EAOrD;QANC,cAAyB,EAAzB,MAAM,mBAAG,eAAK,CAAC,UAAU,KAAA,EACzB,UAAU,gBAAA,EACV,kBAAkB,wBAAA,EAClB,aAAa,mBAAA,EACb,aAAa,mBAAA,EACb,eAAe,qBAAA;IAGT,IAAA,KAGF,IAAA,kBAAU,EAAC,2DAA4B,CAAC,EAF1C,qBAAqB,2BAAA,EACrB,OAAO,aACmC,CAAC;IAG7C,IAAM,gBAAgB,GAAG,UAAC,KAAa;QACrC,IAAM,eAAe,GAAG,IAAA,mBAAU,EAAC,UAAU,CAAC,CAAC;QAC/C,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC;QAC9B,IAAI,kBAAkB,EAAE;YACtB,kBAAkB,CAAC,eAAe,CAAC,CAAC;SACrC;IACH,CAAC,CAAC;IAEF,IAAM,YAAY,GAAG,UAAC,KAAa;QACjC,IAAM,eAAe,GAAG,IAAA,mBAAU,EAAC,UAAU,CAAC,CAAC;QAC/C,eAAe,CAAC,IAAI,GAAG,KAAK,CAAC;QAC7B,IAAI,kBAAkB,EAAE;YACtB,kBAAkB,CAAC,eAAe,CAAC,CAAC;SACrC;IACH,CAAC,CAAC;IAEF,IAAM,eAAe,GAAG,UAAC,KAAa;QACpC,IAAM,eAAe,GAAG,IAAA,mBAAU,EAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,SAAS,GAAqB,CAAC,KAAK,EAAE,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAW,CAAC,CAAC;QAC9G,eAAe,CAAC,MAAM,GAAG,SAAS,CAAC;QACnC,IAAI,kBAAkB,EAAE;YACtB,kBAAkB,CAAC,eAAe,CAAC,CAAC;SACrC;IACH,CAAC,CAAC;IAEF,IAAM,eAAe,GAAG,UAAC,KAAa;QACpC,IAAM,eAAe,GAAG,IAAA,mBAAU,EAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,SAAS,GAAqB,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAW,EAAE,KAAK,CAAC,CAAC;QAC9G,eAAe,CAAC,MAAM,GAAG,SAAS,CAAC;QACnC,IAAI,kBAAkB,EAAE;YACtB,kBAAkB,CAAC,eAAe,CAAC,CAAC;SACrC;IACH,CAAC,CAAC;IAEF,IAAM,cAAc,GAAG,UAAC,KAAa;QACnC,IAAM,eAAe,GAAG,IAAA,mBAAU,EAAC,UAAU,CAAC,CAAC;QAC/C,eAAe,CAAC,MAAM,GAAG,KAAK,CAAC;QAC/B,IAAI,kBAAkB,EAAE;YACtB,kBAAkB,CAAC,eAAe,CAAC,CAAC;SACrC;IACH,CAAC,CAAC;IAEF,IAAM,eAAe,GAAG,UAAC,KAAa;QACpC,IAAM,eAAe,GAAG,IAAA,mBAAU,EAAC,UAAU,CAAC,CAAC;QAC/C,eAAe,CAAC,OAAO,GAAG,KAAK,CAAC;QAChC,IAAI,kBAAkB,EAAE;YACtB,kBAAkB,CAAC,eAAe,CAAC,CAAC;SACrC;IACH,CAAC,CAAC;IAGA,IAAA,OAAO,GAKL,UAAU,QALL,EACP,KAAK,GAIH,UAAU,MAJP,EACL,IAAI,GAGF,UAAU,KAHR,EACJ,MAAM,GAEJ,UAAU,OAFN,EACN,MAAM,GACJ,UAAU,OADN,CACO;IAEf,IAAM,QAAQ,GAAG,CAAC,IAAA,iBAAQ,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC;IAEpE,IAAM,eAAe,GAAG,UAAC,QAA8B;QACrD,OAAO,mCAAyB,CAAC,eAAe,YAC9C,QAAQ,UAAA,EACR,cAAc,EAAE,gBAAgB,EAChC,qBAAqB,uBAAA,IAClB,OAAO,EACV,CAAC;IACL,CAAC,CAAC;IAEF,OAAO,CACL,8BAAC,uCAAkB,CAAC,QAAQ,QACzB,UAAC,WAAyB;;QAAK,OAAA,CAC9B,uCAAK,SAAS,EAAC,2BAA2B;YACxC,8BAAC,WAAI,CAAC,IAAI,aACR,KAAK,EAAE,MAAM,CAAC,UAAU,IACpB,eAAe,CAAC,OAAO,CAAC,GAG1B,yBAAe,CAAC,iBAAiB,CAAC;gBAChC,WAAW,aAAA;gBACX,IAAI,EAAE,uBAAuB;gBAC7B,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE,OAAO;gBACjB,SAAS,EAAE,QAAQ;gBACnB,YAAY,EAAE,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,UAAU,0CAAE,YAAY;gBACrD,cAAc,EAAE,CACd,8BAAC,oBAAU;gBACT,mCAAmC;gBACnC,8CAA8C;gBAC9C,mDAAmD;+BAC/C,eAAe,IACnB,aAAa,EAAE,aAAa,EAC5B,YAAY,EAAE,MAAM,CAAC,gBAAgB,IACrC,CACH;aACF,CAAC,CAEM;YACZ,8BAAC,WAAI,CAAC,IAAI,aACR,KAAK,EAAE,MAAM,CAAC,SAAS,IACnB,eAAe,CAAC,MAAM,CAAC,GAGzB,yBAAe,CAAC,iBAAiB,CAAC;gBAChC,WAAW,aAAA;gBACX,IAAI,EAAE,sBAAsB;gBAC5B,QAAQ,EAAE,YAAY;gBACtB,QAAQ,EAAE,MAAM;gBAChB,SAAS,EAAE,IAAI;gBACf,YAAY,EAAE,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,UAAU,0CAAE,WAAW;gBACpD,cAAc,EAAE,8BAAC,mBAAS,OAAG;aAC9B,CAAC,CAEM;YACZ,8BAAC,WAAI,CAAC,IAAI,aACR,KAAK,EAAE,MAAM,CAAC,YAAY,IACtB,eAAe,CAAC,QAAQ,CAAC,GAG3B,yBAAe,CAAC,iBAAiB,CAAC;gBAChC,WAAW,aAAA;gBACX,IAAI,EAAE,yBAAyB;gBAC/B,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE,QAAQ;gBAClB,SAAS,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAG,CAAC,CAAC;gBACtB,YAAY,EAAE,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,UAAU,0CAAE,cAAc;gBACvD,cAAc,EAAE,8BAAC,qBAAW,OAAG;aAChC,CAAC,CAEM;YACZ,8BAAC,WAAI,CAAC,IAAI,aACR,KAAK,EAAE,MAAM,CAAC,YAAY,IACtB,eAAe,CAAC,QAAQ,CAAC,GAG3B,yBAAe,CAAC,iBAAiB,CAAC;gBAChC,WAAW,aAAA;gBACX,IAAI,EAAE,yBAAyB;gBAC/B,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE,QAAQ;gBAClB,SAAS,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAG,CAAC,CAAC;gBACtB,YAAY,EAAE,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,UAAU,0CAAE,cAAc;gBACvD,cAAc,EAAE,8BAAC,qBAAW,OAAG;aAChC,CAAC,CAEM;YACZ,8BAAC,WAAI,CAAC,IAAI,aACR,KAAK,EAAE,MAAM,CAAC,WAAW,IACrB,eAAe,CAAC,QAAQ,CAAC,GAG3B,yBAAe,CAAC,iBAAiB,CAAC;gBAChC,WAAW,aAAA;gBACX,IAAI,EAAE,wBAAwB;gBAC9B,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE,QAAQ;gBAClB,SAAS,EAAE,MAAM;gBACjB,YAAY,EAAE,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,UAAU,0CAAE,aAAa;gBACtD,cAAc,EAAE,8BAAC,qBAAW,OAAG;aAChC,CAAC,CAEM;YACZ,8BAAC,WAAI,CAAC,IAAI,aACR,KAAK,EAAE,MAAM,CAAC,YAAY,IACtB,eAAe,CAAC,SAAS,CAAC,GAG5B,yBAAe,CAAC,iBAAiB,CAAC;gBAChC,WAAW,aAAA;gBACX,IAAI,EAAE,yBAAyB;gBAC/B,QAAQ,EAAE,eAAe;gBACzB,QAAQ,EAAE,SAAS;gBACnB,SAAS,EAAE,OAAO;gBAClB,YAAY,EAAE,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,UAAU,0CAAE,cAAc;gBACvD,cAAc,EAAE,8BAAC,sBAAY,OAAG;aACjC,CAAC,CAEM,CACR,CACP,CAAA;KAAA,CAC2B,CAC/B,CAAC;AACJ,CAAC,CAAC;AArMW,QAAA,UAAU,cAqMrB;AAEF,kBAAe,IAAA,6BAAmB,EAAC,IAAA,wBAAQ,EAAC,kBAAU,EAAE,aAAa,CAAC,CAAC,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React, { useContext } from 'react';\n\nimport {\n  Symbolizer,\n  IconSymbolizer\n} from 'geostyler-style';\n\nimport OpacityField from '../Field/OpacityField/OpacityField';\nimport ImageField, { ImageFieldProps } from '../Field/ImageField/ImageField';\nimport { IconLibrary } from '../IconSelector/IconSelector';\n\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEmpty from 'lodash/isEmpty';\nimport _isEqual from 'lodash/isEqual';\nimport RotateField from '../Field/RotateField/RotateField';\nimport SizeField from '../Field/SizeField/SizeField';\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../../locale/en_US';\nimport { Form } from 'antd';\n\nimport { CompositionContext, Compositions } from '../../../context/CompositionContext/CompositionContext';\nimport CompositionUtil from '../../../Util/CompositionUtil';\nimport withDefaultsContext from '../../../hoc/withDefaultsContext';\nimport { DefaultValues } from '../../../context/DefaultValueContext/DefaultValueContext';\nimport { GeoStylerLocale } from '../../../locale/locale';\nimport {\n  UnsupportedPropertiesContext\n} from '../../../context/UnsupportedPropertiesContext/UnsupportedPropertiesContext';\nimport UnsupportedPropertiesUtil from '../../../Util/UnsupportedPropertiesUtil';\nimport OffsetField from '../Field/OffsetField/OffsetField';\n\n// default props\nexport interface IconEditorDefaultProps {\n  locale: GeoStylerLocale['IconEditor'];\n}\n\n// non default props\nexport interface IconEditorProps extends Partial<IconEditorDefaultProps> {\n  symbolizer: IconSymbolizer;\n  onSymbolizerChange?: (changedSymb: Symbolizer) => void;\n  iconLibraries?: IconLibrary[];\n  defaultValues?: DefaultValues;\n  /**\n   * The props for the image field. Properties 'iconLibraries' and\n   * 'tooltipLabel' should not be used here currently, as they will\n   * be overwritten by the same named props that were directly\n   * set on IconEditor. This is done to keep backwards compability.\n   */\n  imageFieldProps?: Partial<ImageFieldProps>;\n}\n\nconst COMPONENTNAME = 'IconEditor';\n\nexport const IconEditor: React.FC<IconEditorProps> = ({\n  locale = en_US.IconEditor,\n  symbolizer,\n  onSymbolizerChange,\n  iconLibraries,\n  defaultValues,\n  imageFieldProps\n}) => {\n\n  const {\n    unsupportedProperties,\n    options\n  } = useContext(UnsupportedPropertiesContext);\n\n\n  const onImageSrcChange = (value: string) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.image = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onSizeChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.size = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOffsetXChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    let newOffset: [number, number] = [value, (symbolizerClone.offset ? symbolizerClone.offset[1] : 0) as number];\n    symbolizerClone.offset = newOffset;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOffsetYChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    let newOffset: [number, number] = [(symbolizerClone.offset ? symbolizerClone.offset[0] : 0) as number, value];\n    symbolizerClone.offset = newOffset;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onRotateChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.rotate = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOpacityChange = (value: number) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.opacity = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const {\n    opacity,\n    image,\n    size,\n    rotate,\n    offset\n  } = symbolizer;\n\n  const imageSrc = !_isEmpty(image) ? image : locale.imagePlaceholder;\n\n  const getSupportProps = (propName: keyof IconSymbolizer) => {\n    return UnsupportedPropertiesUtil.getSupportProps<IconSymbolizer>({\n      propName,\n      symbolizerName: 'IconSymbolizer',\n      unsupportedProperties,\n      ...options\n    });\n  };\n\n  return (\n    <CompositionContext.Consumer>\n      {(composition: Compositions) => (\n        <div className=\"gs-icon-symbolizer-editor\" >\n          <Form.Item\n            label={locale.imageLabel}\n            {...getSupportProps('image')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'IconEditor.imageField',\n                onChange: onImageSrcChange,\n                propName: 'value',\n                propValue: imageSrc,\n                defaultValue: defaultValues?.IconEditor?.defaultImage,\n                defaultElement: (\n                  <ImageField\n                    // To keep backwards compatibility,\n                    // we overwrite imageFieldProps with the props\n                    // that were explicitly set as props on IconEditor.\n                    {...imageFieldProps}\n                    iconLibraries={iconLibraries}\n                    tooltipLabel={locale.iconTooltipLabel}\n                  />\n                )\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.sizeLabel}\n            {...getSupportProps('size')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'IconEditor.sizeField',\n                onChange: onSizeChange,\n                propName: 'size',\n                propValue: size,\n                defaultValue: defaultValues?.IconEditor?.defaultSize,\n                defaultElement: <SizeField />\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.offsetXLabel}\n            {...getSupportProps('offset')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'IconEditor.offsetXField',\n                onChange: onOffsetXChange,\n                propName: 'offset',\n                propValue: offset?.[0],\n                defaultValue: defaultValues?.IconEditor?.defaultOffsetX,\n                defaultElement: <OffsetField />\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.offsetYLabel}\n            {...getSupportProps('offset')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'IconEditor.offsetYField',\n                onChange: onOffsetYChange,\n                propName: 'offset',\n                propValue: offset?.[1],\n                defaultValue: defaultValues?.IconEditor?.defaultOffsetY,\n                defaultElement: <OffsetField />\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.rotateLabel}\n            {...getSupportProps('rotate')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'IconEditor.rotateField',\n                onChange: onRotateChange,\n                propName: 'rotate',\n                propValue: rotate,\n                defaultValue: defaultValues?.IconEditor?.defaultRotate,\n                defaultElement: <RotateField />\n              })\n            }\n          </Form.Item>\n          <Form.Item\n            label={locale.opacityLabel}\n            {...getSupportProps('opacity')}\n          >\n            {\n              CompositionUtil.handleComposition({\n                composition,\n                path: 'IconEditor.opacityField',\n                onChange: onOpacityChange,\n                propName: 'opacity',\n                propValue: opacity,\n                defaultValue: defaultValues?.IconEditor?.defaultOpacity,\n                defaultElement: <OpacityField />\n              })\n            }\n          </Form.Item>\n        </div>\n      )}\n    </CompositionContext.Consumer>\n  );\n};\n\nexport default withDefaultsContext(localize(IconEditor, COMPONENTNAME));\n"]}