{"version":3,"file":"SymbolizerEditorWindow.js","sourceRoot":"","sources":["../../../../src/Component/Symbolizer/SymbolizerEditorWindow/SymbolizerEditorWindow.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,2CAA+B;AAC/B,kDAAsC;AAEtC,uCAAgC;AAIhC,2EAAqD;AAKrD,yCAAuC;AACvC,6BAA8B;AAE9B,2CAAkD;AAElD,mEAA6D;AAC7D,gEAA0C;AAyB1C,IAAM,aAAa,GAAG,wBAAwB,CAAC;AAE/C;;GAEG;AACI,IAAM,sBAAsB,GAA0C,UAAC,EAW7E;QAVC,cAAqC,EAArC,MAAM,mBAAG,eAAK,CAAC,sBAAsB,KAAA,EACrC,uBAAwB,EAAxB,eAAe,mBAAG,MAAM,KAAA,EACxB,WAAW,iBAAA,EACX,eAAe,qBAAA,EACf,CAAC,OAAA,EACD,CAAC,OAAA,EACD,OAAO,aAAA,EACP,mBAAmB,yBAAA,EACnB,aAAa,mBAAA,EACb,UAAU,gBAAA;IAGV,OAAO,CACL,QAAQ,CAAC,YAAY,CACnB,oBAAC,eAAG,IACF,MAAM,EAAE,eAAe,EACvB,SAAS,EAAC,0BAA0B,EACpC,OAAO,EAAE;YACP,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,UAAU,GAAG,CAAC;YAC7B,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,WAAW,GAAG,CAAC;YAC9B,KAAK,EAAE,SAAS;YAChB,MAAM,EAAE,SAAS;SAClB,EACD,cAAc,EAAE;YACd,MAAM,EAAE,KAAK;YACb,UAAU,EAAE,KAAK;YACjB,WAAW,EAAE,KAAK;YAClB,IAAI,EAAE,KAAK;YACX,KAAK,EAAE,KAAK;YACZ,GAAG,EAAE,KAAK;YACV,OAAO,EAAE,KAAK;YACd,QAAQ,EAAE,KAAK;SAChB,EACD,mBAAmB,EAAC,OAAO;QAE3B,6BAAK,SAAS,EAAC,wCAAwC;YACrD,8BAAM,SAAS,EAAC,OAAO,IACpB,MAAM,CAAC,iBAAiB,CACpB;YACP,oBAAC,aAAM,IACL,IAAI,EAAE,oBAAC,qBAAa,OAAG,EACvB,IAAI,EAAC,OAAO,EACZ,OAAO,EAAE,OAAO,GAChB,CACE;QACN,oBAAC,qBAAW,IACV,eAAe,EAAE,eAAe,EAChC,WAAW,EAAE,WAAW,EACxB,mBAAmB,EAAE,mBAAmB,EACxC,aAAa,EAAE,aAAa,EAC5B,WAAW,EAAE,EAAC,UAAU,YAAA,EAAC,GACzB,CACE,EACN,QAAQ,CAAC,IAAI,CACd,CACF,CAAC;AACJ,CAAC,CAAC;AAzDW,QAAA,sBAAsB,0BAyDjC;AAEF,kBAAe,IAAA,wBAAQ,EAAC,8BAAsB,EAAE,aAAa,CAAC,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { Rnd } from 'react-rnd';\n\nimport { Symbolizer } from 'geostyler-style';\n\nimport MultiEditor from '../MultiEditor/MultiEditor';\nimport { IconLibrary } from '../IconSelector/IconSelector';\n\nimport { Data } from 'geostyler-data';\n\nimport './SymbolizerEditorWindow.less';\nimport { Button } from 'antd';\n\nimport { CloseOutlined } from '@ant-design/icons';\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../../locale/en_US';\n\nimport _isEqual from 'lodash/isEqual';\nimport { GeoStylerLocale } from '../../../locale/locale';\n\n// default props\nexport interface SymbolizerEditorWindowDefaultProps {\n  locale: GeoStylerLocale['SymbolizerEditorWindow'];\n  constrainWindow: string;\n}\n\n// non default props\nexport interface SymbolizerEditorWindowProps extends Partial<SymbolizerEditorWindowDefaultProps> {\n  symbolizers: Symbolizer[];\n  internalDataDef?: Data;\n  x?: number;\n  y?: number;\n  onClose?: () => void;\n  onSymbolizersChange?: (symbolizers: Symbolizer[]) => void;\n  iconLibraries?: IconLibrary[];\n  colorRamps?: {\n    [name: string]: string[];\n  };\n}\n\nconst COMPONENTNAME = 'SymbolizerEditorWindow';\n\n/**\n * Symbolizer editorwindow UI.\n */\nexport const SymbolizerEditorWindow: React.FC<SymbolizerEditorWindowProps> = ({\n  locale = en_US.SymbolizerEditorWindow,\n  constrainWindow = 'body',\n  symbolizers,\n  internalDataDef,\n  x,\n  y,\n  onClose,\n  onSymbolizersChange,\n  iconLibraries,\n  colorRamps\n}) => {\n\n  return (\n    ReactDOM.createPortal(\n      <Rnd\n        bounds={constrainWindow}\n        className=\"symbolizer-editor-window\"\n        default={{\n          x: x || window.innerWidth / 2,\n          y: y || window.innerHeight / 2,\n          width: undefined,\n          height: undefined\n        }}\n        enableResizing={{\n          bottom: false,\n          bottomLeft: false,\n          bottomRight: false,\n          left: false,\n          right: false,\n          top: false,\n          topLeft: false,\n          topRight: false\n        }}\n        dragHandleClassName=\"title\"\n      >\n        <div className=\"header symbolizer-editor-window-header\">\n          <span className=\"title\">\n            {locale.symbolizersEditor}\n          </span>\n          <Button\n            icon={<CloseOutlined />}\n            size=\"small\"\n            onClick={onClose}\n          />\n        </div>\n        <MultiEditor\n          internalDataDef={internalDataDef}\n          symbolizers={symbolizers}\n          onSymbolizersChange={onSymbolizersChange}\n          iconLibraries={iconLibraries}\n          editorProps={{colorRamps}}\n        />\n      </Rnd>,\n      document.body\n    )\n  );\n};\n\nexport default localize(SymbolizerEditorWindow, COMPONENTNAME);\n"]}