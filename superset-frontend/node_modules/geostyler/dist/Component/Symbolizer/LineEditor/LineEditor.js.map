{"version":3,"file":"LineEditor.js","sourceRoot":"","sources":["../../../../src/Component/Symbolizer/LineEditor/LineEditor.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React, { useContext } from 'react';\n\nimport {\n  Collapse,\n  Form\n} from 'antd';\n\nimport {\n  Symbolizer,\n  LineSymbolizer,\n  PointSymbolizer,\n  GraphicType\n} from 'geostyler-style';\n\nimport ColorField from '../Field/ColorField/ColorField';\nimport OpacityField from '../Field/OpacityField/OpacityField';\nimport WidthField from '../Field/WidthField/WidthField';\nimport LineDashField from '../Field/LineDashField/LineDashField';\nimport LineCapField from '../Field/LineCapField/LineCapField';\nimport LineJoinField from '../Field/LineJoinField/LineJoinField';\nimport OffsetField from '../Field/OffsetField/OffsetField';\nimport GraphicEditor from '../GraphicEditor/GraphicEditor';\n\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _get from 'lodash/get';\nimport _isEqual from 'lodash/isEqual';\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../../locale/en_US';\nimport { CompositionContext, Compositions } from '../../../context/CompositionContext/CompositionContext';\nimport CompositionUtil from '../../../Util/CompositionUtil';\nimport withDefaultsContext from '../../../hoc/withDefaultsContext';\nimport { DefaultValues } from '../../../context/DefaultValueContext/DefaultValueContext';\nimport { GeoStylerLocale } from '../../../locale/locale';\nimport {\n  UnsupportedPropertiesContext\n} from '../../../context/UnsupportedPropertiesContext/UnsupportedPropertiesContext';\nimport UnsupportedPropertiesUtil from '../../../Util/UnsupportedPropertiesUtil';\n\nconst Panel = Collapse.Panel;\n\nexport interface LineEditorDefaultProps {\n  /** Language package */\n  locale: GeoStylerLocale['LineEditor'];\n}\n\n// non default props\nexport interface LineEditorProps extends Partial<LineEditorDefaultProps> {\n  /** Symbolizer */\n  symbolizer: LineSymbolizer;\n  /** Callback when symbolizer changes */\n  onSymbolizerChange?: (changedSymb: Symbolizer) => void;\n  defaultValues?: DefaultValues;\n}\nconst COMPONENTNAME = 'LineEditor';\n\nexport const LineEditor: React.FC<LineEditorProps> = ({\n  locale = en_US.LineEditor,\n  symbolizer,\n  onSymbolizerChange,\n  defaultValues\n}) => {\n\n  const {\n    unsupportedProperties,\n    options\n  } = useContext(UnsupportedPropertiesContext);\n\n  const onColorChange = (value: LineSymbolizer['color']) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.color = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onWidthChange = (value: LineSymbolizer['width']) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.width = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onPerpendicularOffsetChange = (value: LineSymbolizer['perpendicularOffset']) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.perpendicularOffset = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onOpacityChange = (value: LineSymbolizer['opacity']) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.opacity = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onDasharrayChange = (value: LineSymbolizer['dasharray']) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.dasharray = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onDashOffsetChange = (value: LineSymbolizer['dashOffset']) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.dashOffset = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onCapChange = (value: LineSymbolizer['cap']) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.cap = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onJoinChange = (value: LineSymbolizer['join']) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.join = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onGraphicStrokeChange = (value: PointSymbolizer) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.graphicStroke = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const onGraphicFillChange = (value: PointSymbolizer) => {\n    const symbolizerClone = _cloneDeep(symbolizer);\n    symbolizerClone.graphicFill = value;\n    if (onSymbolizerChange) {\n      onSymbolizerChange(symbolizerClone);\n    }\n  };\n\n  const {\n    color,\n    width,\n    opacity,\n    dasharray,\n    dashOffset,\n    cap,\n    join,\n    graphicStroke,\n    perpendicularOffset,\n    graphicFill\n  } = _cloneDeep(symbolizer);\n\n  const getSupportProps = (propName: keyof LineSymbolizer) => {\n    return UnsupportedPropertiesUtil.getSupportProps<LineSymbolizer>({\n      propName,\n      symbolizerName: 'LineSymbolizer',\n      unsupportedProperties,\n      ...options\n    });\n  };\n\n  return (\n    <CompositionContext.Consumer>\n      {(composition: Compositions) => (\n        <div className=\"gs-line-symbolizer-editor\" >\n          <Collapse bordered={false} defaultActiveKey={['1']}>\n            <Panel header=\"General\" key=\"1\">\n              <Form.Item\n                label={locale.colorLabel}\n                {...getSupportProps('color')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'LineEditor.colorField',\n                    onChange: onColorChange,\n                    propName: 'color',\n                    propValue: color,\n                    defaultValue: defaultValues?.LineEditor?.defaultColor,\n                    defaultElement: <ColorField />\n                  })\n                }\n              </Form.Item>\n              <Form.Item\n                label={locale.widthLabel}\n                {...getSupportProps('width')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'LineEditor.widthField',\n                    onChange: onWidthChange,\n                    propName: 'width',\n                    propValue: width,\n                    defaultValue: defaultValues?.LineEditor?.defaultWidth,\n                    defaultElement: <WidthField />\n                  })\n                }\n              </Form.Item>\n              <Form.Item\n                label={locale.perpendicularOffsetLabel}\n                {...getSupportProps('perpendicularOffset')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'LineEditor.perpendicularOffsetField',\n                    onChange: onPerpendicularOffsetChange,\n                    propName: 'offset',\n                    propValue: perpendicularOffset,\n                    defaultValue: defaultValues?.LineEditor?.defaultPerpendicularOffset,\n                    defaultElement: <OffsetField />\n                  })\n                }\n              </Form.Item>\n              <Form.Item\n                label={locale.opacityLabel}\n                {...getSupportProps('opacity')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'LineEditor.opacityField',\n                    onChange: onOpacityChange,\n                    propName: 'opacity',\n                    propValue: opacity,\n                    defaultValue: defaultValues?.LineEditor?.defaultOpacity,\n                    defaultElement: <OpacityField />\n                  })\n                }\n              </Form.Item>\n              <Form.Item\n                label={locale.dashLabel}\n                {...getSupportProps('dasharray')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'LineEditor.lineDashField',\n                    onChange: onDasharrayChange,\n                    propName: 'dashArray',\n                    propValue: dasharray,\n                    defaultElement: <LineDashField />\n                  })\n                }\n              </Form.Item>\n              <Form.Item\n                label={locale.dashOffsetLabel}\n                {...getSupportProps('dashOffset')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'LineEditor.dashOffsetField',\n                    onChange: onDashOffsetChange,\n                    propName: 'offset',\n                    propValue: dashOffset,\n                    defaultValue: defaultValues?.LineEditor?.defaultDashOffset,\n                    defaultElement: (\n                      <OffsetField\n                        disabled={\n                          symbolizer.dasharray === undefined || _get(symbolizer, 'dasharray.length') === 0\n                        }\n                      />)\n                  })\n                }\n              </Form.Item>\n              <Form.Item\n                label={locale.capLabel}\n                {...getSupportProps('cap')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'LineEditor.capField',\n                    onChange: onCapChange,\n                    propName: 'cap',\n                    propValue: cap,\n                    defaultValue: defaultValues?.LineEditor?.defaultCap,\n                    defaultElement: <LineCapField />\n                  })\n                }\n              </Form.Item>\n              <Form.Item\n                label={locale.joinLabel}\n                {...getSupportProps('join')}\n              >\n                {\n                  CompositionUtil.handleComposition({\n                    composition,\n                    path: 'LineEditor.joinField',\n                    onChange: onJoinChange,\n                    propName: 'join',\n                    propValue: join,\n                    defaultValue: defaultValues?.LineEditor?.defaultJoin,\n                    defaultElement: <LineJoinField />\n                  })\n                }\n              </Form.Item>\n            </Panel>\n            <Panel header=\"Graphic Stroke\" key=\"2\">\n              {\n                CompositionUtil.handleComposition({\n                  composition,\n                  path: 'LineEditor.graphicStrokeField',\n                  onChange: onGraphicStrokeChange,\n                  propName: 'graphic',\n                  propValue: graphicStroke,\n                  onChangeName: 'onGraphicChange',\n                  defaultElement: (\n                    <GraphicEditor\n                      graphicTypeFieldLabel={locale.graphicStrokeTypeLabel}\n                      graphic={graphicStroke}\n                      graphicType={_get(graphicStroke, 'kind') as GraphicType}\n                    />)\n                })\n              }\n            </Panel>\n            <Panel header=\"Graphic Fill\" key=\"3\">\n              {\n                CompositionUtil.handleComposition({\n                  composition,\n                  path: 'LineEditor.graphicFillField',\n                  onChange: onGraphicFillChange,\n                  propName: 'graphic',\n                  propValue: graphicFill,\n                  onChangeName: 'onGraphicChange',\n                  defaultElement: (\n                    <GraphicEditor\n                      graphicTypeFieldLabel={locale.graphicFillTypeLabel}\n                      graphic={graphicFill}\n                      graphicType={_get(graphicFill, 'kind') as GraphicType}\n                    />)\n                })\n              }\n            </Panel>\n          </Collapse>\n        </div>)\n      }\n    </CompositionContext.Consumer>\n  );\n\n};\n\nexport default withDefaultsContext(localize(LineEditor, COMPONENTNAME));\n"]}