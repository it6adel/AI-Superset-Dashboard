"use strict";
/* Released under the BSD 2-Clause License
 *
 * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LineEditor = void 0;
var react_1 = __importStar(require("react"));
var antd_1 = require("antd");
var ColorField_1 = __importDefault(require("../Field/ColorField/ColorField"));
var OpacityField_1 = __importDefault(require("../Field/OpacityField/OpacityField"));
var WidthField_1 = __importDefault(require("../Field/WidthField/WidthField"));
var LineDashField_1 = __importDefault(require("../Field/LineDashField/LineDashField"));
var LineCapField_1 = __importDefault(require("../Field/LineCapField/LineCapField"));
var LineJoinField_1 = __importDefault(require("../Field/LineJoinField/LineJoinField"));
var OffsetField_1 = __importDefault(require("../Field/OffsetField/OffsetField"));
var GraphicEditor_1 = __importDefault(require("../GraphicEditor/GraphicEditor"));
var cloneDeep_1 = __importDefault(require("lodash/cloneDeep"));
var get_1 = __importDefault(require("lodash/get"));
var LocaleWrapper_1 = require("../../LocaleWrapper/LocaleWrapper");
var en_US_1 = __importDefault(require("../../../locale/en_US"));
var CompositionContext_1 = require("../../../context/CompositionContext/CompositionContext");
var CompositionUtil_1 = __importDefault(require("../../../Util/CompositionUtil"));
var withDefaultsContext_1 = __importDefault(require("../../../hoc/withDefaultsContext"));
var UnsupportedPropertiesContext_1 = require("../../../context/UnsupportedPropertiesContext/UnsupportedPropertiesContext");
var UnsupportedPropertiesUtil_1 = __importDefault(require("../../../Util/UnsupportedPropertiesUtil"));
var Panel = antd_1.Collapse.Panel;
var COMPONENTNAME = 'LineEditor';
var LineEditor = function (_a) {
    var _b = _a.locale, locale = _b === void 0 ? en_US_1.default.LineEditor : _b, symbolizer = _a.symbolizer, onSymbolizerChange = _a.onSymbolizerChange, defaultValues = _a.defaultValues;
    var _c = (0, react_1.useContext)(UnsupportedPropertiesContext_1.UnsupportedPropertiesContext), unsupportedProperties = _c.unsupportedProperties, options = _c.options;
    var onColorChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.color = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onWidthChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.width = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onPerpendicularOffsetChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.perpendicularOffset = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onOpacityChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.opacity = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onDasharrayChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.dasharray = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onDashOffsetChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.dashOffset = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onCapChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.cap = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onJoinChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.join = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onGraphicStrokeChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.graphicStroke = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var onGraphicFillChange = function (value) {
        var symbolizerClone = (0, cloneDeep_1.default)(symbolizer);
        symbolizerClone.graphicFill = value;
        if (onSymbolizerChange) {
            onSymbolizerChange(symbolizerClone);
        }
    };
    var _d = (0, cloneDeep_1.default)(symbolizer), color = _d.color, width = _d.width, opacity = _d.opacity, dasharray = _d.dasharray, dashOffset = _d.dashOffset, cap = _d.cap, join = _d.join, graphicStroke = _d.graphicStroke, perpendicularOffset = _d.perpendicularOffset, graphicFill = _d.graphicFill;
    var getSupportProps = function (propName) {
        return UnsupportedPropertiesUtil_1.default.getSupportProps(__assign({ propName: propName, symbolizerName: 'LineSymbolizer', unsupportedProperties: unsupportedProperties }, options));
    };
    return (react_1.default.createElement(CompositionContext_1.CompositionContext.Consumer, null, function (composition) {
        var _a, _b, _c, _d, _e, _f, _g;
        return (react_1.default.createElement("div", { className: "gs-line-symbolizer-editor" },
            react_1.default.createElement(antd_1.Collapse, { bordered: false, defaultActiveKey: ['1'] },
                react_1.default.createElement(Panel, { header: "General", key: "1" },
                    react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.colorLabel }, getSupportProps('color')), CompositionUtil_1.default.handleComposition({
                        composition: composition,
                        path: 'LineEditor.colorField',
                        onChange: onColorChange,
                        propName: 'color',
                        propValue: color,
                        defaultValue: (_a = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.LineEditor) === null || _a === void 0 ? void 0 : _a.defaultColor,
                        defaultElement: react_1.default.createElement(ColorField_1.default, null)
                    })),
                    react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.widthLabel }, getSupportProps('width')), CompositionUtil_1.default.handleComposition({
                        composition: composition,
                        path: 'LineEditor.widthField',
                        onChange: onWidthChange,
                        propName: 'width',
                        propValue: width,
                        defaultValue: (_b = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.LineEditor) === null || _b === void 0 ? void 0 : _b.defaultWidth,
                        defaultElement: react_1.default.createElement(WidthField_1.default, null)
                    })),
                    react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.perpendicularOffsetLabel }, getSupportProps('perpendicularOffset')), CompositionUtil_1.default.handleComposition({
                        composition: composition,
                        path: 'LineEditor.perpendicularOffsetField',
                        onChange: onPerpendicularOffsetChange,
                        propName: 'offset',
                        propValue: perpendicularOffset,
                        defaultValue: (_c = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.LineEditor) === null || _c === void 0 ? void 0 : _c.defaultPerpendicularOffset,
                        defaultElement: react_1.default.createElement(OffsetField_1.default, null)
                    })),
                    react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.opacityLabel }, getSupportProps('opacity')), CompositionUtil_1.default.handleComposition({
                        composition: composition,
                        path: 'LineEditor.opacityField',
                        onChange: onOpacityChange,
                        propName: 'opacity',
                        propValue: opacity,
                        defaultValue: (_d = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.LineEditor) === null || _d === void 0 ? void 0 : _d.defaultOpacity,
                        defaultElement: react_1.default.createElement(OpacityField_1.default, null)
                    })),
                    react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.dashLabel }, getSupportProps('dasharray')), CompositionUtil_1.default.handleComposition({
                        composition: composition,
                        path: 'LineEditor.lineDashField',
                        onChange: onDasharrayChange,
                        propName: 'dashArray',
                        propValue: dasharray,
                        defaultElement: react_1.default.createElement(LineDashField_1.default, null)
                    })),
                    react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.dashOffsetLabel }, getSupportProps('dashOffset')), CompositionUtil_1.default.handleComposition({
                        composition: composition,
                        path: 'LineEditor.dashOffsetField',
                        onChange: onDashOffsetChange,
                        propName: 'offset',
                        propValue: dashOffset,
                        defaultValue: (_e = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.LineEditor) === null || _e === void 0 ? void 0 : _e.defaultDashOffset,
                        defaultElement: (react_1.default.createElement(OffsetField_1.default, { disabled: symbolizer.dasharray === undefined || (0, get_1.default)(symbolizer, 'dasharray.length') === 0 }))
                    })),
                    react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.capLabel }, getSupportProps('cap')), CompositionUtil_1.default.handleComposition({
                        composition: composition,
                        path: 'LineEditor.capField',
                        onChange: onCapChange,
                        propName: 'cap',
                        propValue: cap,
                        defaultValue: (_f = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.LineEditor) === null || _f === void 0 ? void 0 : _f.defaultCap,
                        defaultElement: react_1.default.createElement(LineCapField_1.default, null)
                    })),
                    react_1.default.createElement(antd_1.Form.Item, __assign({ label: locale.joinLabel }, getSupportProps('join')), CompositionUtil_1.default.handleComposition({
                        composition: composition,
                        path: 'LineEditor.joinField',
                        onChange: onJoinChange,
                        propName: 'join',
                        propValue: join,
                        defaultValue: (_g = defaultValues === null || defaultValues === void 0 ? void 0 : defaultValues.LineEditor) === null || _g === void 0 ? void 0 : _g.defaultJoin,
                        defaultElement: react_1.default.createElement(LineJoinField_1.default, null)
                    }))),
                react_1.default.createElement(Panel, { header: "Graphic Stroke", key: "2" }, CompositionUtil_1.default.handleComposition({
                    composition: composition,
                    path: 'LineEditor.graphicStrokeField',
                    onChange: onGraphicStrokeChange,
                    propName: 'graphic',
                    propValue: graphicStroke,
                    onChangeName: 'onGraphicChange',
                    defaultElement: (react_1.default.createElement(GraphicEditor_1.default, { graphicTypeFieldLabel: locale.graphicStrokeTypeLabel, graphic: graphicStroke, graphicType: (0, get_1.default)(graphicStroke, 'kind') }))
                })),
                react_1.default.createElement(Panel, { header: "Graphic Fill", key: "3" }, CompositionUtil_1.default.handleComposition({
                    composition: composition,
                    path: 'LineEditor.graphicFillField',
                    onChange: onGraphicFillChange,
                    propName: 'graphic',
                    propValue: graphicFill,
                    onChangeName: 'onGraphicChange',
                    defaultElement: (react_1.default.createElement(GraphicEditor_1.default, { graphicTypeFieldLabel: locale.graphicFillTypeLabel, graphic: graphicFill, graphicType: (0, get_1.default)(graphicFill, 'kind') }))
                })))));
    }));
};
exports.LineEditor = LineEditor;
exports.default = (0, withDefaultsContext_1.default)((0, LocaleWrapper_1.localize)(exports.LineEditor, COMPONENTNAME));
//# sourceMappingURL=LineEditor.js.map