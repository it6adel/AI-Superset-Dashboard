{"version":3,"file":"MultiEditor.js","sourceRoot":"","sources":["../../../../src/Component/Symbolizer/MultiEditor/MultiEditor.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\n/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\nimport {\n  Symbolizer\n} from 'geostyler-style';\n\nimport './MultiEditor.less';\n\nimport 'ol/ol.css';\nimport { Data } from 'geostyler-data';\n\nimport { Tabs, Button } from 'antd';\nimport Editor from '../Editor/Editor';\nconst TabPane = Tabs.TabPane;\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../../locale/en_US';\nimport SymbolizerUtil from '../../../Util/SymbolizerUtil';\nimport { IconLibrary } from '../IconSelector/IconSelector';\n\nimport _isEqual from 'lodash/isEqual';\nimport { GeoStylerLocale } from '../../../locale/locale';\n\n\n// default props\ninterface MultiEditorDefaultProps {\n  locale: GeoStylerLocale['MultiEditor'];\n}\n\n// non default props\nexport interface MultiEditorProps extends Partial<MultiEditorDefaultProps> {\n  internalDataDef?: Data;\n  editorProps?: any;\n  symbolizers: Symbolizer[];\n  onSymbolizersChange?: (symbolizers: Symbolizer[]) => void;\n  iconLibraries?: IconLibrary[];\n}\n\nconst COMPONENTNAME = 'MultiEditor';\n\nexport const MultiEditor: React.FC<MultiEditorProps> = ({\n  locale = en_US.MultiEditor,\n  internalDataDef,\n  editorProps,\n  symbolizers,\n  onSymbolizersChange,\n  iconLibraries,\n  ...passThroughProps\n}) => {\n\n  const addSymbolizer = () => {\n    const symbolizerKind = symbolizers.length > 0 ? symbolizers[0].kind : undefined;\n    const newSymbolizer = SymbolizerUtil.generateSymbolizer(symbolizerKind);\n    if (onSymbolizersChange) {\n      onSymbolizersChange([...symbolizers, newSymbolizer]);\n    }\n  };\n\n  const removeSymbolizer = (key: number) => {\n    const symbolizersClone = [...symbolizers];\n    symbolizersClone.splice(key, 1);\n    if (onSymbolizersChange) {\n      onSymbolizersChange(symbolizersClone);\n    }\n  };\n\n  const onSymbolizerChange = (symbolizer: Symbolizer, key: number) => {\n    const symbolizersClone = [...symbolizers];\n    symbolizersClone[key] = symbolizer;\n    if (onSymbolizersChange) {\n      onSymbolizersChange(symbolizersClone);\n    }\n  };\n\n  const tabs = symbolizers.map((symbolizer: Symbolizer, idx: number) => {\n    return (\n      <TabPane\n        className=\"gs-symbolizer-multi-editor-tab\"\n        key={idx.toString()}\n        tab={idx}\n        closable={true}\n      >\n        <Editor\n          symbolizer={symbolizer}\n          onSymbolizerChange={(sym: Symbolizer) => {\n            onSymbolizerChange(sym, idx);\n          }}\n          internalDataDef={internalDataDef}\n          iconLibraries={iconLibraries}\n          {...editorProps}\n        />\n        {symbolizers.length === 1 ? null :\n          <Button\n            onClick={() => {\n              removeSymbolizer(idx);\n            }}\n          >\n            {locale.remove}\n          </Button>\n        }\n      </TabPane>\n    );\n  });\n\n  return (\n    <Tabs\n      className=\"gs-symbolizer-multi-editor\"\n      defaultActiveKey=\"0\"\n      animated={false}\n      tabBarExtraContent={(\n        <Button onClick={addSymbolizer}>\n          {locale.add}\n        </Button>\n      )}\n      {...passThroughProps}\n    >\n      {tabs}\n    </Tabs>\n  );\n};\n\nexport default localize(MultiEditor, COMPONENTNAME);\n"]}