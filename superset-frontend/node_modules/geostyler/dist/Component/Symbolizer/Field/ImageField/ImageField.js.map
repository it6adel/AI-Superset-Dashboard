{"version":3,"file":"ImageField.js","sourceRoot":"","sources":["../../../../../src/Component/Symbolizer/Field/ImageField/ImageField.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,2CAA+B;AAE/B,6BAGc;AAEd,mGAA6E;AAG7E,6BAA2B;AAC3B,2CAAoD;AA2BpD;;GAEG;AACI,IAAM,UAAU,GAA8B,UAAC,EAQrD;QAPC,QAAQ,cAAA,EACR,KAAK,WAAA,EACL,aAAa,mBAAA,EACb,oBAA6B,EAA7B,YAAY,mBAAG,cAAc,KAAA,EAC7B,mBAA4B,EAA5B,WAAW,mBAAG,cAAc,KAAA,EAC5B,kBAAkB,EAAlB,UAAU,mBAAG,KAAK,KAAA,EAClB,4BAA+B,EAA/B,oBAAoB,mBAAG,cAAO,CAAC,KAAA;IAGzB,IAAA,KAAoC,KAAK,CAAC,QAAQ,CAAU,KAAK,CAAC,EAAjE,aAAa,QAAA,EAAE,gBAAgB,QAAkC,CAAC;IAEzE,IAAM,qBAAqB,GAAG;QAC5B,OAAO,CACL,oBAAC,cAAO,IAAC,KAAK,EAAE,YAAY;YAC1B,oBAAC,uBAAe,IAAC,SAAS,EAAC,6BAA6B,EAAC,IAAI,EAAC,SAAS,EAAC,OAAO,EAAE,UAAU,GAAI,CACvF,CACX,CAAC;IACJ,CAAC,CAAC;IAEF,IAAM,UAAU,GAAG;QACjB,IAAI,UAAU,EAAE;YACd,oBAAoB,EAAE,CAAC;SACxB;aAAM;YACL,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACxB;IACH,CAAC,CAAC;IAEF,IAAM,WAAW,GAAG;QAClB,gBAAgB,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAO,CACL,6BAAK,SAAS,EAAC,6BAA6B;QAC1C,oBAAC,YAAK,IACJ,SAAS,EAAE,aAAa,CAAC,CAAC,CAAC,8BAA8B,CAAC,CAAC,CAAC,SAAS,EACrE,KAAK,EAAE,KAAK,EACZ,WAAW,EAAE,WAAW,EACxB,YAAY,EAAE,KAAK,EACnB,UAAU,EAAE,aAAa,CAAC,CAAC,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,SAAS,EAC/D,QAAQ,EAAE,UAAC,GAAQ;gBACjB,IAAI,QAAQ,EAAE;oBACZ,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBAC5B;YACH,CAAC,GACD;QAEA,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACrB,oBAAC,4BAAkB,IACjB,OAAO,EAAE,WAAW,EACpB,aAAa,EAAE,aAAa,EAC5B,eAAe,EAAE,KAAK,EACtB,YAAY,EAAE,UAAC,GAAW;oBACxB,IAAI,QAAQ,EAAE;wBACZ,QAAQ,CAAC,GAAG,CAAC,CAAC;qBACf;gBACH,CAAC,GACD,CAEF,CACP,CAAC;AACJ,CAAC,CAAC;AA7DW,QAAA,UAAU,cA6DrB;AAEF,kBAAe,kBAAU,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\nimport {\n  Input,\n  Tooltip\n} from 'antd';\n\nimport IconSelectorWindow from '../../IconSelectorWindow/IconSelectorWindow';\nimport { IconLibrary } from '../../IconSelector/IconSelector';\n\nimport './ImageField.less';\nimport { PictureOutlined } from '@ant-design/icons';\n\n// default props\ninterface ImageFieldDefaultProps {\n  /** The tooltip label for the iconLibraries button. */\n  tooltipLabel: string;\n  /** The placeholder text when no value was provided yet. */\n  placeholder: string;\n  /** True, if the iconLibrary should not be opened in a window. False otherwise. */\n  windowless: boolean;\n  /**\n   * The callback when the iconLibraries button was clicked.\n   * This will only be called, when 'windowless' is true.\n   */\n  onIconLibrariesClick: () => void;\n}\n\n// non default props\nexport interface ImageFieldProps extends Partial<ImageFieldDefaultProps> {\n  /** The value of the image field. */\n  value?: string;\n  /** The callback that is triggered when the value changes. */\n  onChange?: (image: string) => void;\n  /** Predefined list of icons to select from. */\n  iconLibraries?: IconLibrary[];\n}\n\n/**\n * ImageField\n */\nexport const ImageField: React.FC<ImageFieldProps> = ({\n  onChange,\n  value,\n  iconLibraries,\n  tooltipLabel = 'Open Gallery',\n  placeholder = 'URL to image',\n  windowless = false,\n  onIconLibrariesClick = () => {}\n}) => {\n\n  const [windowVisible, setWindowVisible] = React.useState<boolean>(false);\n\n  const getIconSelectorButton = () => {\n    return (\n      <Tooltip title={tooltipLabel}>\n        <PictureOutlined className=\"gs-image-field-gallery-icon\" type=\"picture\" onClick={openWindow} />\n      </Tooltip>\n    );\n  };\n\n  const openWindow = () => {\n    if (windowless) {\n      onIconLibrariesClick();\n    } else {\n      setWindowVisible(true);\n    }\n  };\n\n  const closeWindow = () => {\n    setWindowVisible(false);\n  };\n\n  return (\n    <div className=\"editor-field gs-image-field\">\n      <Input\n        className={iconLibraries ? 'gs-image-field-gallery-addon' : undefined}\n        value={value}\n        placeholder={placeholder}\n        defaultValue={value}\n        addonAfter={iconLibraries ? getIconSelectorButton() : undefined}\n        onChange={(evt: any) => {\n          if (onChange) {\n            onChange(evt.target.value);\n          }\n        }}\n      />\n      {\n        !windowVisible ? null :\n          <IconSelectorWindow\n            onClose={closeWindow}\n            iconLibraries={iconLibraries}\n            selectedIconSrc={value}\n            onIconSelect={(src: string) => {\n              if (onChange) {\n                onChange(src);\n              }\n            }}\n          />\n      }\n    </div>\n  );\n};\n\nexport default ImageField;\n"]}