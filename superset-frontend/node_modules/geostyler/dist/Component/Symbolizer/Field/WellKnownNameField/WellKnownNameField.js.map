{"version":3,"file":"WellKnownNameField.js","sourceRoot":"","sources":["../../../../../src/Component/Symbolizer/Field/WellKnownNameField/WellKnownNameField.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,2CAA+B;AAE/B,6BAEc;AAGd,sEAAgE;AAChE,mEAA6C;AAE7C,mDAA8B;AAE9B,IAAM,MAAM,GAAG,aAAM,CAAC,MAAM,CAAC;AAc7B;;GAEG;AACI,IAAM,kBAAkB,GAAsC,UAAC,EAQrE;QAPC,QAAQ,cAAA,EACR,cAAiC,EAAjC,MAAM,mBAAG,eAAK,CAAC,kBAAkB,KAAA,EACjC,qBAAwB,EAAxB,aAAa,mBAAG,QAAQ,KAAA,EACxB,sBAGuD,EAHvD,cAAc,mBAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG;QACpE,mBAAmB,EAAE,gBAAgB,EAAE,aAAa;QACpD,iBAAiB,EAAE,gBAAgB,EAAE,cAAc;QACnD,eAAe,EAAE,eAAe,EAAE,kBAAkB,CAAC,KAAA;IAGvD,IAAM,mBAAmB,GAAG;QAC1B,OAAO,cAAc,CAAC,GAAG,CAAC,UAAA,IAAI;YAC5B,8DAA8D;YAC9D,IAAM,GAAG,GAAG,IAAA,aAAI,EAAC,MAAM,EAAE,iBAAiB,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC;YACjE,OAAO,CACL,oBAAC,MAAM,IACL,GAAG,EAAE,IAAI,EACT,KAAK,EAAE,IAAI,IAEV,GAAG,CACG,CACV,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,OAAO,CACL,oBAAC,aAAM,IACL,SAAS,EAAC,kCAAkC,EAC5C,KAAK,EAAE,aAAa,EACpB,QAAQ,EAAE,QAAQ,IAEjB,mBAAmB,EAAE,CACf,CACV,CAAC;AACJ,CAAC,CAAC;AAlCW,QAAA,kBAAkB,sBAkC7B;AAEF,kBAAe,IAAA,wBAAQ,EAAC,0BAAkB,EAAE,oBAAoB,CAAC,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\nimport {\n  Select\n} from 'antd';\nimport { WellKnownName } from 'geostyler-style';\n\nimport { localize } from '../../../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../../../locale/en_US';\n\nimport _get from 'lodash/get';\nimport { GeoStylerLocale } from '../../../../locale/locale';\nconst Option = Select.Option;\n\n// default props\ninterface WellKnownNameFieldDefaultProps {\n  wellKnownName: WellKnownName;\n  wellKnownNames: WellKnownName[];\n  locale: GeoStylerLocale['WellKnownNameField'];\n}\n\n// non default props\nexport interface WellKnownNameFieldProps extends Partial<WellKnownNameFieldDefaultProps> {\n  onChange?: (wellKnownName: WellKnownName) => void;\n}\n\n/**\n * WellKnownNameField\n */\nexport const WellKnownNameField: React.FC<WellKnownNameFieldProps> = ({\n  onChange,\n  locale = en_US.WellKnownNameField,\n  wellKnownName = 'circle',\n  wellKnownNames = ['circle', 'square', 'triangle', 'star', 'cross', 'x',\n    'shape://backslash', 'shape://carrow', 'shape://dot',\n    'shape://horline', 'shape://oarrow', 'shape://plus',\n    'shape://slash', 'shape://times', 'shape://vertline']\n}) => {\n\n  const getWKNSelectOptions = () => {\n    return wellKnownNames.map(name => {\n      // if locales are not available, set Option text to name value\n      const loc = _get(locale, 'wellKnownNames[' + name + ']') || name;\n      return (\n        <Option\n          key={name}\n          value={name}\n        >\n          {loc}\n        </Option>\n      );\n    });\n  };\n\n  return (\n    <Select\n      className=\"editor-field wellknownname-field\"\n      value={wellKnownName}\n      onChange={onChange}\n    >\n      {getWKNSelectOptions()}\n    </Select>\n  );\n};\n\nexport default localize(WellKnownNameField, 'WellKnownNameField');\n"]}