{"version":3,"file":"ColorMapEntryField.js","sourceRoot":"","sources":["../../../../../src/Component/Symbolizer/Field/ColorMapEntryField/ColorMapEntryField.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,2CAA+B;AAG/B,wEAAkD;AAClD,2EAAqD;AACrD,6BAAmC;AACnC,8EAAwD;AACxD,sEAAgE;AAChE,mEAA6C;AAE7C,mDAA8B;AAc9B;;GAEG;AACI,IAAM,kBAAkB,GAAsC,UAAC,EAKrE;QAJC,wBAAoC,EAApC,gBAAgB,mBAAG,iBAAiB,KAAA,EACpC,cAAiC,EAAjC,MAAM,mBAAG,eAAK,CAAC,kBAAkB,KAAA,EACjC,QAAQ,cAAA,EACR,aAAa,mBAAA;IAGb,IAAM,mBAAmB,GAAG,UAAC,IAAY,EAAE,KAAU;QACnD,IAAI,OAAO,gBAAsB,aAAa,CAAC,CAAC;QAChD,OAAO,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACtB,IAAI,QAAQ,EAAE;YACZ,QAAQ,CAAC,OAAO,CAAC,CAAC;SACnB;IACH,CAAC,CAAC;IAEF,IAAM,aAAa,GAAG,UAAC,KAAa;QAClC,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACtC,CAAC,CAAC;IAEF,IAAM,gBAAgB,GAAG,UAAC,QAAa;QACrC,mBAAmB,CAAC,UAAU,EAAE,QAAkB,CAAC,CAAC;IACtD,CAAC,CAAC;IAEF,IAAM,aAAa,GAAG,UAAC,KAAa;QAClC,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACtC,CAAC,CAAC;IAEF,IAAM,eAAe,GAAG,UAAC,OAAsB;QAC7C,mBAAmB,CAAC,SAAS,EAAE,OAAiB,CAAC,CAAC;IACpD,CAAC,CAAC;IAEF,OAAO,CACL;QACE,oBAAC,WAAI,CAAC,IAAI,IACR,KAAK,EAAE,MAAM,CAAC,UAAU;YAExB,oBAAC,oBAAU,IACT,KAAK,EAAE,IAAA,aAAI,EAAC,aAAa,EAAE,OAAO,CAAW,EAC7C,QAAQ,EAAE,aAAa,GACvB,CACQ;QACZ,oBAAC,WAAI,CAAC,IAAI,IACR,KAAK,EAAE,MAAM,CAAC,aAAa;YAE3B,oBAAC,qBAAW,IACV,MAAM,EAAE,IAAA,aAAI,EAAC,aAAa,EAAE,UAAU,CAAW,EACjD,QAAQ,EAAE,gBAAgB,GAC1B,CACQ;QACZ,oBAAC,WAAI,CAAC,IAAI,IACR,KAAK,EAAE,MAAM,CAAC,UAAU;YAExB,oBAAC,YAAK,IACJ,SAAS,EAAC,wCAAwC,EAClD,YAAY,EAAE,IAAA,aAAI,EAAC,aAAa,EAAE,OAAO,CAAW,EACpD,KAAK,EAAE,IAAA,aAAI,EAAC,aAAa,EAAE,OAAO,CAAW,EAC7C,WAAW,EAAE,gBAAgB,EAC7B,QAAQ,EAAE,UAAC,GAAQ;oBACjB,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAClC,CAAC,GACD,CACQ;QACZ,oBAAC,WAAI,CAAC,IAAI,IACR,KAAK,EAAE,MAAM,CAAC,YAAY;YAE1B,oBAAC,sBAAY,IACX,OAAO,EAAE,IAAA,aAAI,EAAC,aAAa,EAAE,SAAS,CAAW,EACjD,QAAQ,EAAE,eAAe,GACzB,CACQ,CACR,CACP,CAAC;AACJ,CAAC,CAAC;AAxEW,QAAA,kBAAkB,sBAwE7B;AAEF,kBAAe,IAAA,wBAAQ,EAAC,0BAAkB,EAAE,oBAAoB,CAAC,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\nimport { ColorMapEntry } from 'geostyler-style';\nimport ColorField from '../ColorField/ColorField';\nimport OffsetField from '../OffsetField/OffsetField';\nimport { Input, Form } from 'antd';\nimport OpacityField from '../OpacityField/OpacityField';\nimport { localize } from '../../../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../../../locale/en_US';\n\nimport _get from 'lodash/get';\nimport { GeoStylerLocale } from '../../../../locale/locale';\n\ninterface ColorMapEntryFieldDefaultProps {\n  labelPlaceholder: string;\n  locale: GeoStylerLocale['ColorMapEntryField'];\n}\n\n// non default props\nexport interface ColorMapEntryFieldProps extends Partial<ColorMapEntryFieldDefaultProps> {\n  onChange?: (colorMapEntry: ColorMapEntry) => void;\n  colorMapEntry?: ColorMapEntry;\n}\n\n/**\n * ColorMapEntry Field\n */\nexport const ColorMapEntryField: React.FC<ColorMapEntryFieldProps> = ({\n  labelPlaceholder = 'Color Map Label',\n  locale = en_US.ColorMapEntryField,\n  onChange,\n  colorMapEntry\n}) => {\n\n  const updateColorMapEntry = (prop: string, value: any) => {\n    let updated: ColorMapEntry = {...colorMapEntry};\n    updated[prop] = value;\n    if (onChange) {\n      onChange(updated);\n    }\n  };\n\n  const onColorChange = (color: string) => {\n    updateColorMapEntry('color', color);\n  };\n\n  const onQuantityChange = (quantity: any) => {\n    updateColorMapEntry('quantity', quantity as number);\n  };\n\n  const onLabelChange = (label: string) => {\n    updateColorMapEntry('label', label);\n  };\n\n  const onOpacityChange = (opacity: number|string) => {\n    updateColorMapEntry('opacity', opacity as number);\n  };\n\n  return (\n    <div>\n      <Form.Item\n        label={locale.colorLabel}\n      >\n        <ColorField\n          color={_get(colorMapEntry, 'color') as string}\n          onChange={onColorChange}\n        />\n      </Form.Item>\n      <Form.Item\n        label={locale.quantityLabel}\n      >\n        <OffsetField\n          offset={_get(colorMapEntry, 'quantity') as number}\n          onChange={onQuantityChange}\n        />\n      </Form.Item>\n      <Form.Item\n        label={locale.labelLabel}\n      >\n        <Input\n          className=\"editor-field colormapentry-label-field\"\n          defaultValue={_get(colorMapEntry, 'label') as string}\n          value={_get(colorMapEntry, 'label') as string}\n          placeholder={labelPlaceholder}\n          onChange={(evt: any) => {\n            onLabelChange(evt.target.value);\n          }}\n        />\n      </Form.Item>\n      <Form.Item\n        label={locale.opacityLabel}\n      >\n        <OpacityField\n          opacity={_get(colorMapEntry, 'opacity') as number}\n          onChange={onOpacityChange}\n        />\n      </Form.Item>\n    </div>\n  );\n};\n\nexport default localize(ColorMapEntryField, 'ColorMapEntryField');\n"]}