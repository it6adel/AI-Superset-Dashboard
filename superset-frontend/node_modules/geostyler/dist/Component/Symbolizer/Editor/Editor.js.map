{"version":3,"file":"Editor.js","sourceRoot":"","sources":["../../../../src/Component/Symbolizer/Editor/Editor.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React from 'react';\n\nimport {\n  Symbolizer,\n  SymbolizerKind\n} from 'geostyler-style';\n\nimport MarkEditor from '../MarkEditor/MarkEditor';\nimport LineEditor from '../LineEditor/LineEditor';\nimport FillEditor from '../FillEditor/FillEditor';\nimport TextEditor from '../TextEditor/TextEditor';\n\nimport './Editor.less';\n\nimport 'ol/ol.css';\nimport { Data } from 'geostyler-data';\n\nimport _cloneDeep from 'lodash/cloneDeep';\n\nimport KindField from '../Field/KindField/KindField';\nimport IconEditor, { IconEditorProps } from '../IconEditor/IconEditor';\nimport SymbolizerUtil from '../../../Util/SymbolizerUtil';\nimport { IconLibrary } from '../IconSelector/IconSelector';\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../../locale/en_US';\nimport RasterEditor from '../RasterEditor/RasterEditor';\nimport DataUtil from '../../../Util/DataUtil';\nimport { CompositionContext, Compositions } from '../../../context/CompositionContext/CompositionContext';\nimport CompositionUtil from '../../../Util/CompositionUtil';\nimport { Form } from 'antd';\nimport { GeoStylerLocale } from '../../../locale/locale';\n\n// default props\ninterface EditorDefaultProps {\n  locale: GeoStylerLocale['SymbolizerEditor'];\n}\n\n// non default props\nexport interface EditorProps extends Partial<EditorDefaultProps> {\n  symbolizer: Symbolizer;\n  internalDataDef?: Data;\n  iconEditorProps?: Partial<IconEditorProps>;\n  onSymbolizerChange?: (symbolizer: Symbolizer) => void;\n  iconLibraries?: IconLibrary[];\n  colorRamps?: {\n    [name: string]: string[];\n  };\n}\n\nconst COMPONENTNAME = 'SymbolizerEditor';\n\nexport const Editor: React.FC<EditorProps> = ({\n  locale = en_US.SymbolizerEditor,\n  symbolizer,\n  internalDataDef,\n  iconEditorProps,\n  onSymbolizerChange,\n  iconLibraries,\n  colorRamps\n}) => {\n\n  /**\n   * Get the appropriate Editor UI for a certain style.\n   *\n   * Also handles the customisation of sub-components via CompositionContext.\n   */\n  const getUiForSymbolizer = (composition: Compositions): React.ReactNode => {\n    switch (symbolizer.kind) {\n      case 'Mark':\n        return (\n          CompositionUtil.handleComposition({\n            composition,\n            path: 'Editor.markEditor',\n            onChange: onSymbolizerChange,\n            onChangeName: 'onSymbolizerChange',\n            propName: 'symbolizer',\n            propValue: symbolizer,\n            defaultElement: (\n              <MarkEditor\n                symbolizer={symbolizer}\n              />\n            )\n          })\n        );\n      case 'Icon':\n        return (\n          CompositionUtil.handleComposition({\n            composition,\n            path: 'Editor.iconEditor',\n            onChange: onSymbolizerChange,\n            onChangeName: 'onSymbolizerChange',\n            propName: 'symbolizer',\n            propValue: symbolizer,\n            defaultElement: (\n              <IconEditor\n                symbolizer={symbolizer}\n                iconLibraries={iconLibraries}\n                {...iconEditorProps}\n              />\n            )\n          })\n        );\n      case 'Line':\n        return (\n          CompositionUtil.handleComposition({\n            composition,\n            path: 'Editor.lineEditor',\n            onChange: onSymbolizerChange,\n            onChangeName: 'onSymbolizerChange',\n            propName: 'symbolizer',\n            propValue: symbolizer,\n            defaultElement: (\n              <LineEditor\n                symbolizer={symbolizer}\n              />\n            )\n          })\n        );\n      case 'Fill':\n        return (\n          CompositionUtil.handleComposition({\n            composition,\n            path: 'Editor.fillEditor',\n            onChange: onSymbolizerChange,\n            onChangeName: 'onSymbolizerChange',\n            propName: 'symbolizer',\n            propValue: symbolizer,\n            defaultElement: (\n              <FillEditor\n                symbolizer={symbolizer}\n              />\n            )\n          })\n        );\n      case 'Text':\n        return (\n          CompositionUtil.handleComposition({\n            composition,\n            path: 'Editor.textEditor',\n            onChange: onSymbolizerChange,\n            onChangeName: 'onSymbolizerChange',\n            propName: 'symbolizer',\n            propValue: symbolizer,\n            defaultElement: (\n              <TextEditor\n                symbolizer={symbolizer}\n                internalDataDef={\n                  internalDataDef && DataUtil.isVector(internalDataDef) ? internalDataDef : undefined\n                }\n              />\n            )\n          })\n        );\n      case 'Raster':\n        return (\n          CompositionUtil.handleComposition({\n            composition,\n            path: 'Editor.rasterEditor',\n            onChange: onSymbolizerChange,\n            onChangeName: 'onSymbolizerChange',\n            propName: 'symbolizer',\n            propValue: symbolizer,\n            defaultElement: (\n              <RasterEditor\n                symbolizer={symbolizer}\n                colorRamps={colorRamps}\n                internalDataDef={\n                  internalDataDef && DataUtil.isRaster(internalDataDef) ? internalDataDef : undefined\n                }\n              />\n            )\n          })\n        );\n      default:\n        return locale.unknownSymbolizerText;\n    }\n  };\n\n  const onKindFieldChange = (kind: SymbolizerKind) => {\n    const newSymbolizer = SymbolizerUtil.generateSymbolizer(kind);\n    onSymbolizerChange(newSymbolizer);\n  };\n\n  return (\n    <CompositionContext.Consumer>\n      {(composition: Compositions) => (\n        <div className=\"gs-symbolizer-editor\" >\n          <Form\n            layout='vertical'\n          >\n            <Form.Item\n              label={locale.kindFieldLabel}\n            >\n              {\n                CompositionUtil.handleComposition({\n                  composition,\n                  path: 'Editor.kindField',\n                  onChange: onKindFieldChange,\n                  propName: 'kind',\n                  propValue: symbolizer.kind,\n                  defaultElement: <KindField />\n                })\n              }\n            </Form.Item>\n            {getUiForSymbolizer(composition)}\n          </Form>\n        </div>\n      )}\n    </CompositionContext.Consumer>\n  );\n};\n\nexport default localize(Editor, COMPONENTNAME);\n"]}