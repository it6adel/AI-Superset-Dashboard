"use strict";
/* Released under the BSD 2-Clause License
 *
 * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Editor = void 0;
var react_1 = __importDefault(require("react"));
var MarkEditor_1 = __importDefault(require("../MarkEditor/MarkEditor"));
var LineEditor_1 = __importDefault(require("../LineEditor/LineEditor"));
var FillEditor_1 = __importDefault(require("../FillEditor/FillEditor"));
var TextEditor_1 = __importDefault(require("../TextEditor/TextEditor"));
require("./Editor.css");
require("ol/ol.css");
var KindField_1 = __importDefault(require("../Field/KindField/KindField"));
var IconEditor_1 = __importDefault(require("../IconEditor/IconEditor"));
var SymbolizerUtil_1 = __importDefault(require("../../../Util/SymbolizerUtil"));
var LocaleWrapper_1 = require("../../LocaleWrapper/LocaleWrapper");
var en_US_1 = __importDefault(require("../../../locale/en_US"));
var RasterEditor_1 = __importDefault(require("../RasterEditor/RasterEditor"));
var DataUtil_1 = __importDefault(require("../../../Util/DataUtil"));
var CompositionContext_1 = require("../../../context/CompositionContext/CompositionContext");
var CompositionUtil_1 = __importDefault(require("../../../Util/CompositionUtil"));
var antd_1 = require("antd");
var COMPONENTNAME = 'SymbolizerEditor';
var Editor = function (_a) {
    var _b = _a.locale, locale = _b === void 0 ? en_US_1.default.SymbolizerEditor : _b, symbolizer = _a.symbolizer, internalDataDef = _a.internalDataDef, iconEditorProps = _a.iconEditorProps, onSymbolizerChange = _a.onSymbolizerChange, iconLibraries = _a.iconLibraries, colorRamps = _a.colorRamps;
    /**
     * Get the appropriate Editor UI for a certain style.
     *
     * Also handles the customisation of sub-components via CompositionContext.
     */
    var getUiForSymbolizer = function (composition) {
        switch (symbolizer.kind) {
            case 'Mark':
                return (CompositionUtil_1.default.handleComposition({
                    composition: composition,
                    path: 'Editor.markEditor',
                    onChange: onSymbolizerChange,
                    onChangeName: 'onSymbolizerChange',
                    propName: 'symbolizer',
                    propValue: symbolizer,
                    defaultElement: (react_1.default.createElement(MarkEditor_1.default, { symbolizer: symbolizer }))
                }));
            case 'Icon':
                return (CompositionUtil_1.default.handleComposition({
                    composition: composition,
                    path: 'Editor.iconEditor',
                    onChange: onSymbolizerChange,
                    onChangeName: 'onSymbolizerChange',
                    propName: 'symbolizer',
                    propValue: symbolizer,
                    defaultElement: (react_1.default.createElement(IconEditor_1.default, __assign({ symbolizer: symbolizer, iconLibraries: iconLibraries }, iconEditorProps)))
                }));
            case 'Line':
                return (CompositionUtil_1.default.handleComposition({
                    composition: composition,
                    path: 'Editor.lineEditor',
                    onChange: onSymbolizerChange,
                    onChangeName: 'onSymbolizerChange',
                    propName: 'symbolizer',
                    propValue: symbolizer,
                    defaultElement: (react_1.default.createElement(LineEditor_1.default, { symbolizer: symbolizer }))
                }));
            case 'Fill':
                return (CompositionUtil_1.default.handleComposition({
                    composition: composition,
                    path: 'Editor.fillEditor',
                    onChange: onSymbolizerChange,
                    onChangeName: 'onSymbolizerChange',
                    propName: 'symbolizer',
                    propValue: symbolizer,
                    defaultElement: (react_1.default.createElement(FillEditor_1.default, { symbolizer: symbolizer }))
                }));
            case 'Text':
                return (CompositionUtil_1.default.handleComposition({
                    composition: composition,
                    path: 'Editor.textEditor',
                    onChange: onSymbolizerChange,
                    onChangeName: 'onSymbolizerChange',
                    propName: 'symbolizer',
                    propValue: symbolizer,
                    defaultElement: (react_1.default.createElement(TextEditor_1.default, { symbolizer: symbolizer, internalDataDef: internalDataDef && DataUtil_1.default.isVector(internalDataDef) ? internalDataDef : undefined }))
                }));
            case 'Raster':
                return (CompositionUtil_1.default.handleComposition({
                    composition: composition,
                    path: 'Editor.rasterEditor',
                    onChange: onSymbolizerChange,
                    onChangeName: 'onSymbolizerChange',
                    propName: 'symbolizer',
                    propValue: symbolizer,
                    defaultElement: (react_1.default.createElement(RasterEditor_1.default, { symbolizer: symbolizer, colorRamps: colorRamps, internalDataDef: internalDataDef && DataUtil_1.default.isRaster(internalDataDef) ? internalDataDef : undefined }))
                }));
            default:
                return locale.unknownSymbolizerText;
        }
    };
    var onKindFieldChange = function (kind) {
        var newSymbolizer = SymbolizerUtil_1.default.generateSymbolizer(kind);
        onSymbolizerChange(newSymbolizer);
    };
    return (react_1.default.createElement(CompositionContext_1.CompositionContext.Consumer, null, function (composition) { return (react_1.default.createElement("div", { className: "gs-symbolizer-editor" },
        react_1.default.createElement(antd_1.Form, { layout: 'vertical' },
            react_1.default.createElement(antd_1.Form.Item, { label: locale.kindFieldLabel }, CompositionUtil_1.default.handleComposition({
                composition: composition,
                path: 'Editor.kindField',
                onChange: onKindFieldChange,
                propName: 'kind',
                propValue: symbolizer.kind,
                defaultElement: react_1.default.createElement(KindField_1.default, null)
            })),
            getUiForSymbolizer(composition)))); }));
};
exports.Editor = Editor;
exports.default = (0, LocaleWrapper_1.localize)(exports.Editor, COMPONENTNAME);
//# sourceMappingURL=Editor.js.map