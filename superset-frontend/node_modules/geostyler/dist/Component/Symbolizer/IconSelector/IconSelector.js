"use strict";
/* Released under the BSD 2-Clause License
 *
 * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.IconSelector = void 0;
var react_1 = __importStar(require("react"));
var antd_1 = require("antd");
var Option = antd_1.Select.Option;
var LocaleWrapper_1 = require("../../LocaleWrapper/LocaleWrapper");
var en_US_1 = __importDefault(require("../../../locale/en_US"));
require("./IconSelector.css");
var COMPONENTNAME = 'IconSelector';
var IconSelector = function (_a) {
    var _b, _c;
    var _d = _a.locale, locale = _d === void 0 ? en_US_1.default.IconSelector : _d, iconLibraries = _a.iconLibraries, selectedIconSrc = _a.selectedIconSrc, onIconSelect = _a.onIconSelect;
    var _e = (0, react_1.useState)(), selectedLibIndex = _e[0], setSelectedLibIndex = _e[1];
    var _f = (0, react_1.useState)(), selectedIcon = _f[0], setSelectedIcon = _f[1];
    var getSelectedIconFromSrc = function (src, newIconLibraries) {
        var libIndex;
        var iconIndex;
        var found = false;
        for (var i = 0; i < newIconLibraries.length; i++) {
            var lib = newIconLibraries[i];
            if (found) {
                break;
            }
            for (var j = 0; j < lib.icons.length; j++) {
                var icon = lib.icons[j];
                if (icon.src === src) {
                    libIndex = i;
                    iconIndex = j;
                    found = true;
                    break;
                }
            }
        }
        return {
            libIndex: libIndex,
            iconIndex: iconIndex
        };
    };
    (0, react_1.useEffect)(function () {
        var selection = {};
        if (selectedIconSrc) {
            selection = getSelectedIconFromSrc(selectedIconSrc, iconLibraries);
        }
        setSelectedLibIndex(selection.libIndex);
        setSelectedIcon(selection);
    }, [selectedIconSrc, iconLibraries]);
    var libChange = function (newLibIndex) {
        setSelectedLibIndex(newLibIndex);
    };
    var getGallery = function (icon, index) {
        var gridClassName = 'gs-icon-selector-grid';
        if (selectedIcon && selectedIcon.libIndex === selectedLibIndex && selectedIcon.iconIndex === index) {
            gridClassName += ' gs-icon-selector-grid-selected';
        }
        return (react_1.default.createElement(antd_1.Card.Grid, { key: index.toString(), className: gridClassName, 
            // @ts-ignore
            onClick: function () {
                if (onIconSelect) {
                    onIconSelect(icon.src);
                }
            } },
            react_1.default.createElement(antd_1.Avatar, { className: "gs-icon-selector-grid-avatar", size: "default", src: icon.src, alt: icon.caption, shape: "square" }),
            react_1.default.createElement(antd_1.Card.Meta, { className: "gs-icon-selector-grid-description", description: icon.caption })));
    };
    return (react_1.default.createElement("div", { className: "gs-icon-selector" },
        react_1.default.createElement("div", { className: "gs-lib-row" },
            react_1.default.createElement("span", { className: "gs-label" }, "".concat(locale.librarySelectLabel, ":")),
            react_1.default.createElement(antd_1.Select, { className: "gs-select", allowClear: false, defaultValue: selectedLibIndex, onChange: libChange }, iconLibraries.map(function (lib, index) {
                return (react_1.default.createElement(Option, { value: index, key: index.toString() }, lib.name));
            }))),
        react_1.default.createElement(antd_1.Card, { className: "gs-icon-selector-card" }, (_c = (_b = iconLibraries[selectedLibIndex]) === null || _b === void 0 ? void 0 : _b.icons) === null || _c === void 0 ? void 0 : _c.map(function (icon, index) {
            return getGallery(icon, index);
        }))));
};
exports.IconSelector = IconSelector;
exports.default = (0, LocaleWrapper_1.localize)(exports.IconSelector, COMPONENTNAME);
//# sourceMappingURL=IconSelector.js.map