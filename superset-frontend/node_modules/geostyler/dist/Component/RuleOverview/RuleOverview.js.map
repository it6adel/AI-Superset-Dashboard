{"version":3,"file":"RuleOverview.js","sourceRoot":"","sources":["../../../src/Component/RuleOverview/RuleOverview.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\n/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2021-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React from 'react';\n\nimport {\n  Rule as GsRule,\n  Symbolizer as GsSymbolizer\n} from 'geostyler-style';\n\nimport './RuleOverview.less';\nimport { Data } from 'geostyler-data';\nimport { localize } from '../LocaleWrapper/LocaleWrapper';\nimport RuleFieldContainer from '../RuleFieldContainer/RuleFieldContainer';\nimport { Divider } from 'antd';\nimport Symbolizers from '../Symbolizers/Symbolizers';\nimport CardViewUtil from '../../Util/CardViewUtil';\nimport FilterOverview from '../FilterOverview/FilterOverview';\nimport { GeoStylerLocale } from '../../locale/locale';\nimport en_US from '../../locale/en_US';\n\n// default props\ninterface RuleOverviewDefaultProps {\n  /** Locale object containing translated text snippets */\n  locale: GeoStylerLocale['RuleOverview'];\n  /** The callback when the style changed. */\n  onRuleChange: (rule: GsRule) => void;\n  /** The callback when a view change (request) was triggered. */\n  onChangeView: (view: string, indices: number[]) => void;\n}\n\n// non default props\nexport interface RuleOverviewProps extends Partial<RuleOverviewDefaultProps> {\n  /** Reference to internal data object (holding schema and example features). */\n  data?: Data;\n  /** A GeoStyler-Style object. */\n  rule: GsRule;\n}\n\nexport const RuleOverview: React.FC<RuleOverviewProps> = ({\n  rule,\n  data,\n  onRuleChange = () => {},\n  onChangeView = () => {},\n  locale = en_US.RuleOverview\n}) => {\n\n  const onNameChange = (name: string) => {\n    const newRule: GsRule = {...rule, name};\n    onRuleChange(newRule);\n  };\n\n  const onMinScaleChange = (minScale: number) => {\n    let newRule: GsRule = {...rule};\n    if (!newRule.scaleDenominator) {\n      newRule.scaleDenominator = {};\n    }\n    newRule.scaleDenominator.min = minScale;\n    onRuleChange(newRule);\n  };\n\n  const onMaxScaleChange = (maxScale: number) => {\n    let newRule: GsRule = {...rule};\n    if (!newRule.scaleDenominator) {\n      newRule.scaleDenominator = {};\n    }\n    newRule.scaleDenominator.max = maxScale;\n    onRuleChange(newRule);\n  };\n\n  const onSymbolizersChange = (symbolizers: GsSymbolizer[]) => {\n    let newRule: GsRule = {...rule, symbolizers};\n    onRuleChange(newRule);\n  };\n\n  const onEditSymbolizerClick = (symbolizerId: number) => {\n    onChangeView(CardViewUtil.SYMBOLIZERVIEW, [symbolizerId]);\n  };\n\n  const onEditFilterClick = () => {\n    onChangeView(CardViewUtil.FILTEREDITVIEW, []);\n  };\n\n  return (\n    <div className='gs-rule-overview'>\n      <h2>{locale.ruleTitle}</h2>\n      <Divider />\n      <RuleFieldContainer\n        name={rule.name}\n        minScale={rule.scaleDenominator?.min}\n        maxScale={rule.scaleDenominator?.max}\n        onNameChange={onNameChange}\n        onMinScaleChange={onMinScaleChange}\n        onMaxScaleChange={onMaxScaleChange}\n        symbolizers={rule.symbolizers}\n        data={data}\n      />\n      <Symbolizers\n        symbolizers={rule.symbolizers}\n        onEditSymbolizerClick={onEditSymbolizerClick}\n        onSymbolizersChange={onSymbolizersChange}\n        data={data}\n      />\n      <FilterOverview\n        filter={rule.filter}\n        onEditFilterClick={onEditFilterClick}\n      />\n    </div>\n  );\n};\n\nexport default localize(RuleOverview, 'RuleOverview');\n"]}