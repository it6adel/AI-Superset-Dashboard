{"version":3,"file":"RuleCard.js","sourceRoot":"","sources":["../../../src/Component/RuleCard/RuleCard.tsx"],"names":[],"mappings":";AAAA,8BAA8B;AAC9B;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;AAEH,gDAA0B;AAK1B,6DAAiD;AAEjD,2BAAyB;AACzB,2EAAqD;AACrD,qEAA+C;AAC/C,iEAA2C;AAE3C,6BAAiD;AACjD,2CAA+E;AACvE,IAAA,IAAI,GAAK,iBAAU,KAAf,CAAgB;AAsBrB,IAAM,QAAQ,GAAG,UAAC,EAOT;;QANd,IAAI,UAAA,EACJ,UAAU,gBAAA,EACV,OAAO,aAAA,EACP,IAAI,UAAA,EACJ,kBAAiB,EAAjB,UAAU,mBAAG,IAAI,KAAA,EACjB,sBAAqB,EAArB,cAAc,mBAAG,IAAI,KAAA;IAGrB,IAAI,MAAM,CAAC;IACX,IAAI,IAAI,IAAI,kBAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;QACxE,MAAM,GAAG,oBAAU,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC;KAC1D;IAED,IAAM,SAAS,GAAG,IAAI,gCAAS,EAAE,CAAC;IAClC,IAAI,GAAG,CAAC;IACR,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;QACrC,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACpC;IAED,OAAO,CACL,8BAAC,WAAI,IACH,SAAS,EAAC,cAAc,EACxB,SAAS,EAAE,IAAI,EACf,OAAO,EAAE,OAAO;QAEhB,8BAAC,kBAAQ,IACP,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,IAAI,EAAE,IAAI,GACV;QACF,8BAAC,cAAO,IAAC,IAAI,EAAC,UAAU,GAAG;QAC3B,uCAAK,SAAS,EAAC,sBAAsB;YACnC,0CAAK,IAAI,CAAC,IAAI,CAAM;YACpB;gBACE;;oBAAK,CAAA,MAAA,IAAI,CAAC,gBAAgB,0CAAE,GAAG,KAAI,GAAG;;oBAAE,8BAAC,qBAAa,OAAG;;oBAAI,CAAA,MAAA,IAAI,CAAC,gBAAgB,0CAAE,GAAG,KAAI,GAAG,CAAI,CAC7F;YACP,wCAAM,SAAS,EAAC,+BAA+B;gBAE3C,UAAU,IAAI,CACZ,8BAAC,IAAI,IAAC,IAAI,EAAC,WAAW;oBACpB,wCAAM,SAAS,EAAC,mBAAmB,aAAS;oBAC3C,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAC/B,CACR;gBAGD,cAAc,IAAI,CAChB,8BAAC,IAAI,IAAC,IAAI,EAAC,WAAW;oBACpB,8BAAC,qBAAa,IAAC,SAAS,EAAC,mBAAmB,GAAG;oBAC9C,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CACvC,CACR,CAEE;YACP,wCAAM,SAAS,EAAC,kBAAkB;gBAE9B,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,MAAM,KAAI,CACrB,8BAAC,IAAI,IAAC,IAAI,EAAC,WAAW;oBACpB,8BAAC,oBAAY,IAAC,SAAS,EAAC,mBAAmB,GAAG,CACzC,CACR;gBAEH,8BAAC,IAAI,IAAC,IAAI,EAAC,WAAW,IAAE,GAAU,CAAQ,CACrC,CACH,CACD,CACR,CAAC;AACJ,CAAC,CAAC;AAnEW,QAAA,QAAQ,YAmEnB;AAEF,kBAAe,gBAAQ,CAAC","sourcesContent":["/* eslint-disable camelcase */\n/* Released under the BSD 2-Clause License\n *\n * Copyright © 2021-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React from 'react';\n\nimport {\n  Rule as GsRule,\n} from 'geostyler-style';\nimport { CqlParser } from 'geostyler-cql-parser';\n\nimport './RuleCard.less';\nimport Renderer from '../Renderer/Renderer/Renderer';\nimport FilterUtil from '../../Util/FilterUtil';\nimport DataUtil from '../../Util/DataUtil';\nimport { Data } from 'geostyler-data';\nimport { Divider, Card, Typography } from 'antd';\nimport { BlockOutlined, FilterFilled, MinusOutlined } from '@ant-design/icons';\nconst { Text } = Typography;\n\n// default props\ninterface RuleCardDefaultProps {\n  /** Display the number of features that match a rule */\n  showAmount: boolean;\n  /** Display the number of features that match more than one rule */\n  showDuplicates: boolean;\n}\n\n// non default props\nexport interface RuleCardProps extends Partial<RuleCardDefaultProps> {\n  /** The rule to display. */\n  rule: GsRule;\n  /** The number of features that are also matched by other rules. */\n  duplicates?: number;\n  /** Reference to internal data object (holding schema and example features). */\n  data?: Data;\n  /** The callback when the card was clicked. */\n  onClick?: () => void;\n}\n\nexport const RuleCard = ({\n  rule,\n  duplicates,\n  onClick,\n  data,\n  showAmount = true,\n  showDuplicates = true\n}: RuleCardProps) => {\n\n  let amount;\n  if (data && DataUtil.isVector(data) && rule.filter && rule.filter.length) {\n    amount = FilterUtil.getMatches(rule.filter, data).length;\n  }\n\n  const cqlParser = new CqlParser();\n  let cql;\n  if (rule.filter && rule.filter.length) {\n    cql = cqlParser.write(rule.filter);\n  }\n\n  return (\n    <Card\n      className='gs-rule-card'\n      hoverable={true}\n      onClick={onClick}\n    >\n      <Renderer\n        symbolizers={rule.symbolizers}\n        data={data}\n      />\n      <Divider type='vertical' />\n      <div className='gs-rule-card-content'>\n        <h2>{rule.name}</h2>\n        <span>\n          <>1:{rule.scaleDenominator?.min || '-'} <MinusOutlined /> 1:{rule.scaleDenominator?.max || '-'}</>\n        </span>\n        <span className='gs-rule-card-content-icon-row'>\n          {\n            showAmount && (\n              <Text type='secondary'>\n                <span className='gs-rule-card-icon'>Σ</span>\n                {amount !== undefined ? amount : '-'}\n              </Text>\n            )\n          }\n          {\n            showDuplicates && (\n              <Text type='secondary'>\n                <BlockOutlined className='gs-rule-card-icon' />\n                {duplicates !== undefined ? duplicates : '-'}\n              </Text>\n            )\n          }\n        </span>\n        <span className='gs-rule-card-cql'>\n          {\n            rule.filter?.length && (\n              <Text type='secondary'>\n                <FilterFilled className='gs-rule-card-icon' />\n              </Text>\n            )\n          }\n          <Text type='secondary'>{cql as any}</Text>\n        </span>\n      </div>\n    </Card>\n  );\n};\n\nexport default RuleCard;\n"]}