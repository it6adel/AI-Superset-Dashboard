"use strict";
/* eslint-disable camelcase */
/* Released under the BSD 2-Clause License
 *
 * Copyright Â© 2021-present, terrestris GmbH & Co. KG and GeoStyler contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RuleCard = void 0;
var react_1 = __importDefault(require("react"));
var geostyler_cql_parser_1 = require("geostyler-cql-parser");
require("./RuleCard.css");
var Renderer_1 = __importDefault(require("../Renderer/Renderer/Renderer"));
var FilterUtil_1 = __importDefault(require("../../Util/FilterUtil"));
var DataUtil_1 = __importDefault(require("../../Util/DataUtil"));
var antd_1 = require("antd");
var icons_1 = require("@ant-design/icons");
var Text = antd_1.Typography.Text;
var RuleCard = function (_a) {
    var _b, _c, _d;
    var rule = _a.rule, duplicates = _a.duplicates, onClick = _a.onClick, data = _a.data, _e = _a.showAmount, showAmount = _e === void 0 ? true : _e, _f = _a.showDuplicates, showDuplicates = _f === void 0 ? true : _f;
    var amount;
    if (data && DataUtil_1.default.isVector(data) && rule.filter && rule.filter.length) {
        amount = FilterUtil_1.default.getMatches(rule.filter, data).length;
    }
    var cqlParser = new geostyler_cql_parser_1.CqlParser();
    var cql;
    if (rule.filter && rule.filter.length) {
        cql = cqlParser.write(rule.filter);
    }
    return (react_1.default.createElement(antd_1.Card, { className: 'gs-rule-card', hoverable: true, onClick: onClick },
        react_1.default.createElement(Renderer_1.default, { symbolizers: rule.symbolizers, data: data }),
        react_1.default.createElement(antd_1.Divider, { type: 'vertical' }),
        react_1.default.createElement("div", { className: 'gs-rule-card-content' },
            react_1.default.createElement("h2", null, rule.name),
            react_1.default.createElement("span", null,
                react_1.default.createElement(react_1.default.Fragment, null,
                    "1:",
                    ((_b = rule.scaleDenominator) === null || _b === void 0 ? void 0 : _b.min) || '-',
                    " ",
                    react_1.default.createElement(icons_1.MinusOutlined, null),
                    " 1:",
                    ((_c = rule.scaleDenominator) === null || _c === void 0 ? void 0 : _c.max) || '-')),
            react_1.default.createElement("span", { className: 'gs-rule-card-content-icon-row' },
                showAmount && (react_1.default.createElement(Text, { type: 'secondary' },
                    react_1.default.createElement("span", { className: 'gs-rule-card-icon' }, "\u03A3"),
                    amount !== undefined ? amount : '-')),
                showDuplicates && (react_1.default.createElement(Text, { type: 'secondary' },
                    react_1.default.createElement(icons_1.BlockOutlined, { className: 'gs-rule-card-icon' }),
                    duplicates !== undefined ? duplicates : '-'))),
            react_1.default.createElement("span", { className: 'gs-rule-card-cql' },
                ((_d = rule.filter) === null || _d === void 0 ? void 0 : _d.length) && (react_1.default.createElement(Text, { type: 'secondary' },
                    react_1.default.createElement(icons_1.FilterFilled, { className: 'gs-rule-card-icon' }))),
                react_1.default.createElement(Text, { type: 'secondary' }, cql)))));
};
exports.RuleCard = RuleCard;
exports.default = exports.RuleCard;
//# sourceMappingURL=RuleCard.js.map