{"version":3,"file":"CodeEditor.js","sourceRoot":"","sources":["../../../src/Component/CodeEditor/CodeEditor.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React, {\n  useCallback,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\n\nimport Editor, { useMonaco } from '@monaco-editor/react';\n\nimport 'blob';\nimport {\n  saveAs\n} from 'file-saver';\n\nimport './CodeEditor.less';\n\nimport {\n  Button,\n  message,\n  Select\n} from 'antd';\nconst Option = Select.Option;\n\nimport {\n  ReadStyleResult,\n  Style as GsStyle,\n  StyleParser,\n  WriteStyleResult\n} from 'geostyler-style';\n\nimport schema from 'geostyler-style/schema.json';\n\nimport _isEqual from 'lodash/isEqual';\n\nimport { localize } from '../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../locale/en_US';\nimport SldStyleParser from 'geostyler-sld-parser';\nimport { SLDUnitsSelect } from '../Symbolizer/SLDUnitsSelect/SLDUnitsSelect';\nimport { usePrevious } from '../../hook/UsePrevious';\nimport ParserFeedback from '../ParserFeedback/ParserFeedback';\nimport { ExclamationCircleTwoTone, WarningTwoTone } from '@ant-design/icons';\nimport { GeoStylerLocale } from '../../locale/locale';\n\n// non default props\nexport interface CodeEditorProps {\n  /** Locale object containing translated text snippets */\n  locale?: GeoStylerLocale['CodeEditor'];\n  /** Delay in ms until onStyleChange will be called */\n  delay?: number;\n  /** Show save button */\n  showSaveButton?: boolean;\n  /** show copy button */\n  showCopyButton?: boolean;\n  /** GeoStyler Style Object to display */\n  style?: GsStyle;\n  /** List of StylerParsers to parse from/to */\n  parsers?: StyleParser[];\n  /** Default parser */\n  defaultParser?: StyleParser;\n  /** The callback method that is triggered when the state changes */\n  onStyleChange?: (rule: GsStyle) => void;\n}\n\nconst MODELPATH = 'geostyler.json'; // associate with our model\nconst SCHEMAURI = schema.$id;\n\nexport const COMPONENTNAME = 'CodeEditor';\n\nexport const CodeEditor: React.FC<CodeEditorProps> = ({\n  defaultParser,\n  delay = 500,\n  locale = en_US.CodeEditor,\n  onStyleChange = () => undefined,\n  parsers = [],\n  showCopyButton = false,\n  showSaveButton = false,\n  style\n}) => {\n\n  const editTimeout = useRef<number>();\n  const [activeParser, setActiveParser] = useState<StyleParser>(defaultParser);\n  const [isSldParser, setIsSldParser] = useState<boolean>(false);\n  const [value, setValue] = useState<string>('');\n  const [writeStyleResult, setWriteStyleResult] = useState<WriteStyleResult>();\n  const [readStyleResult, setReadStyleResult] = useState<ReadStyleResult>();\n  const [showFeedback, setShowFeedback] = useState<boolean>(false);\n  const [hasError, setHasError] = useState<boolean>(false);\n  const previousStyle = usePrevious(style);\n  const previouseParser = usePrevious(activeParser);\n  const monaco = useMonaco();\n\n  useEffect(() => {\n    if (writeStyleResult?.output) {\n      setValue(writeStyleResult.output);\n    }\n  }, [writeStyleResult]);\n\n  useEffect(() => {\n    if (monaco) {\n      monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n        validate: true,\n        schemas: [{\n          uri: SCHEMAURI,\n          fileMatch: [MODELPATH],\n          schema\n        }]\n      });\n    }\n  }, [monaco]);\n\n  const updateValueFromStyle = useCallback((s: GsStyle) => {\n    setHasError(false);\n    setWriteStyleResult(undefined);\n    (new Promise(async() => {\n      if (activeParser) {\n        setWriteStyleResult(await activeParser.writeStyle(s));\n      } else {\n        setValue(JSON.stringify(s, null, 2));\n      }\n    })).catch((err) => {\n      setWriteStyleResult({\n        errors: [err.message]\n      });\n    });\n  }, [activeParser]);\n\n  useEffect(() => {\n    if (!_isEqual(previousStyle, style) || !_isEqual(previouseParser, activeParser) ) {\n      updateValueFromStyle(style);\n    }\n  }, [activeParser, style, updateValueFromStyle, previousStyle, previouseParser]);\n\n  useEffect(() => {\n    setIsSldParser(activeParser?.title.includes('SLD'));\n  }, [activeParser]);\n\n  if (hasError) {\n    return (<h1>An error occurred in the CodeEditor UI.</h1>);\n  }\n\n  const onChange = async(v: string) => {\n    setValue(v);\n    setReadStyleResult(undefined);\n    try {\n      let parsedStyle;\n      if (activeParser) {\n        const result = await activeParser.readStyle(v);\n        setReadStyleResult(result);\n        onStyleChange(result.output);\n      } else {\n        parsedStyle = JSON.parse(v);\n        onStyleChange(parsedStyle);\n      }\n    } catch (err: any) {\n      setReadStyleResult({\n        errors: [err?.message]\n      });\n    }\n  };\n\n  const onParserSelect = (selection: string) => {\n    const parser = parsers.find((p: any) => p.title === selection);\n    setActiveParser(parser);\n  };\n\n  const onUnitSelect = (selection: string) => {\n    if (activeParser) {\n      const parser = activeParser as SldStyleParser;\n      parser.symbolizerUnits = selection;\n      updateValueFromStyle(style);\n    }\n  };\n\n  const handleOnChange = (v?: string) => {\n    clearTimeout(editTimeout.current);\n    editTimeout.current = window.setTimeout(\n      () => {\n        onChange(v);\n      },\n      delay\n    );\n  };\n\n  let parserOptions = [\n    <Option key=\"GeoStyler Style\" value=\"GeoStyler Style\" >Geostyler Style</Option>\n  ];\n  const additionalOptions = parsers.map((parser: any) => {\n    const title = parser.title;\n    return <Option key={title} value={title}>{title}</Option>;\n  });\n  parserOptions = [...parserOptions, ...additionalOptions];\n\n  const onDownloadButtonClick = () => {\n    if (style) {\n      let fileName = style.name;\n      let type = 'application/json;charset=utf-8';\n      if (isSldParser) {\n        type = 'text/xml;charset=utf-8';\n        fileName += '.sld';\n      }\n      const blob = new Blob([value], {type});\n      saveAs(blob, fileName);\n    }\n  };\n\n  /**\n   * Copies the a value to the clipboard.\n   * Credits: https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\n   *\n   * @param {string} str The string to copy to the clipboard.\n   */\n  const copyToClipboard = (str: string) => {\n    const el = document.createElement('textarea');\n    el.value = str;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    message.info(locale.styleCopied);\n    if (selected) {\n      document.getSelection().removeAllRanges();\n      document.getSelection().addRange(selected);\n    }\n  };\n\n  const onCopyButtonClick = () => {\n    copyToClipboard(value);\n  };\n\n  const toggleFeedback = () => {\n    setShowFeedback(!showFeedback);\n  };\n\n  const parserHasUnitSelect = isSldParser && activeParser && (activeParser as SldStyleParser).sldVersion !== '1.0.0';\n\n  const writeStyleHasFeedback = writeStyleResult?.errors ||\n    writeStyleResult?.warnings ||\n    writeStyleResult?.unsupportedProperties;\n  const readStyleHasFeedback = readStyleResult?.errors ||\n    readStyleResult?.warnings ||\n    readStyleResult?.unsupportedProperties;\n  const hasAlerts = writeStyleResult?.errors || readStyleResult?.errors;\n  const hasWarnings = readStyleHasFeedback || writeStyleHasFeedback && (!hasAlerts);\n\n  const alertExtraClass = showFeedback ? 'feedback-visible' : 'feedback-hidden';\n\n  return (\n    <div className=\"gs-code-editor\">\n      <div className=\"gs-code-editor-toolbar\" >\n        {locale.formatSelectLabel}: <Select\n          className=\"gs-code-editor-format-select\"\n          onSelect={onParserSelect}\n          value={activeParser ? activeParser.title : 'GeoStyler Style'}\n        >\n          {parserOptions}\n        </Select>\n        {\n          parserHasUnitSelect &&\n            <SLDUnitsSelect changeHandler={onUnitSelect} />\n        }\n      </div>\n      <Editor\n        className=\"gs-code-editor-monaco\"\n        value={value}\n        path={isSldParser ? undefined : MODELPATH}\n        language={isSldParser ? 'xml' : 'json'}\n        onChange={handleOnChange}\n      />\n      <div className={`gs-code-editor-feedback ${alertExtraClass}`}>\n        {\n          (writeStyleHasFeedback) &&\n          <div className='write-feedback'>\n            <span>{`${locale.writeFeedback} ${activeParser?.title}`}</span>\n            <ParserFeedback feedback={writeStyleResult} />\n          </div>\n        }\n        {\n          (readStyleHasFeedback) &&\n            <div className='read-feedback'>\n              <span>{`${locale.readFeedback} ${activeParser?.title}`}</span>\n              <ParserFeedback feedback={readStyleResult} />\n            </div>\n        }\n      </div>\n      <div className=\"gs-code-editor-bottombar\">\n        <div className='left-items'>\n          { hasAlerts && <WarningTwoTone twoToneColor=\"#ff4d4f\" onClick={toggleFeedback} /> }\n          { hasWarnings && <ExclamationCircleTwoTone twoToneColor=\"#faad14\" onClick={toggleFeedback} /> }\n        </div>\n        <div className='center-items'>\n          {\n            showCopyButton &&\n            <Button\n              className=\"gs-code-editor-copy-button\"\n              type=\"primary\"\n              onClick={onCopyButtonClick}\n            >\n              {locale.copyButtonLabel}\n            </Button>\n          }\n          {\n            showSaveButton &&\n            <Button\n              className=\"gs-code-editor-download-button\"\n              type=\"primary\"\n              onClick={onDownloadButtonClick}\n            >\n              {locale.downloadButtonLabel}\n            </Button>\n          }\n        </div>\n        <div className='right-items'>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default localize(CodeEditor, COMPONENTNAME);\n"]}