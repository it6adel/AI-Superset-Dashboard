{"version":3,"file":"NumberFilterField.js","sourceRoot":"","sources":["../../../../src/Component/Filter/NumberFilterField/NumberFilterField.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,2CAA+B;AAC/B,6BAAyC;AAEzC,mEAA6D;AAC7D,gEAA0C;AAoB1C;;GAEG;AACI,IAAM,iBAAiB,GAAqC,UAAC,EAOnE;QANC,cAAgC,EAAhC,MAAM,mBAAG,eAAK,CAAC,iBAAiB,KAAA,EAChC,KAAK,WAAA,EACL,sBAA0B,EAA1B,cAAc,mBAAG,SAAS,KAAA,EAC1B,YAAkB,EAAlB,IAAI,mBAAG,MAAM,CAAC,IAAI,KAAA,EAClB,aAAa,mBAAA,EACb,IAAI,UAAA;IAGJ,IAAM,OAAO,GAAG,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IAE3D,OAAO,CACL,6BACE,SAAS,EAAC,wBAAwB,EAClC,SAAS,EAAE,IAAI,EACf,WAAW,EAAE,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,cAAc,EAAE,EAAlB,CAAkB;QAEtC,oBAAC,WAAI,CAAC,IAAI,IACR,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,KAAK,EAAE,KAAK,EACZ,cAAc,EAAE,cAAc,EAC9B,IAAI,EAAE,OAAO,EACb,WAAW,EAAE,IAAI;YAEjB,oBAAC,kBAAW,IACV,IAAI,EAAE,IAAI,EACV,YAAY,EAAE,KAAK,EACnB,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,aAAa,EACvB,WAAW,EAAE,MAAM,CAAC,WAAW,GAC/B,CACQ,CACR,CACP,CAAC;AACJ,CAAC,CAAC;AAlCW,QAAA,iBAAiB,qBAkC5B;AAEF,kBAAe,IAAA,wBAAQ,EAAC,yBAAiB,EAAE,mBAAmB,CAAC,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\nimport { InputNumber, Form } from 'antd';\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../../locale/en_US';\nimport { GeoStylerLocale } from '../../../locale/locale';\n\n// default props\ninterface NumberFilterFieldDefaultProps {\n  locale: GeoStylerLocale['NumberFilterField'];\n  /** Initial value set to the field */\n  value: number | undefined;\n  /** Validation status */\n  validateStatus: 'success' | 'warning' | 'error' | 'validating';\n  /** Element to show a help text */\n  help: React.ReactNode;\n}\n// non default props\nexport interface NumberFilterFieldProps extends Partial<NumberFilterFieldDefaultProps> {\n  /** Callback for onChange */\n  onValueChange?: ((newValue: number) => void);\n  size?: 'large' | 'middle' | 'small';\n}\n\n/**\n * Input field for a numeric filter value.\n */\nexport const NumberFilterField: React.FC<NumberFilterFieldProps> = ({\n  locale = en_US.NumberFilterField,\n  value,\n  validateStatus = 'success',\n  help = locale.help,\n  onValueChange,\n  size\n}) => {\n\n  const helpTxt = validateStatus !== 'success' ? help : null;\n\n  return (\n    <div\n      className=\"gs-number-filter-field\"\n      draggable={true}\n      onDragStart={(e) => e.preventDefault()}\n    >\n      <Form.Item\n        label={locale.label}\n        colon={false}\n        validateStatus={validateStatus}\n        help={helpTxt}\n        hasFeedback={true}\n      >\n        <InputNumber\n          size={size}\n          defaultValue={value}\n          value={value}\n          onChange={onValueChange}\n          placeholder={locale.placeholder}\n        />\n      </Form.Item>\n    </div>\n  );\n};\n\nexport default localize(NumberFilterField, 'NumberFilterField');\n"]}