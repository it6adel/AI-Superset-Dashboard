{"version":3,"file":"TextFilterField.js","sourceRoot":"","sources":["../../../../src/Component/Filter/TextFilterField/TextFilterField.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\nimport { Input, Form, AutoComplete, InputRef } from 'antd';\nimport { Data } from 'geostyler-data';\n\nimport _get from 'lodash/get';\nimport { Feature } from 'geojson';\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../../locale/en_US';\nimport { GeoStylerLocale } from '../../../locale/locale';\n\nimport './TextFilterField.less';\n\n// default props\ninterface TextFilterFieldDefaultProps {\n  locale: GeoStylerLocale['TextFilterField'];\n  /** Label for this field */\n  label: string;\n  /** The default text to place into the empty field */\n  placeholder: string;\n  /** Initial value set to the field */\n  value: string | undefined;\n  /** Validation status */\n  validateStatus: 'success' | 'warning' | 'error' | 'validating';\n  /** Element to show a help text */\n  help: React.ReactNode;\n}\n// non default props\nexport interface TextFilterFieldProps extends Partial<TextFilterFieldDefaultProps> {\n  /** Reference to internal data object (holding schema and example features) */\n  internalDataDef?: Data;\n  /** Callback function for onChange */\n  onValueChange?: (newValue: string) => void;\n  /** The selected attribute name */\n  selectedAttribute?: string;\n  size?: 'large' | 'middle' | 'small';\n}\n\n/**\n * Input field for a textual filter value.\n */\nexport const TextFilterField: React.FC<TextFilterFieldProps> = ({\n  locale = en_US.TextFilterField,\n  value,\n  validateStatus = 'success',\n  help = locale.help,\n  internalDataDef,\n  onValueChange,\n  selectedAttribute,\n  size\n}) => {\n  const inputRef = React.useRef<InputRef>();\n  const [inputSelectionStart, setInputSelectionStart] = React.useState<number>(0);\n  const [inputSelectionEnd, setInputSelectionEnd] = React.useState<number>(0);\n\n  React.useLayoutEffect(() => {\n    if (inputRef && inputRef.current && inputRef.current.input) {\n      inputRef.current.input.selectionStart = inputSelectionStart;\n      inputRef.current.input.selectionEnd = inputSelectionEnd;\n    }\n  }, [inputSelectionStart, inputSelectionEnd, value]);\n\n  /**\n   * Extracts the text value of the event object of 'onChange'\n   * and passes it to the passed in 'onValueChange' handler.\n   */\n  const onInputChange = (e: any) => {\n    if (onValueChange) {\n      onValueChange(e.target.value);\n    }\n  };\n\n  const onAutoCompleteChange = (text: string) => {\n    if (onValueChange) {\n      onValueChange(text);\n    }\n  };\n\n  const helpTxt = validateStatus !== 'success' ? help : null;\n\n  let sampleValues: string[] = [];\n  if (internalDataDef && 'exampleFeatures' in internalDataDef) {\n    const features = internalDataDef?.exampleFeatures?.features;\n    features.forEach((feature: Feature) => {\n      const sampleValue = _get(feature, `properties[${selectedAttribute}]`);\n      if (sampleValue && sampleValues.indexOf(sampleValue) === -1) {\n        sampleValues.push(sampleValue);\n      }\n    });\n  }\n\n  return (\n    <div className=\"gs-text-filter-field\">\n      <Form.Item\n        label={locale.label}\n        colon={false}\n        validateStatus={validateStatus}\n        help={helpTxt}\n        hasFeedback={true}\n      >\n        {\n          sampleValues.length > 0 ?\n            <AutoComplete\n              size={size}\n              value={value}\n              onChange={onAutoCompleteChange}\n              placeholder={locale.placeholder}\n              dataSource={sampleValues}\n              filterOption={(val: string|number, option: any) => {\n                if (typeof val !== 'string') {\n                  return false;\n                }\n                return option.key.toLowerCase().includes(val.toLowerCase());\n              }}\n            />\n            :\n            <Input\n              size={size}\n              ref={inputRef}\n              draggable={true}\n              onDragStart={(e) => e.preventDefault()}\n              value={value}\n              onChange={(event) => {\n                onInputChange(event);\n                // save the cursor position to restore it in\n                // componentDidUpdate, otherwise it jumps to the end while typing\n                const cursorStart = event.target.selectionStart;\n                const cursorEnd = event.target.selectionEnd;\n                setInputSelectionStart(cursorStart);\n                setInputSelectionEnd(cursorEnd);\n              }}\n              placeholder={locale.placeholder}\n            />\n        }\n      </Form.Item>\n    </div>\n  );\n};\n\nexport default localize(TextFilterField, 'TextFilterField');\n"]}