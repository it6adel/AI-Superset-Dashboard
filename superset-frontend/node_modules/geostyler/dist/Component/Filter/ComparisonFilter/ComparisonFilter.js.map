{"version":3,"file":"ComparisonFilter.js","sourceRoot":"","sources":["../../../../src/Component/Filter/ComparisonFilter/ComparisonFilter.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/member-ordering */\n/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\nimport AttributeCombo from '../AttributeCombo/AttributeCombo';\nimport OperatorCombo from '../OperatorCombo/OperatorCombo';\nimport TextFilterField from '../TextFilterField/TextFilterField';\nimport NumberFilterField from '../NumberFilterField/NumberFilterField';\n\nimport {\n  ComparisonFilter as GsComparisonFilter,\n  ComparisonOperator,\n  PropertyType\n} from 'geostyler-style';\n\nimport './ComparisonFilter.less';\nimport BoolFilterField from '../BoolFilterField/BoolFilterField';\n\nimport {\n  Data as Data\n} from 'geostyler-data';\n\nimport _get from 'lodash/get';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEmpty from 'lodash/isEmpty';\nimport _isString from 'lodash/isString';\n\ntype ValidationResult = {\n  isValid: boolean;\n  errorMsg: string;\n};\n\ninterface Validators {\n  attribute: (attrName: string) => boolean;\n  operator: (operator: string) => boolean;\n  value: (value: PropertyType, internalDataDef?: Data, selectedAttribute?: string)\n    => ValidationResult;\n}\n\n// default props\nexport interface ComparisonFilterProps {\n  /** Initial comparison filter object */\n  filter?: GsComparisonFilter;\n  /** Set true to hide the attribute's type in the AttributeCombo select options */\n  hideAttributeType?: boolean;\n  /**\n   * A custom filter function which is passed each attribute.\n   * Should return true to accept each attribute or false to reject it.\n   */\n  attributeNameFilter?: (attributeName: string) => boolean;\n  /** Mapping function for attribute names of underlying AttributeCombo */\n  attributeNameMappingFunction?: (originalAttributeName: string) => string;\n  /** Label for the underlying OperatorCombo */\n  operatorLabel?: string;\n  /** Show title of selected item in underlying OperatorCombo */\n  showOperatorTitles?: boolean;\n  /** Placeholder for the underlying OperatorCombo */\n  operatorPlaceholderString?: string;\n  /** Validation help text for the underlying OperatorCombo */\n  operatorValidationHelpString?: string;\n  /** Mapping function for operator names of underlying OperatorCombo */\n  operatorNameMappingFunction?: (originalOperatorName: string) => string;\n  /** Mapping function for operator title in underlying OperatorCombo */\n  operatorTitleMappingFunction?: (originalOperatorName: string) => string;\n  /** Object aggregating validation functions for attribute, operator and value */\n  validators?: Validators;\n  /** Show ui in micro mode. Which disables labels etc. */\n  microUI?: boolean;\n  /** Reference to internal data object (holding schema and example features) */\n  internalDataDef?: Data;\n  /** Callback function for onFilterChange */\n  onFilterChange?: ((compFilter: GsComparisonFilter) => void);\n}\n\ninterface ValidationStatus {\n  attribute: 'success' | 'warning' | 'error' | 'validating';\n  operator: 'success' | 'warning' | 'error' | 'validating';\n  value: 'success' | 'warning' | 'error' | 'validating';\n}\n\nexport const ComparisonFilterDefaultValidator = (\n  newValue: PropertyType,\n  internalDataDef: Data,\n  selectedAttribute: string\n): ValidationResult => {\n\n  let isValid = true;\n  let errorMsg = '';\n  // read out attribute type\n  const attrType = _get(internalDataDef, `schema.properties[${selectedAttribute}].type`);\n\n  switch (attrType) {\n    case 'number':\n      // detect min / max from schema\n      const minVal = _get(internalDataDef, `schema.properties[${selectedAttribute}].minimum`);\n      const maxVal = _get(internalDataDef, `schema.properties[${selectedAttribute}].maximum`);\n\n      if (!isNaN(minVal) && !isNaN(maxVal)) {\n        if (typeof newValue !== 'number') {\n          isValid = false;\n          errorMsg = 'Please enter a number';\n        } else if (newValue < minVal) {\n          isValid = false;\n          errorMsg = 'Minimum Value is ' + minVal;\n        } else if (newValue > maxVal) {\n          isValid = false;\n          errorMsg = 'Maximum Value is ' + maxVal;\n        }\n      }\n      break;\n    default:\n      break;\n  }\n\n  return {\n    isValid: isValid,\n    errorMsg: errorMsg\n  };\n};\n\nconst operatorsMap = {\n  'string': ['==', '*=', '!='],\n  'number': ['==', '!=', '<', '<=', '>', '>=', '<=x<='],\n  'boolean': ['==', '!=']\n};\n\n/**\n * UI for a ComparisonFilter consisting of\n *\n *   - A combo to select the attribute\n *   - A combo to select the operator\n *   - An input field for the value\n */\nexport const ComparisonFilter: React.FC<ComparisonFilterProps> = ({\n  attributeNameFilter = () => true,\n  attributeNameMappingFunction = n => n,\n  filter = ['==', '', null],\n  hideAttributeType = false,\n  internalDataDef,\n  microUI = false,\n  onFilterChange,\n  operatorLabel,\n  operatorNameMappingFunction = n => n,\n  operatorPlaceholderString,\n  operatorTitleMappingFunction = t => t,\n  operatorValidationHelpString,\n  showOperatorTitles = true,\n  validators = {\n    attribute: attributeName => !_isEmpty(attributeName),\n    operator: operatorName => !_isEmpty(operatorName),\n    value: ComparisonFilterDefaultValidator\n  }\n}) => {\n\n  /**\n   * Handler function, which is executed, when to underlying filter attribute changes.\n   *\n   * Changes the input field for the filter value and stores the appropriate attribute name as member.\n   */\n  const onAttributeChange = (newAttrName: string) => {\n    let newFilter = _cloneDeep(filter);\n    newFilter[1] = newAttrName;\n    if (onFilterChange) {\n      onFilterChange(newFilter);\n    }\n  };\n\n  /**\n   * Handler function, which is executed, when to underlying filter operator changes.\n   *\n   * Stores the appropriate operator as member.\n   */\n  const onOperatorChange = (newOperator: ComparisonOperator) => {\n    let newFilter = _cloneDeep(filter);\n    newFilter[0] = newOperator;\n    if (newOperator !== '<=x<=' && newFilter.length > 3) {\n      newFilter.splice(3, 1);\n    }\n    if (newOperator === '<=x<=' && !newFilter[3]) {\n      newFilter[3] = 0;\n    }\n    if (onFilterChange) {\n      onFilterChange(newFilter);\n    }\n  };\n\n  /**\n   * Handler function, which is executed, when to underlying filter value changes.\n   *\n   * Stores the appropriate filter value as member.\n   */\n  const onValueChange = (newValue: string | number | boolean, filterIndex = 2) => {\n    let newFilter = _cloneDeep(filter);\n    newFilter[filterIndex] = newValue;\n    if (onFilterChange) {\n      onFilterChange(newFilter);\n    }\n  };\n\n  // TODO: implement strategy to handle FunctionFilter\n  const attribute = _isString(filter[1]) ? filter[1] : undefined;\n  const attributeType = attribute ? internalDataDef?.schema?.properties[attribute]?.type : undefined;\n  const operator = filter[0];\n  const value = filter[2];\n  const valueValidation = validators.value(value, internalDataDef, attribute);\n  const valueValidationHelpString = valueValidation.errorMsg;\n  const allowedOperators = attributeType ? operatorsMap[attributeType] : undefined;\n  const isNumberBetweenComparison = operator === '<=x<=';\n  const isNumberComparison = attributeType === 'number';\n  const isBooleanComparison = attributeType === 'boolean';\n  const isTextComparison = !isNumberBetweenComparison && !isNumberComparison && !isBooleanComparison;\n  const hasFilter = filter && Array.isArray(filter);\n\n  const validateStatus: ValidationStatus = {\n    attribute: hasFilter && validators.attribute(attribute) ? 'success' : 'error',\n    operator: hasFilter && validators.operator(operator) ? 'success' : 'error',\n    value: hasFilter && valueValidation.isValid ? 'success' : 'error'\n  };\n\n  function getAttributeCombo(filterIndex = 1) {\n    const size = microUI ? 'small' : undefined;\n    let val: string;\n    if (filter) {\n      val = filter[filterIndex] as string;\n    }\n    return <AttributeCombo\n      size={size}\n      value={val}\n      internalDataDef={internalDataDef}\n      onAttributeChange={onAttributeChange}\n      attributeNameFilter={attributeNameFilter}\n      attributeNameMappingFunction={attributeNameMappingFunction}\n      validateStatus={validateStatus.attribute}\n      hideAttributeType={hideAttributeType}\n    />;\n  }\n\n  function getNumberField(filterIndex = 2) {\n    const size = microUI ? 'small' : undefined;\n    let val: number;\n    if (filter) {\n      val = filter[filterIndex] as number;\n    }\n    return <NumberFilterField\n      size={size}\n      value={val}\n      onValueChange={(newValue) => onValueChange(newValue, filterIndex)}\n      validateStatus={validateStatus.value}\n      help={valueValidationHelpString}\n    />;\n  }\n\n  function getTextField(filterIndex = 2) {\n    const size = microUI ? 'small' : undefined;\n    let val: string;\n    if (filter) {\n      val = filter[filterIndex] as string;\n    }\n    return <TextFilterField\n      size={size}\n      value={val}\n      internalDataDef={internalDataDef}\n      selectedAttribute={attribute}\n      onValueChange={onValueChange}\n      validateStatus={validateStatus.value}\n      help={valueValidationHelpString}\n    />;\n  }\n\n  function getOperatorCombo(filterIndex = 0) {\n    const size = microUI ? 'small' : undefined;\n    let val: ComparisonOperator;\n    if (filter) {\n      val = filter[filterIndex] as ComparisonOperator;\n    }\n    return <OperatorCombo\n      size={size}\n      value={val}\n      onOperatorChange={onOperatorChange}\n      operators={allowedOperators}\n      operatorNameMappingFunction={operatorNameMappingFunction}\n      placeholder={operatorPlaceholderString}\n      label={operatorLabel}\n      validateStatus={validateStatus.operator}\n      help={operatorValidationHelpString}\n      operatorTitleMappingFunction={operatorTitleMappingFunction}\n      showTitles={showOperatorTitles}\n    />;\n  }\n\n  function getBooleanField(filterIndex = 2) {\n    const size = microUI ? 'small' : undefined;\n    let val: boolean;\n    if (filter) {\n      val = filter[filterIndex] as boolean;\n    }\n    return <BoolFilterField\n      size={size}\n      value={val}\n      onValueChange={onValueChange}\n    />;\n  }\n\n  let className = 'gs-comparison-filter-ui';\n  if (microUI) {\n    className += ' micro';\n  }\n\n  if (isNumberBetweenComparison) {\n    return (\n      <div className={className}>\n        {getAttributeCombo()}\n        {getNumberField(2)}\n        {getOperatorCombo()}\n        {getNumberField(3)}\n      </div>\n    );\n  }\n\n  if (isNumberComparison) {\n    return (\n      <div className={className}>\n        {getAttributeCombo()}\n        {getOperatorCombo()}\n        {getNumberField()}\n      </div>\n    );\n  }\n\n  if (isBooleanComparison) {\n    return (\n      <div className={className}>\n        {getAttributeCombo()}\n        {getOperatorCombo()}\n        {getBooleanField()}\n      </div>\n    );\n  }\n\n  if (isTextComparison) {\n    return (\n      <div className={className}>\n        {getAttributeCombo()}\n        {getOperatorCombo()}\n        {getTextField()}\n      </div>\n    );\n  }\n\n  return (\n    <div className={className}>\n      Could not create ComparisonFilter.\n    </div>\n  );\n};\n\nexport default ComparisonFilter;\n"]}