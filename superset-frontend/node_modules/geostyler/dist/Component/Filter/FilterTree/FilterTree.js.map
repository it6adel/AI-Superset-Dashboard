{"version":3,"file":"FilterTree.js","sourceRoot":"","sources":["../../../../src/Component/Filter/FilterTree/FilterTree.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\nimport {\n  Tree,\n  Dropdown,\n  Menu,\n  Button,\n  TreeProps\n} from 'antd';\n\nimport {\n  EllipsisOutlined,\n  FilterOutlined,\n  MinusOutlined,\n  PlusOutlined\n} from '@ant-design/icons';\n\nimport _get from 'lodash/get';\nimport _set from 'lodash/set';\nimport _isEqual from 'lodash/isEqual';\nimport _cloneDeep from 'lodash/cloneDeep';\n\nconst TreeNode = Tree.TreeNode;\n\nimport {\n  CombinationOperator,\n  Filter,\n} from 'geostyler-style';\n\nimport './FilterTree.less';\n\nimport {\n  Data as Data\n} from 'geostyler-data';\n\nimport ComparisonFilter, { ComparisonFilterProps } from '../ComparisonFilter/ComparisonFilter';\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport {\n  isCombinationFilter,\n  isComparisonFilter,\n  isGeoStylerFunction,\n  isNegationFilter\n} from 'geostyler-style/dist/typeguards';\nimport FilterUtil from '../../../Util/FilterUtil';\nimport { ItemType } from 'antd/lib/menu/hooks/useItems';\nimport { GeoStylerLocale } from '../../../locale/locale';\nimport en_US from '../../../locale/en_US';\n\n// default props\nexport interface FilterTreeDefaultProps {\n  /** The filter to edit */\n  filter: Filter;\n  /** Locale object containing translated text snippets */\n  locale: GeoStylerLocale['FilterTree'];\n}\n// non default props\nexport interface FilterTreeProps extends Partial<FilterTreeDefaultProps> {\n  /** Reference to internal data object (holding schema and example features) */\n  internalDataDef?: Data;\n  /** Callback function for onFilterChange */\n  onFilterChange?: ((compFilter: Filter) => void);\n  /** Properties that will be passed to the Comparison Filters */\n  filterUiProps?: Partial<ComparisonFilterProps>;\n}\n\n/**\n * UI for a ComparisonFilter consisting of\n *\n *   - A combo to select the attribute\n *   - A combo to select the operator\n *   - An input field for the value\n */\nexport const FilterTree: React.FC<FilterTreeProps & Partial<TreeProps>> = ({\n  filter: rootFilter = ['==', '', null],\n  internalDataDef,\n  locale = en_US.FilterTree,\n  onFilterChange,\n  filterUiProps,\n  ...passThroughProps\n}) => {\n\n  /**\n   * Changehandler for ComparsionFilters.\n   *\n   */\n  const onComparisonFilterChange = (filter: Filter, position: string) => {\n    if (_isEqual(filter, rootFilter)) {\n      onFilterChange(filter);\n    }\n\n    let newFilter = _cloneDeep(rootFilter);\n    if (position === '') {\n      newFilter = filter;\n    } else {\n      _set(newFilter, position, filter);\n    }\n\n    if (onFilterChange) {\n      onFilterChange(newFilter);\n    }\n  };\n\n  /**\n   * Handler for the add button.\n   * Adds a filter of a given type at the given position.\n   *\n   */\n  const onAddFilterClicked = (position: string, type: string) => {\n    const newFilter = FilterUtil.addFilter(rootFilter, position, type);\n    onFilterChange(newFilter);\n  };\n\n  /**\n   * Changes a filter at a position to a given typ.\n   *\n   */\n  const onChangeFilterClicked = (position: string, type: string) => {\n    const newFilter = FilterUtil.changeFilter(rootFilter, position, type);\n    onFilterChange(newFilter);\n  };\n\n  /**\n   * Removes a filter at a given position.\n   *\n   */\n  const removeFilter = (position: string) => {\n    const newFilter = FilterUtil.removeFilter(rootFilter, position);\n    onFilterChange(newFilter);\n  };\n\n  /**\n   * Creates a TreeNode for a given filter at the given position.\n   *\n   * @return Tree.TreeNode\n   */\n  // TODO: This should be a single component\n  const getNodeByFilter = (filter: Filter | CombinationOperator, position: string = ''): any => {\n    const onMenuClick = (e: any) => {\n      const keyPath: string[] = e.keyPath;\n      const reversedKeyPath = keyPath.reverse();\n      switch (reversedKeyPath[0]) {\n        case 'add':\n          onAddFilterClicked(position, reversedKeyPath[1].toString());\n          break;\n        case 'change':\n          onChangeFilterClicked(position, reversedKeyPath[1].toString());\n          break;\n        case 'remove':\n          removeFilter(position);\n          break;\n        default:\n          break;\n      }\n    };\n\n    const items: ItemType[] = [];\n    if (isCombinationFilter(filter)) {\n      items.push({\n        label: locale.addFilterLabel,\n        key: 'add',\n        icon: <PlusOutlined />,\n        children: [{\n          label: locale.andDrpdwnLabel,\n          key: 'and'\n        }, {\n          label: locale.orDrpdwnLabel,\n          key: 'or'\n        }, {\n          label: locale.notDrpdwnLabel,\n          key: 'not'\n        },{\n          label: locale.comparisonDrpdwnLabel,\n          key: 'comparison'\n        }],\n      });\n    }\n    items.push({\n      label: locale.changeFilterLabel,\n      key: 'change',\n      icon: <FilterOutlined />,\n      children: [{\n        label: locale.andDrpdwnLabel,\n        key: 'and'\n      }, {\n        label: locale.orDrpdwnLabel,\n        key: 'or'\n      }, {\n        label: locale.notDrpdwnLabel,\n        key: 'not'\n      },{\n        label: locale.comparisonDrpdwnLabel,\n        key: 'comparison'\n      }],\n    });\n    items.push({\n      key: 'remove',\n      icon: <MinusOutlined />\n    });\n\n    const menu = (\n      <Dropdown overlay={\n        <Menu onClick={onMenuClick} items={items} />\n      }>\n        <Button\n          className=\"filter-menu-button\"\n          size=\"small\"\n          icon={<EllipsisOutlined />}\n        />\n      </Dropdown>\n    );\n\n    let extraClassName = '';\n    let title;\n    const isLeaf = !(isCombinationFilter(filter) || isNegationFilter(filter));\n    let children = null;\n\n    if (isCombinationFilter(filter)) {\n      const text = filter[0] === '&&' ? locale.andFilterText : locale.orFilterText;\n      extraClassName = `${filter[0] === '&&' ? 'and' : 'or'}-filter`;\n      title = (\n        <span className=\"node-title\">\n          <span className=\"filter-text\">{text}</span>\n          {menu}\n        </span>\n      );\n      children = filter.slice(1).map((subFilter: Filter | CombinationOperator, index: number) => {\n        const pos = `${position}[${index + 1}]`;\n        return getNodeByFilter(subFilter, pos);\n      });\n    } else if (isNegationFilter(filter)) {\n      extraClassName = 'not-filter';\n      title = (\n        <span className=\"node-title\">\n          <span className=\"filter-text\">{locale.notFilterText}</span>\n          {menu}\n        </span>\n      );\n      children = getNodeByFilter(filter[1], `${position}[1]`);\n    } else if (isComparisonFilter(filter)) {\n      extraClassName = 'comparison-filter';\n      title = (\n        <span className=\"node-title\">\n          <ComparisonFilter\n            microUI={true}\n            internalDataDef={internalDataDef}\n            filter={filter}\n            onFilterChange={f => onComparisonFilterChange(f, position)}\n            {...filterUiProps}\n          />\n          {menu}\n        </span>\n      );\n    } else if (isGeoStylerFunction(filter)) {\n      extraClassName = 'function-filter';\n      title = (\n        <span className=\"node-title\">\n          GeoStyler function not supported yet.\n          {menu}\n        </span>\n      );\n    } else {\n      extraClassName = 'unknown-filter';\n      title = (\n        <span className=\"node-title\">\n          Unknown filter supplied.\n          {menu}\n        </span>\n      );\n    }\n\n    return (\n      <TreeNode\n        className={`style-filter-node ${extraClassName}`}\n        key={position}\n        isLeaf={isLeaf}\n        title={title}\n      >\n        {children}\n      </TreeNode>\n    );\n  };\n\n  /**\n   * Drop handler which is passed to the Tree.\n   * Removes filter from the dragged position and adds it to the dropped position.\n   */\n  const onDrop = (dropObject: any) => {\n    const {\n      dragNode,\n      node\n    } = dropObject;\n\n    let newFilter = [...rootFilter] as Filter;\n\n    const dragNodePosition = dragNode.props.eventKey;\n    const draggedFilter: Filter = _get(rootFilter, dragNodePosition) as Filter;\n    const dragParentPosition = dragNodePosition.substring(0, dragNodePosition.length - 3);\n    const dragParentFilter: Filter = dragParentPosition === ''\n      ? rootFilter\n      : _get(rootFilter, dragParentPosition) as Filter;\n    const dragPositionArray = FilterUtil.positionStringAsArray(dragNodePosition);\n    const dragSubPosition = dragPositionArray[dragPositionArray.length - 1];\n\n    const dropTargetPosition = node.props.eventKey === '0-0' ? '' : node.props.eventKey;\n    const dropParentPosition = dropTargetPosition.substring(0, dropTargetPosition.length - 3);\n    const dropPositionArray = FilterUtil.positionStringAsArray(dropTargetPosition);\n    const dropSubPosition = dropPositionArray[dropPositionArray.length - 1];\n\n    const sameParent = dragParentPosition === dropParentPosition;\n    const draggedLastRemaingChild = dragParentFilter.length <= 2;\n    let removePositionArray = [...dragPositionArray];\n\n    // Get remove position. Calculate the modified indexes after the node is added.\n\n    // We dropped to the root node\n    if (dropTargetPosition === '' || dropParentPosition === '') {\n      const droppedBefore = dropTargetPosition === '' || dropPositionArray[0] < dragPositionArray[0];\n      if (droppedBefore) {\n        removePositionArray[0] = dragPositionArray[0] + 1;\n      }\n    }\n    // We dropped inside the same CompositionFilter\n    if (sameParent) {\n      if (dropSubPosition < dragSubPosition) {\n        const subIndex = removePositionArray.length - 1;\n        removePositionArray[subIndex] = dragSubPosition + 1;\n      }\n    } else {\n      if (draggedLastRemaingChild) {\n        removePositionArray = FilterUtil.positionStringAsArray(dragParentPosition);\n      }\n    }\n\n    const removePosition = FilterUtil.positionArrayAsString(removePositionArray);\n    // Insert into new position\n    newFilter = FilterUtil.insertAtPosition(newFilter, draggedFilter, dropTargetPosition);\n    // Remove from old position\n    newFilter = FilterUtil.removeAtPosition(newFilter, removePosition);\n\n    onFilterChange(newFilter);\n  };\n\n  return (\n    <Tree\n      className=\"gs-filter-tree\"\n      draggable={true}\n      defaultExpandAll={true}\n      {...passThroughProps}\n      onDrop={onDrop}\n    >\n      {getNodeByFilter(rootFilter)}\n    </Tree>\n  );\n};\n\nexport default localize(FilterTree, 'FilterTree');\n"]}