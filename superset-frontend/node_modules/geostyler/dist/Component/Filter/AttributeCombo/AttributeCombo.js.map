{"version":3,"file":"AttributeCombo.js","sourceRoot":"","sources":["../../../../src/Component/Filter/AttributeCombo/AttributeCombo.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\nimport { Select, Form, Input } from 'antd';\nimport { Data } from 'geostyler-data';\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../../locale/en_US';\nimport { GeoStylerLocale } from '../../../locale/locale';\n\nconst Option = Select.Option;\n\n// default props\ninterface AttributeComboDefaultProps extends React.PropsWithChildren {\n  /** Set true to hide the attribute's type in the select options */\n  hideAttributeType: boolean;\n  locale: GeoStylerLocale['AttributeCombo'];\n  /**\n   * A custom filter function which is passed each attribute.\n   * Should return true to accept each attribute or false to reject it.\n   */\n  attributeNameFilter: (attrName: string) => boolean;\n  /** Mapping function for attribute names of this combo */\n  attributeNameMappingFunction?: (originalAttributeName: string) => string;\n  /** Validation status */\n  validateStatus: 'success' | 'warning' | 'error' | 'validating';\n  /** Element to show a help text */\n  help: React.ReactNode;\n}\n// non default props\nexport interface AttributeComboProps extends Partial<AttributeComboDefaultProps> {\n  /** Reference to internal data object (holding schema and example features) */\n  internalDataDef?: Data;\n  /** Callback function for onChange */\n  onAttributeChange?: ((newAttrName: string) => void);\n  /** Value set to the field */\n  value?: string | undefined;\n  size?: 'large' | 'middle' | 'small';\n}\n\n/**\n * Combobox offering the attributes to be filtered on.\n */\nexport const AttributeCombo: React.FC<AttributeComboProps> = ({\n  locale = en_US.AttributeCombo,\n  value,\n  hideAttributeType = false,\n  attributeNameFilter = () => true,\n  attributeNameMappingFunction =n => n,\n  validateStatus = 'success',\n  help = locale.help,\n  internalDataDef,\n  onAttributeChange,\n  size\n}) => {\n\n  const [inputSelectionStart, setInputSelectionStart] = React.useState<number>();\n  const [inputSelectionEnd, setInputSelectionEnd] = React.useState<number>();\n  const inputRef = React.useRef(null);\n\n  React.useLayoutEffect(() => {\n    if (inputRef && inputRef.current && inputRef.current.input) {\n      inputRef.current.input.selectionStart = inputSelectionStart;\n      inputRef.current.input.selectionEnd = inputSelectionEnd;\n    }\n  }, [inputSelectionStart, inputSelectionEnd, value]);\n\n  let options: Object[] = [];\n\n  if (internalDataDef) {\n    const attrDefs = internalDataDef.schema.properties;\n\n    // create sth like ['foo', 'bar', 'kalle'];\n    const attrNames = [];\n    for (var key in attrDefs) {\n      if (attrDefs.hasOwnProperty(key)) {\n        attrNames.push(key);\n      }\n    }\n\n    // create an option per attribute\n    options = attrNames.filter(attributeNameFilter!).map(attrName => {\n      const attrNameMapped = attributeNameMappingFunction(attrName);\n      return (\n        <Option\n          key={attrName}\n          value={attrName}\n        >\n          {hideAttributeType ? attrNameMapped : `${attrNameMapped} (${attrDefs[attrName].type})`}\n        </Option>\n      );\n    });\n  }\n\n  const helpTxt = validateStatus !== 'success' ? help : null;\n\n  return (\n    <div className=\"gs-attribute-combo\">\n      <Form.Item\n        label={locale.label}\n        colon={false}\n        validateStatus={validateStatus}\n        help={helpTxt}\n      >\n        {\n          internalDataDef ?\n            <Select\n              value={value}\n              onChange={onAttributeChange}\n              placeholder={locale.placeholder}\n              size={size}\n            >\n              <>\n                {options}\n              </>\n            </Select>\n            :\n            <Input\n              ref={inputRef}\n              draggable={true}\n              onDragStart={(e) => e.preventDefault()}\n              value={value}\n              placeholder={locale.placeholder}\n              size={size}\n              onChange={(event) => {\n                if (onAttributeChange) {\n                  onAttributeChange(event.target.value);\n                }\n                // save the cursor position to restore it in\n                // componentDidUpdate, otherwise it jumps to the end while typing\n                const cursorStart = event.target.selectionStart;\n                const cursorEnd = event.target.selectionEnd;\n                setInputSelectionStart(cursorStart);\n                setInputSelectionEnd(cursorEnd);\n              }}\n            />\n        }\n      </Form.Item>\n    </div>\n  );\n};\n\nexport default localize(AttributeCombo, 'AttributeCombo');\n"]}