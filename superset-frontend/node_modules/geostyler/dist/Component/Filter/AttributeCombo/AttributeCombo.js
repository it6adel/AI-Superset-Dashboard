"use strict";
/* Released under the BSD 2-Clause License
 *
 * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AttributeCombo = void 0;
var React = __importStar(require("react"));
var antd_1 = require("antd");
var LocaleWrapper_1 = require("../../LocaleWrapper/LocaleWrapper");
var en_US_1 = __importDefault(require("../../../locale/en_US"));
var Option = antd_1.Select.Option;
/**
 * Combobox offering the attributes to be filtered on.
 */
var AttributeCombo = function (_a) {
    var _b = _a.locale, locale = _b === void 0 ? en_US_1.default.AttributeCombo : _b, value = _a.value, _c = _a.hideAttributeType, hideAttributeType = _c === void 0 ? false : _c, _d = _a.attributeNameFilter, attributeNameFilter = _d === void 0 ? function () { return true; } : _d, _e = _a.attributeNameMappingFunction, attributeNameMappingFunction = _e === void 0 ? function (n) { return n; } : _e, _f = _a.validateStatus, validateStatus = _f === void 0 ? 'success' : _f, _g = _a.help, help = _g === void 0 ? locale.help : _g, internalDataDef = _a.internalDataDef, onAttributeChange = _a.onAttributeChange, size = _a.size;
    var _h = React.useState(), inputSelectionStart = _h[0], setInputSelectionStart = _h[1];
    var _j = React.useState(), inputSelectionEnd = _j[0], setInputSelectionEnd = _j[1];
    var inputRef = React.useRef(null);
    React.useLayoutEffect(function () {
        if (inputRef && inputRef.current && inputRef.current.input) {
            inputRef.current.input.selectionStart = inputSelectionStart;
            inputRef.current.input.selectionEnd = inputSelectionEnd;
        }
    }, [inputSelectionStart, inputSelectionEnd, value]);
    var options = [];
    if (internalDataDef) {
        var attrDefs_1 = internalDataDef.schema.properties;
        // create sth like ['foo', 'bar', 'kalle'];
        var attrNames = [];
        for (var key in attrDefs_1) {
            if (attrDefs_1.hasOwnProperty(key)) {
                attrNames.push(key);
            }
        }
        // create an option per attribute
        options = attrNames.filter(attributeNameFilter).map(function (attrName) {
            var attrNameMapped = attributeNameMappingFunction(attrName);
            return (React.createElement(Option, { key: attrName, value: attrName }, hideAttributeType ? attrNameMapped : "".concat(attrNameMapped, " (").concat(attrDefs_1[attrName].type, ")")));
        });
    }
    var helpTxt = validateStatus !== 'success' ? help : null;
    return (React.createElement("div", { className: "gs-attribute-combo" },
        React.createElement(antd_1.Form.Item, { label: locale.label, colon: false, validateStatus: validateStatus, help: helpTxt }, internalDataDef ?
            React.createElement(antd_1.Select, { value: value, onChange: onAttributeChange, placeholder: locale.placeholder, size: size },
                React.createElement(React.Fragment, null, options))
            :
                React.createElement(antd_1.Input, { ref: inputRef, draggable: true, onDragStart: function (e) { return e.preventDefault(); }, value: value, placeholder: locale.placeholder, size: size, onChange: function (event) {
                        if (onAttributeChange) {
                            onAttributeChange(event.target.value);
                        }
                        // save the cursor position to restore it in
                        // componentDidUpdate, otherwise it jumps to the end while typing
                        var cursorStart = event.target.selectionStart;
                        var cursorEnd = event.target.selectionEnd;
                        setInputSelectionStart(cursorStart);
                        setInputSelectionEnd(cursorEnd);
                    } }))));
};
exports.AttributeCombo = AttributeCombo;
exports.default = (0, LocaleWrapper_1.localize)(exports.AttributeCombo, 'AttributeCombo');
//# sourceMappingURL=AttributeCombo.js.map