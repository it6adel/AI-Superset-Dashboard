"use strict";
/* Released under the BSD 2-Clause License
 *
 * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OperatorCombo = void 0;
var React = __importStar(require("react"));
var antd_1 = require("antd");
var Option = antd_1.Select.Option;
/**
 * Combobox offering different filter operators.
 */
var OperatorCombo = function (_a) {
    var _b = _a.label, label = _b === void 0 ? 'Operator' : _b, _c = _a.showTitles, showTitles = _c === void 0 ? true : _c, _d = _a.placeholder, placeholder = _d === void 0 ? 'Select Operator' : _d, value = _a.value, _e = _a.operators, operators = _e === void 0 ? ['==', '*=', '!=', '<', '<=', '>', '>=', '<=x<='] : _e, _f = _a.operatorNameMappingFunction, operatorNameMappingFunction = _f === void 0 ? function (n) { return n; } : _f, _g = _a.operatorTitleMappingFunction, operatorTitleMappingFunction = _g === void 0 ? function (t) { return t; } : _g, _h = _a.validateStatus, validateStatus = _h === void 0 ? 'error' : _h, _j = _a.help, help = _j === void 0 ? 'Please select an operator.' : _j, onOperatorChange = _a.onOperatorChange, size = _a.size;
    // create an option per attribute
    var options = operators.map(function (operator) {
        var title = showTitles
            ? operatorTitleMappingFunction(operator)
            : ' ';
        return (React.createElement(Option, { key: operator, value: operator, title: title }, operatorNameMappingFunction(operator)));
    });
    var helpText = validateStatus !== 'success' ? help : null;
    if (!operators.includes(value)) {
        helpText = 'Operator is not valid for this attribute.';
    }
    return (React.createElement("div", { className: "gs-operator-combo" },
        React.createElement(antd_1.Form.Item, { label: label, colon: false, validateStatus: validateStatus, help: helpText },
            React.createElement(antd_1.Select, { size: size, value: value, onChange: onOperatorChange, placeholder: placeholder }, options))));
};
exports.OperatorCombo = OperatorCombo;
exports.default = exports.OperatorCombo;
//# sourceMappingURL=OperatorCombo.js.map