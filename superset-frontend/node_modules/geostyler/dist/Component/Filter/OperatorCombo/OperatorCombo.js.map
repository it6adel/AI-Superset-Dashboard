{"version":3,"file":"OperatorCombo.js","sourceRoot":"","sources":["../../../../src/Component/Filter/OperatorCombo/OperatorCombo.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,2CAA+B;AAG/B,6BAAoC;AACpC,IAAM,MAAM,GAAG,aAAM,CAAC,MAAM,CAAC;AA8B7B;;GAEG;AACI,IAAM,aAAa,GAAiC,UAAC,EAY3D;QAXC,aAAkB,EAAlB,KAAK,mBAAG,UAAU,KAAA,EAClB,kBAAiB,EAAjB,UAAU,mBAAG,IAAI,KAAA,EACjB,mBAA+B,EAA/B,WAAW,mBAAG,iBAAiB,KAAA,EAC/B,KAAK,WAAA,EACL,iBAA6D,EAA7D,SAAS,mBAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,KAAA,EAC7D,mCAAoC,EAApC,2BAA2B,mBAAG,UAAA,CAAC,IAAI,OAAA,CAAC,EAAD,CAAC,KAAA,EACpC,oCAAqC,EAArC,4BAA4B,mBAAG,UAAA,CAAC,IAAI,OAAA,CAAC,EAAD,CAAC,KAAA,EACrC,sBAAwB,EAAxB,cAAc,mBAAG,OAAO,KAAA,EACxB,YAAmC,EAAnC,IAAI,mBAAG,4BAA4B,KAAA,EACnC,gBAAgB,sBAAA,EAChB,IAAI,UAAA;IAGJ,iCAAiC;IACjC,IAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,UAAA,QAAQ;QACpC,IAAM,KAAK,GAAG,UAAU;YACtB,CAAC,CAAC,4BAA4B,CAAC,QAAQ,CAAC;YACxC,CAAC,CAAC,GAAG,CAAC;QAER,OAAO,CACL,oBAAC,MAAM,IACL,GAAG,EAAE,QAAQ,EACb,KAAK,EAAE,QAAQ,EACf,KAAK,EAAE,KAAK,IAEX,2BAA2B,CAAC,QAAQ,CAAC,CAC/B,CACV,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,QAAQ,GAAG,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IAE1D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC9B,QAAQ,GAAG,2CAA2C,CAAC;KACxD;IAED,OAAO,CACL,6BAAK,SAAS,EAAC,mBAAmB;QAChC,oBAAC,WAAI,CAAC,IAAI,IACR,KAAK,EAAE,KAAK,EACZ,KAAK,EAAE,KAAK,EACZ,cAAc,EAAE,cAAc,EAC9B,IAAI,EAAE,QAAQ;YAEd,oBAAC,aAAM,IACL,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,gBAAgB,EAC1B,WAAW,EAAE,WAAW,IAEvB,OAAO,CACD,CAEC,CAER,CACP,CAAC;AACJ,CAAC,CAAC;AA1DW,QAAA,aAAa,iBA0DxB;AAEF,kBAAe,qBAAa,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\nimport { ComparisonOperator } from 'geostyler-style';\nimport { Select, Form } from 'antd';\nconst Option = Select.Option;\n\n// default props\ninterface OperatorComboDefaultProps {\n  /** Label for this field */\n  label: string;\n  /** Show title of selected item */\n  showTitles: boolean;\n  /** The default text to place into the empty field */\n  placeholder: string;\n  /** List of operators to show in this combo */\n  operators: ComparisonOperator[];\n  /** Mapping function for operator names in this combo */\n  operatorNameMappingFunction: (originalOperatorName: string) => string;\n  /** Mapping function for operator title in this combo */\n  operatorTitleMappingFunction: (originalOperatorName: string) => string;\n  /** Validation status */\n  validateStatus: 'success' | 'warning' | 'error' | 'validating';\n  /** Element to show a help text */\n  help: React.ReactNode;\n}\n// non default props\nexport interface OperatorComboProps extends Partial<OperatorComboDefaultProps> {\n  /** Callback function for onChange */\n  onOperatorChange?: ((newOperator: ComparisonOperator) => void);\n  /** Initial value set to the field */\n  value?: ComparisonOperator | undefined;\n  size?: 'large' | 'middle' | 'small';\n}\n\n/**\n * Combobox offering different filter operators.\n */\nexport const OperatorCombo: React.FC<OperatorComboProps> = ({\n  label = 'Operator',\n  showTitles = true,\n  placeholder = 'Select Operator',\n  value,\n  operators = ['==', '*=', '!=', '<', '<=', '>', '>=', '<=x<='],\n  operatorNameMappingFunction = n => n,\n  operatorTitleMappingFunction = t => t,\n  validateStatus = 'error',\n  help = 'Please select an operator.',\n  onOperatorChange,\n  size\n}) => {\n\n  // create an option per attribute\n  const options = operators.map(operator => {\n    const title = showTitles\n      ? operatorTitleMappingFunction(operator)\n      : ' ';\n\n    return (\n      <Option\n        key={operator}\n        value={operator}\n        title={title}\n      >\n        {operatorNameMappingFunction(operator)}\n      </Option>\n    );\n  });\n\n  let helpText = validateStatus !== 'success' ? help : null;\n\n  if (!operators.includes(value)) {\n    helpText = 'Operator is not valid for this attribute.';\n  }\n\n  return (\n    <div className=\"gs-operator-combo\">\n      <Form.Item\n        label={label}\n        colon={false}\n        validateStatus={validateStatus}\n        help={helpText}\n      >\n        <Select\n          size={size}\n          value={value}\n          onChange={onOperatorChange}\n          placeholder={placeholder}\n        >\n          {options}\n        </Select>\n\n      </Form.Item>\n\n    </div>\n  );\n};\n\nexport default OperatorCombo;\n"]}