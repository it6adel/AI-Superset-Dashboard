{"version":3,"file":"Rule.js","sourceRoot":"","sources":["../../../src/Component/Rule/Rule.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\nimport {\n  Button\n} from 'antd';\n\nimport { CloseCircleOutlined } from '@ant-design/icons';\n\nimport {\n  ComparisonFilter as GsComparisonFilter,\n  Rule as GsRule,\n  Symbolizer as GsSymbolizer,\n  Filter as GsFilter,\n  ScaleDenominator as GsScaleDenominator\n} from 'geostyler-style';\nimport { Data as GsData } from 'geostyler-data';\n\nimport { localize } from '../LocaleWrapper/LocaleWrapper';\n\nimport RuleNameField, { NameFieldProps } from '../NameField/NameField';\nimport { ComparisonFilterProps } from '../Filter/ComparisonFilter/ComparisonFilter';\nimport ScaleDenominator from '../ScaleDenominator/ScaleDenominator';\nimport Fieldset from '../FieldSet/FieldSet';\nimport FilterTree from '../Filter/FilterTree/FilterTree';\nimport SymbolizerEditorWindow from '../Symbolizer/SymbolizerEditorWindow/SymbolizerEditorWindow';\nimport { IconLibrary } from '../Symbolizer/IconSelector/IconSelector';\n\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\n\nimport './Rule.less';\nimport { GeoStylerLocale } from '../../locale/locale';\nimport en_US from '../../locale/en_US';\nimport Renderer from '../Renderer/Renderer/Renderer';\nimport { SLDRendererAdditonalProps } from '../Renderer/SLDRenderer/SLDRenderer';\nimport { OlRendererProps } from '../Renderer/OlRenderer/OlRenderer';\n\n\n// default props\ninterface RuleDefaultProps {\n  /** Optional Rule object holding initial values for the component */\n  rule: GsRule;\n  /** The data projection of example features */\n  dataProjection: string;\n  /** The renderer to use */\n  rendererType: 'SLD' | 'OpenLayers';\n  /** Properties of the SLD renderer */\n  sldRendererProps?: SLDRendererAdditonalProps;\n  /** Properties of the OpenLayers renderer */\n  oLRendererProps?: Partial<OlRendererProps>;\n  /** Locale object containing translated text snippets */\n  locale: GeoStylerLocale['Rule'];\n}\n\n// non default props\nexport interface RuleProps extends Partial<RuleDefaultProps> {\n  /** Reference to internal data object (holding schema and example features) */\n  internalDataDef?: GsData | null;\n  /** Callback for a changed Rule */\n  onRuleChange?: (rule: GsRule, ruleBefore?: GsRule) => void;\n  /** Callback for onClick of the RemoveButton */\n  onRemove?: (rule: GsRule) => void;\n  /** Callback for onClick of the AddSymbolizerButton */\n  onAddSymbolizer?: (rule: GsRule) => void;\n  /** Callback for onClick of the RemoveSymbolizerButton */\n  onRemoveSymbolizer?: (rule: GsRule, symbolizer: GsSymbolizer, key: number) => void;\n  /** Callback for onClick of the Renderer */\n  onRendererClick?: (symbolizers: GsSymbolizer[], rule: GsRule) => void;\n  /** Properties that will be passed to the Comparison Filters */\n  filterUiProps?: Partial<ComparisonFilterProps>;\n  /** Properties that will be passed to the RuleNameField */\n  ruleNameProps?: Partial<NameFieldProps>;\n  /** Properties that will be passed to the IconSymbolizer */\n  iconLibraries?: IconLibrary[];\n  /** Properties that will be passed to the RasterSymbolizer */\n  colorRamps?: {\n    [name: string]: string[];\n  };\n}\n\n// state\ninterface RuleState {\n  editorVisible: boolean;\n  rule: GsRule;\n  symbolizerEditorVisible: boolean;\n  storedFilter: GsFilter;\n  storedScaleDenominator: GsScaleDenominator;\n  scaleFieldChecked?: boolean;\n  filterFieldChecked?: boolean;\n}\n\n/**\n * UI container representing a Rule\n * @deprecated This component is deprecated and will be removed with v10.\n */\nexport class Rule extends React.Component<RuleProps, RuleState> {\n\n  static componentName: string = 'Rule';\n\n  public static defaultProps: RuleDefaultProps = {\n    locale: en_US.Rule,\n    rule: {\n      name: 'My Style',\n      symbolizers: [{\n        kind: 'Mark',\n        wellKnownName: 'circle'\n      }]\n    },\n    dataProjection: 'EPSG:4326',\n    rendererType: 'OpenLayers'\n  };\n\n  constructor(props: RuleProps) {\n    super(props);\n    this.state = {\n      editorVisible: false,\n      rule: Rule.defaultProps.rule,\n      symbolizerEditorVisible: false,\n      storedFilter: ['==', '', ''],\n      storedScaleDenominator: {}\n    };\n  }\n\n  static getDerivedStateFromProps(\n    nextProps: RuleProps): Partial<RuleState> {\n    const rule = nextProps.rule || Rule.defaultProps.rule;\n\n    return {\n      rule,\n      filterFieldChecked: rule.filter ?\n        true : false,\n      scaleFieldChecked: rule.scaleDenominator ?\n        true : false,\n      symbolizerEditorVisible: false\n    };\n  }\n\n  public shouldComponentUpdate(nextProps: RuleProps, nextState: RuleState): boolean {\n    const diffProps = !_isEqual(this.props, nextProps);\n    const diffState = !_isEqual(this.state, nextState);\n    return diffProps || diffState;\n  }\n\n  /**\n   * Handles changing rule name\n   */\n  onNameChange = (name: string) => {\n    const rule: GsRule = _cloneDeep(this.state.rule);\n    rule.name = name;\n    if (this.props.onRuleChange) {\n      this.props.onRuleChange(rule, this.state.rule);\n    }\n    this.setState({rule});\n  };\n\n  /**\n   * Handles changing rule name\n   */\n  onScaleDenominatorChange = (scaleDenominator: any) => {\n    const rule: GsRule = _cloneDeep(this.state.rule);\n    rule.scaleDenominator = scaleDenominator;\n    if (this.props.onRuleChange) {\n      this.props.onRuleChange(rule, this.state.rule);\n    }\n    this.setState({rule});\n  };\n\n  /**\n   * Handles changing rule filter\n   */\n  onFilterChange = (filter: GsFilter) => {\n    const rule: GsRule = _cloneDeep(this.state.rule);\n    rule.filter = filter;\n    if (this.props.onRuleChange) {\n      this.props.onRuleChange(rule, this.state.rule);\n    }\n    this.setState({rule});\n  };\n\n  /**\n   * Handles changing rule symbolizer\n   */\n  onSymbolizersChange = (symbolizers: GsSymbolizer[]) => {\n    let rule: GsRule = _cloneDeep(this.state.rule);\n    rule.symbolizers = symbolizers;\n    if (this.props.onRuleChange) {\n      this.props.onRuleChange(rule, this.state.rule);\n    }\n    this.setState({rule});\n  };\n\n  onScaleCheckChange = (e: any) => {\n    const checked = e.target.checked;\n    const rule: GsRule = _cloneDeep(this.state.rule);\n\n    if (checked) {\n      rule.scaleDenominator = this.state.storedScaleDenominator;\n    } else {\n      this.setState({\n        storedScaleDenominator: rule.scaleDenominator\n      });\n      rule.scaleDenominator = undefined;\n    }\n\n    if (this.props.onRuleChange) {\n      this.props.onRuleChange(rule, this.state.rule);\n    }\n\n    this.setState({rule, scaleFieldChecked: checked});\n  };\n\n  onFilterCheckChange = (e: any) => {\n    const checked = e.target.checked;\n    const rule: GsRule = _cloneDeep(this.state.rule);\n\n    if (checked) {\n      rule.filter = this.state.storedFilter;\n    } else {\n      this.setState({\n        storedFilter: rule.filter\n      });\n      rule.filter = undefined;\n    }\n\n    if (this.props.onRuleChange) {\n      this.props.onRuleChange(rule, this.state.rule);\n    }\n    this.setState({rule, filterFieldChecked: checked});\n  };\n\n  onRendererClick = () => {\n    const {\n      editorVisible\n    } = this.state;\n\n    this.setState({\n      editorVisible: !editorVisible\n    });\n  };\n\n  onEditorWindowClose = () => {\n    this.setState({\n      editorVisible: false\n    });\n  };\n\n  onRemoveButtonClick = () => {\n    const { onRemove } = this.props;\n    const { rule } = this.state;\n\n    if (onRemove && rule) {\n      onRemove(rule);\n    }\n  };\n\n  render() {\n    const {\n      internalDataDef,\n      oLRendererProps,\n      sldRendererProps,\n      locale,\n      iconLibraries,\n      colorRamps\n    } = this.props;\n\n    const {\n      editorVisible,\n      rule,\n      scaleFieldChecked,\n      filterFieldChecked\n    } = this.state;\n\n    // cast the current filter object to pass over to ComparisonFilterUi\n    const cmpFilter = rule.filter as GsComparisonFilter;\n\n    // cast to GeoStyler compliant data model\n    const gsData = internalDataDef as GsData;\n\n    return (\n      <div className=\"gs-rule\" >\n        <div className=\"gs-rule-fields\" >\n          <div className=\"gs-rule-left-fields\" >\n            {locale.nameFieldLabel}\n            <RuleNameField\n              value={rule.name}\n              onChange={this.onNameChange}\n              placeholder={locale.nameFieldPlaceholder}\n              {...this.props.ruleNameProps}\n            />\n            <Renderer\n              symbolizers={rule.symbolizers}\n              onClick={this.onRendererClick}\n              {...sldRendererProps}\n              {...oLRendererProps}\n            />\n            {\n              !editorVisible ? null :\n                <SymbolizerEditorWindow\n                  onClose={this.onEditorWindowClose}\n                  symbolizers={rule.symbolizers}\n                  onSymbolizersChange={this.onSymbolizersChange}\n                  iconLibraries={iconLibraries}\n                  colorRamps={colorRamps}\n                />\n            }\n          </div>\n          <div className=\"gs-rule-right-fields\" >\n            <Fieldset\n              title={locale.scaleFieldTitle}\n              onCheckChange={this.onScaleCheckChange}\n              checked={scaleFieldChecked}\n            >\n              <ScaleDenominator\n                scaleDenominator={rule.scaleDenominator}\n                onChange={this.onScaleDenominatorChange}\n              />\n            </Fieldset>\n            <Fieldset\n              title={locale.filterFieldTitle}\n              onCheckChange={this.onFilterCheckChange}\n              checked={filterFieldChecked}\n            >\n              <FilterTree\n                internalDataDef={gsData}\n                filter={cmpFilter}\n                onFilterChange={this.onFilterChange}\n              />\n            </Fieldset>\n          </div>\n        </div>\n        <Button\n          className=\"gs-rule-remove-button\"\n          danger={true}\n          icon={<CloseCircleOutlined />}\n          size=\"large\"\n          onClick={this.onRemoveButtonClick}\n        >\n          {locale.removeRuleBtnText}\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default localize(Rule, Rule.componentName);\n"]}