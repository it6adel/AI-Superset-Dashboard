{"version":3,"file":"RuleReorderButtons.js","sourceRoot":"","sources":["../../../../src/Component/RuleTable/RuleReorderButtons/RuleReorderButtons.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,2CAA+B;AAC/B,6BAA8B;AAM9B,mEAA6D;AAC7D,2CAA6D;AAE7D,IAAM,WAAW,GAAG,aAAM,CAAC,KAAK,CAAC;AACjC,+DAA0C;AAE1C,gEAA0C;AAiB1C,IAAM,aAAa,GAAG,oBAAoB,CAAC;AAE3C;;GAEG;AACI,IAAM,kBAAkB,GAAsC,UAAC,EAKrE;QAJC,cAAiC,EAAjC,MAAM,mBAAG,eAAK,CAAC,kBAAkB,KAAA,EACjC,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,KAAK,WAAA;IAGL,IAAM,iBAAiB,GAAG,UAAC,QAAiB;QAC1C,IAAM,aAAa,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;QAC/D,IAAM,UAAU,GAAG,IAAA,mBAAU,EAAC,KAAK,CAAC,CAAC;QACrC,mDAAmD;QACnD,UAAU,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAExE,IAAI,WAAW,EAAE;YACf,WAAW,CAAC,UAAU,CAAC,CAAC;SACzB;IACH,CAAC,CAAC;IAEF,OAAO,CACL,oBAAC,WAAW;QACV,oBAAC,aAAM,IACL,IAAI,EAAC,QAAQ,EACb,IAAI,EAAC,cAAc,EACnB,IAAI,EAAE,oBAAC,kBAAU,OAAG,EACpB,QAAQ,EAAE,SAAS,KAAK,CAAC,EACzB,KAAK,EAAE,MAAM,CAAC,aAAa,EAC3B,OAAO,EAAE;gBACP,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,GACD;QACF,oBAAC,aAAM,IACL,IAAI,EAAC,QAAQ,EACb,IAAI,EAAC,gBAAgB,EACrB,IAAI,EAAE,oBAAC,oBAAY,OAAG,EACtB,QAAQ,EAAE,SAAS,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,EACxC,KAAK,EAAE,MAAM,CAAC,eAAe,EAC7B,OAAO,EAAE;gBACP,iBAAiB,CAAC,IAAI,CAAC,CAAC;YAC1B,CAAC,GACD,CACU,CACf,CAAC;AACJ,CAAC,CAAC;AA1CW,QAAA,kBAAkB,sBA0C7B;AAEF,kBAAe,IAAA,wBAAQ,EAAC,0BAAkB,EAAE,aAAa,CAAC,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\nimport { Button } from 'antd';\n\nimport {\n  Rule as GsRule,\n} from 'geostyler-style';\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport { UpOutlined, DownOutlined } from '@ant-design/icons';\n\nconst ButtonGroup = Button.Group;\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { GeoStylerLocale } from '../../../locale/locale';\nimport en_US from '../../../locale/en_US';\n\n// default props\ninterface RuleReorderButtonsDefaultProps {\n  /** Locale object containing translated text snippets */\n  locale: GeoStylerLocale['RuleReorderButtons'];\n}\n// non default props\nexport interface RuleReorderButtonsProps extends Partial<RuleReorderButtonsDefaultProps> {\n  /** Index of the corresponding Rule object */\n  ruleIndex: number;\n  /** Callback for click = move a rule position */\n  onRulesMove?: (rules: GsRule[]) => void;\n  /** all rules */\n  rules: GsRule[];\n}\n\nconst COMPONENTNAME = 'RuleReorderButtons';\n\n/**\n * Button group to re-order positions of rules.\n */\nexport const RuleReorderButtons: React.FC<RuleReorderButtonsProps> = ({\n  locale = en_US.RuleReorderButtons,\n  ruleIndex,\n  onRulesMove,\n  rules\n}) => {\n\n  const onRuleOrderChange = (moveDown: boolean) => {\n    const nextRuleIndex = moveDown ? ruleIndex + 1 : ruleIndex - 1;\n    const rulesClone = _cloneDeep(rules);\n    // shift rule one position up / down in rules array\n    rulesClone.splice(nextRuleIndex, 0, rulesClone.splice(ruleIndex, 1)[0]);\n\n    if (onRulesMove) {\n      onRulesMove(rulesClone);\n    }\n  };\n\n  return (\n    <ButtonGroup>\n      <Button\n        role=\"button\"\n        name=\"move-rule-up\"\n        icon={<UpOutlined />}\n        disabled={ruleIndex === 0}\n        title={locale.ruleMoveUpTip}\n        onClick={() => {\n          onRuleOrderChange(false);\n        }}\n      />\n      <Button\n        role=\"button\"\n        name=\"move-rule-down\"\n        icon={<DownOutlined />}\n        disabled={ruleIndex === rules.length - 1}\n        title={locale.ruleMoveDownTip}\n        onClick={() => {\n          onRuleOrderChange(true);\n        }}\n      />\n    </ButtonGroup>\n  );\n};\n\nexport default localize(RuleReorderButtons, COMPONENTNAME);\n"]}