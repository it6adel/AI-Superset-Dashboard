{"version":3,"file":"Style.js","sourceRoot":"","sources":["../../../src/Component/Style/Style.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright © 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React, { useEffect, useState } from 'react';\n\nimport _get from 'lodash/get';\nimport _isEqual from 'lodash/isEqual';\nimport _cloneDeep from 'lodash/cloneDeep';\n\nimport { InterpolationMode } from 'chroma-js';\n\nimport {\n  Button,\n  Menu,\n  Form\n} from 'antd';\n\nimport {\n  Style as GsStyle,\n  Rule as GsRule,\n  SymbolizerKind,\n  Symbolizer as GsSymbolizer,\n  WellKnownName as GsWellKnownName\n} from 'geostyler-style';\n\nimport {\n  Data, VectorData\n} from 'geostyler-data';\n\nimport Rule, { RuleProps } from '../Rule/Rule';\nimport NameField, { NameFieldProps } from '../NameField/NameField';\nimport BulkEditModals from '../Symbolizer/BulkEditModals/BulkEditModals';\nimport { ComparisonFilterProps } from '../Filter/ComparisonFilter/ComparisonFilter';\n\nimport { localize } from '../LocaleWrapper/LocaleWrapper';\nimport SymbolizerUtil from '../../Util/SymbolizerUtil';\nimport RuleTable, { RuleTableProps } from '../RuleTable/RuleTable';\nimport RuleGeneratorWindow from '../RuleGenerator/RuleGeneratorWindow';\nimport { SLDRendererAdditonalProps } from '../Renderer/SLDRenderer/SLDRenderer';\nimport { IconLibrary } from '../Symbolizer/IconSelector/IconSelector';\n\nimport './Style.less';\nimport { CopyOutlined, MenuUnfoldOutlined, MinusOutlined, PlusOutlined } from '@ant-design/icons';\nimport { ItemType } from 'antd/lib/menu/hooks/useItems';\nimport { GeoStylerLocale } from '../../locale/locale';\nimport en_US from '../../locale/en_US';\n\n// i18n\nexport interface StyleLocale {\n  addRuleBtnText: string;\n  cloneRulesBtnText: string;\n  removeRulesBtnText: string;\n  nameFieldLabel?: string;\n  nameFieldPlaceholder?: string;\n  colorLabel: string;\n  radiusLabel: string;\n  opacityLabel: string;\n  symbolLabel: string;\n  multiEditLabel: string;\n  ruleGeneratorWindowBtnText: string;\n}\n\n// default props\ninterface StyleDefaultProps {\n  /** The geoStylerStyle object */\n  style: GsStyle;\n  /** Locale object containing translated text snippets */\n  locale: GeoStylerLocale['Style'];\n  /** Use compact layout */\n  compact: boolean;\n  /** Enable classification */\n  enableClassification: boolean;\n}\n\n// non default props\nexport interface StyleProps extends Partial<StyleDefaultProps> {\n  /** Reference to internal data object (holding schema and example features) */\n  data?: Data;\n  /** The callback function that is triggered when the state changes */\n  onStyleChange?: (style: GsStyle) => void;\n  /** The data projection of example features */\n  dataProjection?: string;\n  /** Properties of the filter components */\n  filterUiProps?: Partial<ComparisonFilterProps>;\n  /** Properties of the rule name field */\n  ruleNameProps?: Partial<NameFieldProps>;\n  /** Properties of the Rule component */\n  ruleProps?: Partial<RuleProps>;\n  /** Properties of the RuleTable component */\n  ruleTableProps?: Partial<RuleTableProps>;\n  /** The renderer to use */\n  ruleRendererType?: 'SLD' | 'OpenLayers';\n  /** Properties of the SLD renderer */\n  sldRendererProps?: SLDRendererAdditonalProps;\n  /** List of supported icons ordered as library */\n  iconLibraries?: IconLibrary[];\n  /** Display the number of features that match a rule */\n  showAmountColumn?: boolean;\n  /** Display the number of features that match more than one rule */\n  showDuplicatesColumn?: boolean;\n  /** Object containing the predefined color ramps */\n  colorRamps?: {\n    [name: string]: string[];\n  };\n  /** Use Brewer color ramps */\n  useBrewerColorRamps?: boolean;\n  /** List of supported color spaces */\n  colorSpaces?: (InterpolationMode)[];\n}\n\nconst COMPONENTNAME = 'Style';\n\nexport const Style: React.FC<StyleProps> = ({\n  compact =  false,\n  locale = en_US.Style,\n  style: styleProp =  {\n    name: 'My Style',\n    rules: []\n  },\n  data,\n  onStyleChange,\n  dataProjection,\n  filterUiProps,\n  ruleNameProps,\n  ruleProps,\n  ruleTableProps,\n  ruleRendererType,\n  sldRendererProps,\n  iconLibraries,\n  showAmountColumn,\n  showDuplicatesColumn,\n  colorRamps,\n  useBrewerColorRamps,\n  colorSpaces,\n  enableClassification = true\n}) => {\n\n  const [style, setStyle] = useState(styleProp);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [colorModalVisible, setColorModalVisible] = useState(false);\n  const [sizeModalVisible, setSizeModalVisible] = useState(false);\n  const [opacityModalVisible, setOpacityModalVisible] = useState(false);\n  const [symbolModalVisible, setSymbolModalVisible] = useState(false);\n  const [ruleGeneratorWindowVisible, setRuleGeneratorWindowVisible] = useState(false);\n\n  useEffect(() => {\n    setStyle(styleProp);\n  }, [styleProp]);\n\n  const onNameChange = (name: string) => {\n    const clonedStyle = _cloneDeep(style);\n    clonedStyle.name = name;\n    if (onStyleChange) {\n      onStyleChange(clonedStyle);\n    }\n    setStyle(clonedStyle);\n  };\n\n  const onRuleChange = (rule: GsRule, ruleBefore: GsRule) => {\n    const clonedStyle = _cloneDeep(style);\n    const ruleIdxToReplace = clonedStyle.rules.findIndex((r: any) => {\n      return _isEqual(r, ruleBefore);\n    });\n    if (ruleIdxToReplace > -1) {\n      clonedStyle.rules[ruleIdxToReplace] = rule;\n      if (onStyleChange) {\n        onStyleChange(clonedStyle);\n      }\n      setStyle(clonedStyle);\n    }\n  };\n\n  const onRulesChange = (newRules: GsRule[]) => {\n    const clonedStyle = _cloneDeep(style);\n    clonedStyle.rules = newRules;\n    if (onStyleChange) {\n      onStyleChange(clonedStyle);\n    }\n    setStyle(clonedStyle);\n  };\n\n  const addRule = () => {\n    const clonedStyle = _cloneDeep(style);\n    // TODO We need to ensure that rule names are unique\n    const randomId = Math.floor(Math.random() * 10000);\n    const symbolizerKind: SymbolizerKind = _get(clonedStyle, 'rules[0].symbolizers[0].kind');\n    const newRule: GsRule = {\n      name: 'rule_' + randomId,\n      symbolizers: [SymbolizerUtil.generateSymbolizer(symbolizerKind)]\n    };\n    clonedStyle.rules = [...clonedStyle.rules, newRule];\n    if (onStyleChange) {\n      onStyleChange(clonedStyle);\n    }\n    setSelectedRowKeys([]);\n    setStyle(clonedStyle);\n  };\n\n  const cloneRules = () => {\n    const clonedStyle = _cloneDeep(style);\n\n    // create rules to clone\n    let newRules: GsRule[] = [];\n    clonedStyle.rules.forEach((rule: GsRule, index: number) => {\n      if (selectedRowKeys.includes(index)) {\n        let ruleClone = _cloneDeep(rule);\n        // TODO We need to ensure that rule names are unique\n        const randomId = Math.floor(Math.random() * 10000);\n        ruleClone.name = 'rule_' + randomId;\n        newRules.push(ruleClone);\n      }\n    });\n\n    // apply cloned rules to existing ones\n    clonedStyle.rules = [...clonedStyle.rules, ...newRules];\n    if (onStyleChange) {\n      onStyleChange(clonedStyle);\n    }\n    setStyle(clonedStyle);\n  };\n\n  const removeRules = () => {\n    const clonedStyle = _cloneDeep(style);\n    const newRules = clonedStyle.rules.filter((rule: GsRule, index: number) => {\n      return !selectedRowKeys.includes(index);\n    });\n    clonedStyle.rules = newRules;\n    if (onStyleChange) {\n      onStyleChange(clonedStyle);\n    }\n    setSelectedRowKeys([]);\n    setStyle(clonedStyle);\n  };\n\n  const removeRule = (rule: GsRule) => {\n    const clonedStyle = _cloneDeep(style);\n    const newRules = clonedStyle.rules.filter((r: GsRule) => r.name !== rule.name);\n    clonedStyle.rules = newRules;\n    if (onStyleChange) {\n      onStyleChange(clonedStyle);\n    }\n    setStyle(clonedStyle);\n  };\n\n  const onRulesSelectionChange = (newSelectedRowKeys: (string|number)[]) => {\n    setSelectedRowKeys(newSelectedRowKeys as string[]);\n  };\n\n  const onTableMenuClick = (param: any) => {\n    switch (param.key) {\n      case 'addRule':\n        addRule();\n        break;\n      case 'cloneRules':\n        cloneRules();\n        break;\n      case 'removeRule':\n        removeRules();\n        break;\n      case 'color':\n        setColorModalVisible(true);\n        break;\n      case 'size':\n        setSizeModalVisible(true);\n        break;\n      case 'opacity':\n        setOpacityModalVisible(true);\n        break;\n      case 'symbol':\n        setSymbolModalVisible(true);\n        break;\n      default:\n    }\n  };\n\n  const updateAllSelected = (updates: {value: any; property: string }[]) => {\n    const clonedStyle = _cloneDeep(style);\n    const selectedRules = clonedStyle.rules.filter((rule: GsRule, index: number) => {\n      return selectedRowKeys.includes(index);\n    });\n    selectedRules.forEach((rule: GsRule) => {\n      rule.symbolizers.forEach((sym: any) => {\n        updates.forEach((upd: any) => {\n          const property = upd.property;\n          const value = upd.value;\n          sym[property] = value;\n          if (property === 'kind' && value === 'Icon' && sym.wellKnownName) {\n            delete sym.wellKnownName;\n          }\n          if (property === 'kind' && value === 'Mark' && sym.image) {\n            delete sym.image;\n          }\n        });\n      });\n    });\n    if (onStyleChange) {\n      onStyleChange(clonedStyle);\n    }\n    setStyle(clonedStyle);\n  };\n\n  const updateMultiColors = (color: string) => {\n    updateAllSelected([{value: color, property: 'color'}]);\n  };\n\n  const updateMultiSizes = (size: any) => {\n    updateAllSelected([{value: size, property: 'radius'}]);\n  };\n\n  const updateMultiOpacities = (opacity: any) => {\n    updateAllSelected([{value: opacity, property: 'opacity'}]);\n  };\n\n  const updateMultiSymbols = (symbol: GsWellKnownName | string, kind: SymbolizerKind) => {\n    if (kind === 'Mark') {\n      updateAllSelected([\n        {value: symbol, property: 'wellKnownName'},\n        {value: kind, property: 'kind'}\n      ]);\n    } else {\n      updateAllSelected([\n        {value: symbol, property: 'image'},\n        {value: kind, property: 'kind'}\n      ]);\n    }\n  };\n\n  const showRuleGeneratorWindow = () => {\n    setRuleGeneratorWindowVisible(true);\n  };\n\n  const onRuleGeneratorWindowClose = () => {\n    setRuleGeneratorWindowVisible(false);\n  };\n\n  const onModalsClosed = () => {\n    setColorModalVisible(false);\n    setSizeModalVisible(false);\n    setOpacityModalVisible(false);\n    setSymbolModalVisible(false);\n  };\n\n  /**\n   * Checks if a specific menu item of multi-edit menu should be disabled.\n   *\n   * @param name Name of menu item\n   * @param rowKeys array of selected rowkeys\n   * @return boolean true if menu item should be disabled, otherwise false\n   */\n  const disableMenu = (name: string, rowKeys: number[]): boolean => {\n    let isValid = true;\n    switch (name) {\n      case 'size':\n        rowKeys.forEach((key: number) => {\n          let symbolizers = style.rules[key].symbolizers;\n          symbolizers.forEach((symbolizer: GsSymbolizer) => {\n            let kind = symbolizer.kind;\n            if (kind === 'Fill' || kind === 'Text' || kind === 'Line') {\n              isValid = false;\n            }\n          });\n        });\n        return !isValid;\n      case 'symbol':\n        rowKeys.forEach((key: number) => {\n          let symbolizers = style.rules[key].symbolizers;\n          symbolizers.forEach((symbolizer: GsSymbolizer) => {\n            let kind = symbolizer.kind;\n            if (kind !== 'Mark' && kind !== 'Icon') {\n              isValid = false;\n            }\n          });\n        });\n        return !isValid;\n      case 'color':\n        rowKeys.forEach((key: number) => {\n          let symbolizers = style.rules[key].symbolizers;\n          symbolizers.forEach((symbolizer: GsSymbolizer) => {\n            let kind = symbolizer.kind;\n            if (kind === 'Icon') {\n              isValid = false;\n            }\n          });\n        });\n        return !isValid;\n      default:\n        return !isValid;\n    }\n  };\n\n  // TODO: move to separated component\n  const createFooter = () => {\n    const allowRemove = selectedRowKeys.length > 0 && selectedRowKeys.length < style.rules.length;\n    const allowClone = selectedRowKeys.length > 0;\n\n    const items: ItemType[] = [{\n      key: 'addRule',\n      label: locale.addRuleBtnText,\n      icon: <PlusOutlined />\n    }, {\n      key: 'cloneRules',\n      label: locale.cloneRulesBtnText,\n      disabled: !allowClone,\n      icon: <CopyOutlined />\n    }, {\n      key: 'removeRule',\n      label: locale.removeRulesBtnText,\n      disabled: !allowRemove,\n      icon: <MinusOutlined />\n    }, {\n      key: 'multi-edit',\n      label: <span><MenuUnfoldOutlined /><span>{locale.multiEditLabel}</span></span>,\n      disabled: selectedRowKeys.length <= 1,\n      children:[{\n        key: 'color',\n        label: locale.colorLabel,\n        disabled: disableMenu('color', selectedRowKeys)\n      }, {\n        key: 'size',\n        label: locale.radiusLabel,\n        disabled: disableMenu('size', selectedRowKeys)\n      }, {\n        key: 'symbol',\n        label: locale.symbolLabel,\n        disabled: disableMenu('symbol', selectedRowKeys)\n      }]\n    }];\n\n    return (\n      <Menu\n        mode=\"horizontal\"\n        onClick={onTableMenuClick}\n        selectable={false}\n        items={items}\n      />\n    );\n  };\n\n  let rules: GsRule[] =  style?.rules || [];\n\n  return (\n    <div className=\"gs-style\" >\n      <div className=\"gs-style-name-classification-row\">\n        <Form.Item\n          label={locale.nameFieldLabel}\n        >\n          <NameField\n            value={style.name}\n            onChange={onNameChange}\n            placeholder={locale.nameFieldPlaceholder}\n          />\n        </Form.Item>\n        {\n          // TODO: Rule GeneratorWindow should only be available if data is VectorData\n          enableClassification ?\n            <Button\n              className=\"gs-style-rulegenerator\"\n              onClick={showRuleGeneratorWindow}\n              disabled={!data}\n            >\n              {locale.ruleGeneratorWindowBtnText}\n            </Button> : null\n        }\n      </div>\n      {\n        (!ruleGeneratorWindowVisible) ? null :\n          <RuleGeneratorWindow\n            y={0}\n            internalDataDef={data as VectorData}\n            onClose={onRuleGeneratorWindowClose}\n            onRulesChange={onRulesChange}\n            colorRamps={colorRamps}\n            useBrewerColorRamps={useBrewerColorRamps}\n            colorSpaces={colorSpaces}\n          />\n      }\n      { compact\n        ? <RuleTable\n          rules={rules}\n          onRulesChange={onRulesChange}\n          rowSelection={{\n            selectedRowKeys,\n            onChange: onRulesSelectionChange\n          }}\n          rendererType={ruleRendererType}\n          sldRendererProps={sldRendererProps}\n          filterUiProps={filterUiProps}\n          data={data}\n          footer={createFooter}\n          iconLibraries={iconLibraries}\n          showAmountColumn={showAmountColumn}\n          showDuplicatesColumn={showDuplicatesColumn}\n          colorRamps={colorRamps}\n          {...ruleTableProps}\n        />\n        : rules.map((rule, idx) => <Rule\n          key={'rule_' + idx}\n          rule={rule}\n          onRemove={removeRule}\n          internalDataDef={data}\n          onRuleChange={onRuleChange}\n          dataProjection={dataProjection}\n          filterUiProps={filterUiProps}\n          ruleNameProps={ruleNameProps}\n          rendererType={ruleRendererType}\n          sldRendererProps={sldRendererProps}\n          iconLibraries={iconLibraries}\n          colorRamps={colorRamps}\n        />)\n      }\n      {\n        compact ? null :\n          <Button\n            style={{'marginBottom': '20px', 'marginTop': '20px'}}\n            icon={<PlusOutlined />}\n            size=\"large\"\n            onClick={addRule}\n          >\n            {locale.addRuleBtnText}\n          </Button>\n      }\n      <BulkEditModals\n        colorModalVisible={colorModalVisible}\n        sizeModalVisible={sizeModalVisible}\n        opacityModalVisible={opacityModalVisible}\n        symbolModalVisible={symbolModalVisible}\n        selectedRowKeys={selectedRowKeys}\n        updateMultiColors={updateMultiColors}\n        updateMultiSizes={updateMultiSizes}\n        updateMultiOpacities={updateMultiOpacities}\n        updateMultiSymbols={updateMultiSymbols}\n        style={style}\n        iconLibraries={iconLibraries}\n        modalsClosed={onModalsClosed}\n      />\n    </div>\n  );\n};\n\nexport default localize(Style, COMPONENTNAME);\n"]}