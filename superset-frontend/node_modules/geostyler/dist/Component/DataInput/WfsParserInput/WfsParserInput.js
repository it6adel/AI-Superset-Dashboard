"use strict";
/* eslint-disable camelcase */
/* Released under the BSD 2-Clause License
 *
 * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WfsParserInput = void 0;
var react_1 = __importStar(require("react"));
var antd_1 = require("antd");
var Option = antd_1.Select.Option;
require("./WfsParserInput.css");
var en_US_1 = __importDefault(require("../../../locale/en_US"));
/**
 * WfsParserInput
 */
var WfsParserInput = function (_a) {
    var _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;
    var _r = _a.locale, locale = _r === void 0 ? en_US_1.default.WfsParserInput : _r, onClickProp = _a.onClick;
    var _s = (0, react_1.useState)('https://ows-demo.terrestris.de/geoserver/terrestris/ows'), url = _s[0], setUrl = _s[1];
    var _t = (0, react_1.useState)('1.1.0'), version = _t[0], setVersion = _t[1];
    var _u = (0, react_1.useState)('terrestris:bundeslaender'), typeName = _u[0], setTypeName = _u[1];
    var _v = (0, react_1.useState)(), featureID = _v[0], setFeatureID = _v[1];
    var _w = (0, react_1.useState)(), propertyName = _w[0], setPropertyName = _w[1];
    var _x = (0, react_1.useState)(), srsName = _x[0], setSrsName = _x[1];
    var _y = (0, react_1.useState)(), maxFeatures = _y[0], setMaxFeatures = _y[1];
    var _z = (0, react_1.useState)({
        url: undefined,
        version: undefined,
        typeName: undefined,
        featureID: undefined,
        propertyName: undefined,
        maxFeatures: undefined,
        fetchParams: undefined,
        srsName: undefined
    }), validation = _z[0], setValidation = _z[1];
    var onUrlChange = function (event) {
        var newUrl = event.target.value;
        var urlValidation = {};
        if (newUrl.length <= 0) {
            urlValidation = {
                status: 'error',
                message: 'Url is required'
            };
        }
        setUrl(newUrl);
        setValidation(__assign(__assign({}, validation), { url: urlValidation }));
    };
    var onTypeNameChange = function (event) {
        var newTypeName = event.target.value;
        var typeNameValidation = {};
        if (newTypeName.length <= 0) {
            typeNameValidation = {
                status: 'error',
                message: 'TypeName is required'
            };
        }
        setTypeName(newTypeName);
        setValidation(__assign(__assign({}, validation), { typeName: typeNameValidation }));
    };
    var onVersionChange = function (newVersion) {
        var versionValidation = {};
        if (newVersion.length <= 0) {
            versionValidation = {
                status: 'error',
                message: 'Version is required'
            };
        }
        setVersion(newVersion);
        setValidation(__assign(__assign({}, validation), { version: versionValidation }));
    };
    var onFeatureIDChange = function (event) {
        setFeatureID(event.target.value);
    };
    var onSrsNameChange = function (event) {
        setSrsName(event.target.value);
    };
    var onPropertyNameChange = function (newPropertyName) {
        setPropertyName(newPropertyName);
    };
    var onMaxFeaturesChange = function (newMaxFeatures) {
        setMaxFeatures(newMaxFeatures);
    };
    var onClick = function () {
        var requestParams;
        if (version === '1.1.0') {
            requestParams = {
                version: version,
                typeName: typeName,
                maxFeatures: maxFeatures,
                featureID: featureID,
                propertyName: propertyName,
                srsName: srsName
            };
        }
        else {
            requestParams = {
                version: version,
                typeNames: typeName,
                count: maxFeatures,
                featureID: featureID,
                propertyName: propertyName,
                srsName: srsName
            };
        }
        onClickProp({
            url: url,
            requestParams: requestParams
        });
    };
    return (react_1.default.createElement("div", { className: "wfs-parser-input" },
        react_1.default.createElement(antd_1.Form.Item, { label: locale.urlLabel, validateStatus: (_b = validation === null || validation === void 0 ? void 0 : validation.url) === null || _b === void 0 ? void 0 : _b.status, help: (_c = validation === null || validation === void 0 ? void 0 : validation.url) === null || _c === void 0 ? void 0 : _c.message, hasFeedback: true, required: true },
            react_1.default.createElement(antd_1.Input, { className: 'wfs-url-input', value: url, onChange: onUrlChange })),
        react_1.default.createElement(antd_1.Form.Item, { label: locale.typeNameLabel, validateStatus: (_d = validation === null || validation === void 0 ? void 0 : validation.typeName) === null || _d === void 0 ? void 0 : _d.status, help: (_e = validation === null || validation === void 0 ? void 0 : validation.typeName) === null || _e === void 0 ? void 0 : _e.message, hasFeedback: true, required: true },
            react_1.default.createElement(antd_1.Input, { className: 'wfs-typename-input', value: typeName, onChange: onTypeNameChange })),
        react_1.default.createElement(antd_1.Form.Item, { label: locale.versionLabel, validateStatus: (_f = validation === null || validation === void 0 ? void 0 : validation.version) === null || _f === void 0 ? void 0 : _f.status, help: (_g = validation === null || validation === void 0 ? void 0 : validation.version) === null || _g === void 0 ? void 0 : _g.message, hasFeedback: true, required: true },
            react_1.default.createElement(antd_1.Select, { className: 'wfs-version-input', style: { width: '100%' }, value: version, onChange: onVersionChange },
                react_1.default.createElement(Option, { value: "1.1.0" }, "1.1.0"),
                react_1.default.createElement(Option, { value: "2.0.0" }, "2.0.0"))),
        react_1.default.createElement(antd_1.Form.Item, { label: locale.srsNameLabel, validateStatus: (_h = validation === null || validation === void 0 ? void 0 : validation.srsName) === null || _h === void 0 ? void 0 : _h.status, help: (_j = validation === null || validation === void 0 ? void 0 : validation.srsName) === null || _j === void 0 ? void 0 : _j.message, hasFeedback: true },
            react_1.default.createElement(antd_1.Input, { className: 'wfs-srsName-input', value: srsName, onChange: onSrsNameChange })),
        react_1.default.createElement(antd_1.Form.Item, { label: locale.featureIDLabel, validateStatus: (_k = validation === null || validation === void 0 ? void 0 : validation.featureID) === null || _k === void 0 ? void 0 : _k.status, help: (_l = validation === null || validation === void 0 ? void 0 : validation.featureID) === null || _l === void 0 ? void 0 : _l.message, hasFeedback: true },
            react_1.default.createElement(antd_1.Input, { className: 'wfs-featureid-input', value: featureID, onChange: onFeatureIDChange })),
        react_1.default.createElement(antd_1.Form.Item, { label: locale.propertyNameLabel, validateStatus: (_m = validation === null || validation === void 0 ? void 0 : validation.propertyName) === null || _m === void 0 ? void 0 : _m.status, help: (_o = validation === null || validation === void 0 ? void 0 : validation.propertyName) === null || _o === void 0 ? void 0 : _o.message, hasFeedback: true },
            react_1.default.createElement(antd_1.Select, { className: 'wfs-propertyname-input', style: { width: '100%' }, mode: "tags", value: propertyName, onChange: onPropertyNameChange })),
        react_1.default.createElement(antd_1.Form.Item, { label: locale.maxFeaturesLabel, validateStatus: (_p = validation === null || validation === void 0 ? void 0 : validation.maxFeatures) === null || _p === void 0 ? void 0 : _p.status, help: (_q = validation === null || validation === void 0 ? void 0 : validation.maxFeatures) === null || _q === void 0 ? void 0 : _q.message, hasFeedback: true },
            react_1.default.createElement(antd_1.InputNumber, { className: 'wfs-maxfeatures-input', style: { width: '100%' }, min: 0, value: maxFeatures, onChange: onMaxFeaturesChange, precision: 0 })),
        react_1.default.createElement(antd_1.Form.Item, null,
            react_1.default.createElement(antd_1.Button, { className: "wfs-parser-submit-button", type: "primary", onClick: onClick }, locale.requestButtonText))));
};
exports.WfsParserInput = WfsParserInput;
exports.default = exports.WfsParserInput;
//# sourceMappingURL=WfsParserInput.js.map