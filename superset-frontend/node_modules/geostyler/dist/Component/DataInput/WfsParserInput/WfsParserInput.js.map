{"version":3,"file":"WfsParserInput.js","sourceRoot":"","sources":["../../../../src/Component/DataInput/WfsParserInput/WfsParserInput.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\n/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React, { useState } from 'react';\n\nimport { ReadParams, RequestParams } from 'geostyler-wfs-parser';\n\nimport {\n  Form,\n  Button,\n  Input,\n  Select,\n  InputNumber\n} from 'antd';\nconst Option = Select.Option;\n\nimport './WfsParserInput.less';\nimport { GeoStylerLocale } from '../../../locale/locale';\nimport en_US from '../../../locale/en_US';\n\ntype WfsVersion = RequestParams['version'];\n\n// default props\ninterface WfsParserInputDefaultProps {\n  /** Locale object containing translated text snippets */\n  locale: GeoStylerLocale['WfsParserInput'];\n}\n\n// non default props\nexport interface WfsParserInputProps extends Partial<WfsParserInputDefaultProps> {\n  /** The callback method that is triggered when the state changes */\n  onClick: (wfsParams: ReadParams) => void;\n}\n\n/**\n * WfsParserInput\n */\nexport const WfsParserInput: React.FC<WfsParserInputProps> = ({\n  locale = en_US.WfsParserInput,\n  onClick: onClickProp\n}) => {\n\n  const [url, setUrl] = useState<string>('https://ows-demo.terrestris.de/geoserver/terrestris/ows');\n  const [version, setVersion] = useState<WfsVersion>('1.1.0');\n  const [typeName, setTypeName] = useState<string>('terrestris:bundeslaender');\n  const [featureID, setFeatureID] = useState<string>();\n  const [propertyName, setPropertyName] = useState<string>();\n  const [srsName, setSrsName] = useState<string>();\n  const [maxFeatures, setMaxFeatures] = useState<number>();\n  const [validation, setValidation] = useState({\n    url: undefined,\n    version: undefined,\n    typeName: undefined,\n    featureID: undefined,\n    propertyName: undefined,\n    maxFeatures: undefined,\n    fetchParams: undefined,\n    srsName: undefined\n  });\n\n  const onUrlChange = (event: any) => {\n    const newUrl = event.target.value;\n    let urlValidation = {};\n    if (newUrl.length <= 0) {\n      urlValidation = {\n        status: 'error',\n        message: 'Url is required'\n      };\n    }\n    setUrl(newUrl);\n    setValidation({\n      ...validation,\n      url: urlValidation\n    });\n  };\n\n  const onTypeNameChange = (event: any) => {\n    const newTypeName = event.target.value;\n    let typeNameValidation = {};\n    if (newTypeName.length <= 0) {\n      typeNameValidation = {\n        status: 'error',\n        message: 'TypeName is required'\n      };\n    }\n    setTypeName(newTypeName);\n    setValidation({\n      ...validation,\n      typeName: typeNameValidation\n    });\n  };\n\n  const onVersionChange = (newVersion: WfsVersion) => {\n    let versionValidation = {};\n    if (newVersion.length <= 0) {\n      versionValidation = {\n        status: 'error',\n        message: 'Version is required'\n      };\n    }\n    setVersion(newVersion);\n    setValidation({\n      ...validation,\n      version: versionValidation\n    });\n  };\n\n  const onFeatureIDChange = (event: any) => {\n    setFeatureID(event.target.value);\n  };\n\n  const onSrsNameChange = (event: any) => {\n    setSrsName(event.target.value);\n  };\n\n  const onPropertyNameChange = (newPropertyName: string) => {\n    setPropertyName(newPropertyName);\n  };\n\n  const onMaxFeaturesChange = (newMaxFeatures: number) => {\n    setMaxFeatures(newMaxFeatures);\n  };\n\n  const onClick = () => {\n    let requestParams: RequestParams;\n    if (version === '1.1.0') {\n      requestParams = {\n        version,\n        typeName,\n        maxFeatures,\n        featureID,\n        propertyName,\n        srsName\n      };\n    } else {\n      requestParams = {\n        version,\n        typeNames: typeName,\n        count: maxFeatures,\n        featureID,\n        propertyName,\n        srsName\n      };\n    }\n    onClickProp({\n      url,\n      requestParams\n    });\n  };\n\n  return (\n    <div className=\"wfs-parser-input\">\n      <Form.Item\n        label={locale.urlLabel}\n        validateStatus={validation?.url?.status}\n        help={validation?.url?.message}\n        hasFeedback={true}\n        required={true}\n      >\n        <Input\n          className='wfs-url-input'\n          value={url}\n          onChange={onUrlChange}\n        />\n      </Form.Item>\n      <Form.Item\n        label={locale.typeNameLabel}\n        validateStatus={validation?.typeName?.status}\n        help={validation?.typeName?.message}\n        hasFeedback={true}\n        required={true}\n      >\n        <Input\n          className='wfs-typename-input'\n          value={typeName}\n          onChange={onTypeNameChange}\n        />\n      </Form.Item>\n      <Form.Item\n        label={locale.versionLabel}\n        validateStatus={validation?.version?.status}\n        help={validation?.version?.message}\n        hasFeedback={true}\n        required={true}\n      >\n        <Select\n          className='wfs-version-input'\n          style={{width: '100%'}}\n          value={version}\n          onChange={onVersionChange}\n        >\n          <Option value=\"1.1.0\">1.1.0</Option>\n          <Option value=\"2.0.0\">2.0.0</Option>\n        </Select>\n      </Form.Item>\n      <Form.Item\n        label={locale.srsNameLabel}\n        validateStatus={validation?.srsName?.status}\n        help={validation?.srsName?.message}\n        hasFeedback={true}\n      >\n        <Input\n          className='wfs-srsName-input'\n          value={srsName}\n          onChange={onSrsNameChange}\n        />\n      </Form.Item>\n      <Form.Item\n        label={locale.featureIDLabel}\n        validateStatus={validation?.featureID?.status}\n        help={validation?.featureID?.message}\n        hasFeedback={true}\n      >\n        <Input\n          className='wfs-featureid-input'\n          value={featureID}\n          onChange={onFeatureIDChange}\n        />\n      </Form.Item>\n      <Form.Item\n        label={locale.propertyNameLabel}\n        validateStatus={validation?.propertyName?.status}\n        help={validation?.propertyName?.message}\n        hasFeedback={true}\n      >\n        <Select\n          className='wfs-propertyname-input'\n          style={{width: '100%'}}\n          mode=\"tags\"\n          value={propertyName}\n          onChange={onPropertyNameChange}\n        />\n      </Form.Item>\n      <Form.Item\n        label={locale.maxFeaturesLabel}\n        validateStatus={validation?.maxFeatures?.status}\n        help={validation?.maxFeatures?.message}\n        hasFeedback={true}\n      >\n        <InputNumber\n          className='wfs-maxfeatures-input'\n          style={{width: '100%'}}\n          min={0}\n          value={maxFeatures}\n          onChange={onMaxFeaturesChange}\n          precision={0}\n        />\n      </Form.Item>\n      <Form.Item>\n        <Button\n          className=\"wfs-parser-submit-button\"\n          type=\"primary\"\n          onClick={onClick}\n        >\n          {locale.requestButtonText}\n        </Button>\n      </Form.Item>\n    </div>\n  );\n};\n\nexport default WfsParserInput;\n"]}