{"version":3,"file":"CardStyle.js","sourceRoot":"","sources":["../../../src/Component/CardStyle/CardStyle.tsx"],"names":[],"mappings":"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","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React, { useState } from 'react';\n\nimport _get from 'lodash/get';\nimport _isEqual from 'lodash/isEqual';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _merge from 'lodash/merge';\n\nimport {\n  Style as GsStyle,\n  Rule as GsRule,\n  Symbolizer as GsSymbolizer,\n  Filter as GsFilter,\n  isIconSymbolizer\n} from 'geostyler-style';\n\nimport {\n  Data, VectorData\n} from 'geostyler-data';\n\nimport { localize } from '../LocaleWrapper/LocaleWrapper';\nimport en_US from '../../locale/en_US';\n\nimport './CardStyle.less';\nimport Breadcrumb, { Crumb } from '../Breadcrumb/Breadcrumb';\nimport StyleOverview from '../StyleOverview/StyleOverview';\nimport RuleOverview from '../RuleOverview/RuleOverview';\nimport CardViewUtil from '../../Util/CardViewUtil';\nimport Editor from '../Symbolizer/Editor/Editor';\nimport FilterTree from '../Filter/FilterTree/FilterTree';\nimport RuleGenerator from '../RuleGenerator/RuleGenerator';\nimport BulkEditor from '../BulkEditor/BulkEditor';\nimport IconSelector, { IconLibrary } from '../Symbolizer/IconSelector/IconSelector';\nimport { GeoStylerLocale } from '../../locale/locale';\nimport Renderer from '../Renderer/Renderer/Renderer';\n\n// default props\ninterface CardStyleDefaultProps {\n  /** The geoStylerStyle object */\n  style: GsStyle;\n  /** Locale object containing translated text snippets */\n  locale: GeoStylerLocale['CardStyle'];\n}\n\n// non default props\nexport interface CardStyleProps extends Partial<CardStyleDefaultProps> {\n  /** Reference to internal data object (holding schema and example features) */\n  data?: Data;\n  /** The callback function that is triggered when the state changes */\n  onStyleChange?: (style: GsStyle) => void;\n  /** List of supported icons ordered as library */\n  iconLibraries?: IconLibrary[];\n}\n\nexport interface CardView {\n  view: string;\n  props: any[];\n  path: Crumb[];\n}\n\nconst STYLEVIEW = CardViewUtil.STYLEVIEW;\nconst RULEVIEW = CardViewUtil.RULEVIEW;\nconst CLASSIFICATIONVIEW = CardViewUtil.CLASSIFICATIONVIEW;\nconst MULTIEDITVIEW = CardViewUtil.MULTIEDITVIEW;\nconst SYMBOLIZERVIEW = CardViewUtil.SYMBOLIZERVIEW;\nconst FILTEREDITVIEW = CardViewUtil.FILTEREDITVIEW;\nconst ICONLIBRARIESVIEW = CardViewUtil.ICONLIBRARIESVIEW;\n\nexport const CardStyle: React.FC<CardStyleProps> = ({\n  locale = en_US.CardStyle,\n  style = { name: 'My Style', rules: [] },\n  data,\n  onStyleChange,\n  iconLibraries\n}) => {\n\n  const defaultCrumb: Crumb = {view: STYLEVIEW, title: locale.styleTitle, indices: []};\n  const defaultView: CardView = {\n    view: STYLEVIEW,\n    props: [],\n    path: [defaultCrumb]\n  };\n  const [currentView, setCurrentView] = useState<CardView>(defaultView);\n\n  const getPathForView = (viewName: string, indices: number[]): Crumb[] => {\n    switch (viewName) {\n      case STYLEVIEW:\n        return [{view: STYLEVIEW, title: locale.styleTitle, indices: []}];\n      case RULEVIEW:\n        return [\n          {view: STYLEVIEW, title: locale.styleTitle, indices: []},\n          {view: RULEVIEW, title: style.rules[indices[0]]?.name, indices: [...indices]}\n        ];\n      case CLASSIFICATIONVIEW:\n        return [\n          {view: STYLEVIEW, title: locale.styleTitle, indices: []},\n          {view: CLASSIFICATIONVIEW, title: locale.classificationTitle, indices: []}\n        ];\n      case MULTIEDITVIEW:\n        return [\n          {view: STYLEVIEW, title: locale.styleTitle, indices: []},\n          {view: MULTIEDITVIEW, title: locale.multiEditTitle, indices: [...indices]}\n        ];\n      case SYMBOLIZERVIEW:\n        return [\n          {view: STYLEVIEW, title: locale.styleTitle, indices: []},\n          {view: RULEVIEW, title: style.rules[indices[0]]?.name, indices: [indices[0]]},\n          {view: SYMBOLIZERVIEW, title: locale.symbolizerTitle, indices: [...indices]}\n        ];\n      case FILTEREDITVIEW:\n        return [\n          {view: STYLEVIEW, title: locale.styleTitle, indices: []},\n          {view: RULEVIEW, title: style.rules[indices[0]]?.name, indices: [indices[0]]},\n          {view: FILTEREDITVIEW, title: locale.filterTitle, indices: [...indices]},\n        ];\n      case ICONLIBRARIESVIEW:\n        return [\n          {view: STYLEVIEW, title: locale.styleTitle, indices: []},\n          {view: RULEVIEW, title: style.rules[indices[0]]?.name, indices: [indices[0]]},\n          {view: SYMBOLIZERVIEW, title: locale.symbolizerTitle, indices: [...indices]},\n          {view: SYMBOLIZERVIEW, title: locale.iconLibrariesTitle, indices: [...indices]}\n        ];\n      default:\n        return [];\n    }\n\n  };\n\n  const changeView = (viewName: string, indices: number[]) => {\n    let view: CardView = {view: viewName, props: indices, path: []};\n    view.path = getPathForView(viewName, indices);\n    setCurrentView(view);\n  };\n\n  /**\n   * Update the title for all path elements with view RULEVIEW.\n   *\n   * @param ruleName The new name of the rule that should be used as title.\n   * @param path The path list to search for RULEVIEWs.\n   * @returns The path list with updated titles.\n   */\n  const updateRuleNameForPath = (ruleName: string, path: Crumb[]): Crumb[] => {\n    return path.map(pathItem => {\n      if (pathItem.view === RULEVIEW) {\n        pathItem.title = ruleName;\n      }\n      return pathItem;\n    });\n  };\n\n  const onRuleChange = (newRule: GsRule) => {\n    let styleClone = _cloneDeep(style);\n    const ruleIdx = currentView.path[currentView.path.length - 1].indices[0];\n    styleClone.rules[ruleIdx] = newRule;\n    const pathClone = _cloneDeep(currentView.path);\n    const newCurrentViewPath = updateRuleNameForPath(newRule.name, pathClone);\n    setCurrentView({...currentView, path: newCurrentViewPath});\n    if (onStyleChange) {\n      onStyleChange(styleClone);\n    }\n  };\n\n  const onRulesChange = (rules: GsRule[]) => {\n    let styleClone = _cloneDeep(style);\n    styleClone.rules = rules;\n    if (onStyleChange) {\n      onStyleChange(styleClone);\n      changeView(STYLEVIEW, currentView.path[0].indices);\n    }\n  };\n\n  const onSymbolizerChange = (symbolizer: GsSymbolizer) => {\n    let styleClone = _cloneDeep(style);\n    const ruleIdx = currentView.path[currentView.path.length - 1].indices[0];\n    const symbolizerIdx = currentView.path[currentView.path.length - 1].indices[1];\n    styleClone.rules[ruleIdx].symbolizers[symbolizerIdx] = symbolizer;\n    if (onStyleChange) {\n      onStyleChange(styleClone);\n    }\n  };\n\n  const onFilterChange = (filter: GsFilter) => {\n    let styleClone = _cloneDeep(style);\n    const ruleIdx = currentView.path[currentView.path.length - 1].indices[0];\n    styleClone.rules[ruleIdx].filter = filter;\n    if (onStyleChange) {\n      onStyleChange(styleClone);\n    }\n  };\n\n  const onBulkEditorChange = (prop: string, val: any) => {\n    const styleClone = _cloneDeep(style);\n    const selectedRuleIds = currentView.path[currentView.path.length - 1].indices;\n    styleClone.rules\n      .filter((rule: GsRule, idx: number) => {\n        return selectedRuleIds.includes(idx);\n      })\n      .forEach((rule: GsRule) => {\n        rule.symbolizers.forEach((sym: any) => {\n          sym[prop] = val;\n          if (prop === 'image' && sym.wellKnownName) {\n            delete sym.wellKnownName;\n            sym.kind = 'Icon';\n          }\n          if (prop === 'wellKnownName' && sym.image) {\n            delete sym.image;\n          }\n        });\n      });\n\n    if (onStyleChange) {\n      onStyleChange(styleClone);\n    }\n  };\n\n  const onIconSelect = (iconSrc: string) => {\n    const styleClone = _cloneDeep(style);\n    const ruleIdx = currentView.path[currentView.path.length - 1].indices[0];\n    const symbolizerIdx = currentView.path[currentView.path.length - 1].indices[1];\n    const symbolizer = styleClone.rules[ruleIdx].symbolizers[symbolizerIdx];\n    if (isIconSymbolizer(symbolizer)) {\n      symbolizer.image = iconSrc;\n    }\n\n    if (onStyleChange) {\n      onStyleChange(styleClone);\n    }\n  };\n\n  /**\n   * Get the image url for the currently selected symbolizer.\n   */\n  const getSelectedIconSrc = (): string => {\n    const symbolizer = style\n      .rules[currentView.path[currentView.path.length - 1].indices[0]]\n      .symbolizers[currentView.path[currentView.path.length - 1].indices[1]];\n\n    if (isIconSymbolizer(symbolizer)) {\n      if (typeof symbolizer.image === 'string') {\n        return symbolizer.image;\n      }\n    }\n    return '';\n  };\n\n  const onRuleChangeView = (viewName: string, indices: number[]) => {\n    const newIndices = [currentView.path[currentView.path.length - 1].indices[0], ...indices];\n    changeView(viewName, newIndices);\n  };\n\n  const onIconEditorChangeView = () => {\n    const newIndices = [...currentView.path[currentView.path.length - 1].indices];\n    changeView(ICONLIBRARIESVIEW, newIndices);\n  };\n\n  return (\n    <div\n      className='gs-card-style'\n    >\n      <Breadcrumb\n        crumbs={currentView.path}\n        onClick={changeView}\n      />\n      {\n        currentView.view === STYLEVIEW && (\n          <StyleOverview\n            style={style}\n            data={data}\n            onStyleChange={onStyleChange}\n            onChangeView={changeView}\n          />\n        )\n      }\n      {\n        currentView.view === RULEVIEW && (\n          <RuleOverview\n            rule={style.rules[currentView.path[currentView.path.length - 1].indices[0]]}\n            data={data}\n            onRuleChange={onRuleChange}\n            onChangeView={onRuleChangeView}\n          />\n        )\n      }\n      {\n        currentView.view === SYMBOLIZERVIEW && (\n          <>\n            <Renderer\n              symbolizers={[\n                style\n                  .rules[currentView.path[currentView.path.length - 1].indices[0]]\n                  .symbolizers[currentView.path[currentView.path.length - 1].indices[1]]\n              ]}\n              data={data}\n            />\n            <Editor\n              symbolizer={\n                style\n                  .rules[currentView.path[currentView.path.length - 1].indices[0]]\n                  .symbolizers[currentView.path[currentView.path.length - 1].indices[1]]\n              }\n              onSymbolizerChange={onSymbolizerChange}\n              internalDataDef={data}\n              iconEditorProps={{\n                imageFieldProps: {\n                  windowless: true,\n                  onIconLibrariesClick: onIconEditorChangeView\n                }\n              }}\n              iconLibraries={iconLibraries}\n            />\n          </>\n        )\n      }\n      {\n        currentView.view === FILTEREDITVIEW && (\n          <FilterTree\n            filter={\n              style\n                .rules[currentView.path[currentView.path.length - 1].indices[0]]\n                .filter\n            }\n            onFilterChange={onFilterChange}\n            internalDataDef={data}\n          />\n        )\n      }\n      {\n        currentView.view === CLASSIFICATIONVIEW && (\n          <RuleGenerator\n            internalDataDef={data as VectorData}\n            onRulesChange={onRulesChange}\n          />\n        )\n      }\n      {\n        currentView.view === MULTIEDITVIEW && (\n          <BulkEditor\n            onStylePropChange={onBulkEditorChange}\n          />\n        )\n      }\n      {\n        currentView.view === ICONLIBRARIESVIEW && (\n          <IconSelector\n            iconLibraries={iconLibraries}\n            onIconSelect={onIconSelect}\n            selectedIconSrc={getSelectedIconSrc()}\n          />\n        )\n      }\n    </div>\n  );\n};\n\nexport default localize(CardStyle, 'CardStyle');\n"]}