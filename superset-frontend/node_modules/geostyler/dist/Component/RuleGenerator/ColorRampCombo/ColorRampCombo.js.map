{"version":3,"file":"ColorRampCombo.js","sourceRoot":"","sources":["../../../../src/Component/RuleGenerator/ColorRampCombo/ColorRampCombo.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,2CAA+B;AAE/B,iCAA+B;AAE/B,uCAAmC;AAEnC,6BAA8B;AAE9B,mEAA6D;AAE7D,sFAAgE;AAIhE,gEAA0C;AAqB1C,IAAM,aAAa,GAAG,gBAAgB,CAAC;AAEvC;;GAEG;AACI,IAAM,cAAc,GAAkC,UAAC,EAS7D;QARC,cAA6B,EAA7B,MAAM,mBAAG,eAAK,CAAC,cAAc,KAAA,EAC7B,kBAIC,EAJD,UAAU,8BACR,SAAS,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,EAC7E,QAAQ,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,IAC7B,kBAAM,MACV,EACD,QAAQ,cAAA,EACR,SAAS,eAAA;IAGT,IAAM,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;SAC7C,GAAG,CAAC,UAAC,IAAY;QAChB,IAAM,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;QAChC,IAAM,KAAK,GAAG,2BAAiB,CAAC,iCAAiC,CAAC,MAAM,CAAC,CAAC;QAC1E,OAAO,CACL,oBAAC,aAAM,CAAC,MAAM,IACZ,SAAS,EAAC,sBAAsB,EAChC,GAAG,EAAE,IAAI,EACT,KAAK,EAAE,IAAI,EACX,KAAK,EAAE,KAAK,IAEX,IAAI,CACS,CACjB,CAAC;IACJ,CAAC,CAAC,CAAC;IAGL,IAAI,cAAc,CAAC;IACnB,IAAI,SAAS,EAAE;QACb,IAAM,MAAM,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;QACrC,cAAc,GAAG,2BAAiB,CAAC,iCAAiC,CAAC,MAAM,CAAC,CAAC;KAC9E;IAED,OAAO,CACL,oBAAC,aAAM,IACL,SAAS,EAAC,sBAAsB,EAChC,KAAK,EAAE,cAAc,EACrB,WAAW,EAAE,MAAM,CAAC,oBAAoB,EACxC,gBAAgB,EAAC,UAAU,EAC3B,KAAK,EAAE,SAAS,EAChB,QAAQ,EAAE,QAAQ,IAEjB,gBAAgB,CACV,CACV,CAAC;AACJ,CAAC,CAAC;AA9CW,QAAA,cAAc,kBA8CzB;AAEF,kBAAe,IAAA,wBAAQ,EAAC,sBAAc,EAAE,aAAa,CAAC,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\nimport './ColorRampCombo.less';\n\nimport { brewer } from 'chroma-js';\n\nimport { Select } from 'antd';\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\n\nimport RuleGeneratorUtil from '../../../Util/RuleGeneratorUtil';\n\nimport _isEqual from 'lodash/isEqual';\nimport { GeoStylerLocale } from '../../../locale/locale';\nimport en_US from '../../../locale/en_US';\n\n\n// default props\nexport interface ColorRampComboDefaultProps {\n  /** Locale object containing translated text snippets */\n  locale: GeoStylerLocale['ColorRampCombo'];\n  /** Object containing predefined color ramps */\n  colorRamps: {\n    [name: string]: string[];\n  };\n}\n\n// non default props\nexport interface ColorRampComboProps extends Partial<ColorRampComboDefaultProps> {\n  /** The callback method that is triggered when the state changes */\n  onChange?: (colorRamp: string) => void;\n  /** The selected color ramp */\n  colorRamp?: string;\n}\n\nconst COMPONENTNAME = 'ColorRampCombo';\n\n/**\n * ColorRampCombo UI.\n */\nexport const ColorRampCombo: React.FC<ColorRampComboProps> = ({\n  locale = en_US.ColorRampCombo,\n  colorRamps = {\n    GeoStyler: ['#E7000E', '#F48E00', '#FFED00', '#00943D', '#272C82', '#611E82'],\n    GreenRed: ['#00FF00', '#FF0000'],\n    ...brewer\n  },\n  onChange,\n  colorRamp\n}) => {\n\n  const colorRampOptions = Object.keys(colorRamps)\n    .map((name: string) => {\n      const colors = colorRamps[name];\n      const style = RuleGeneratorUtil.generateBackgroundStyleFromColors(colors);\n      return (\n        <Select.Option\n          className=\"gs-color-ramp-option\"\n          key={name}\n          value={name}\n          style={style}\n        >\n          {name}\n        </Select.Option>\n      );\n    });\n\n\n  let colorRampStyle;\n  if (colorRamp) {\n    const colors = colorRamps[colorRamp];\n    colorRampStyle = RuleGeneratorUtil.generateBackgroundStyleFromColors(colors);\n  }\n\n  return (\n    <Select\n      className=\"gs-color-ramp-select\"\n      style={colorRampStyle}\n      placeholder={locale.colorRampPlaceholder}\n      optionFilterProp=\"children\"\n      value={colorRamp}\n      onChange={onChange}\n    >\n      {colorRampOptions}\n    </Select>\n  );\n};\n\nexport default localize(ColorRampCombo, COMPONENTNAME);\n"]}