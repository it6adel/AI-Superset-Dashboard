{"version":3,"file":"ColorSpaceCombo.js","sourceRoot":"","sources":["../../../../src/Component/RuleGenerator/ColorSpaceCombo/ColorSpaceCombo.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,2CAA+B;AAE/B,6BAA8B;AAE9B,mEAA6D;AAK7D,gEAA0C;AAsB1C,IAAM,aAAa,GAAG,iBAAiB,CAAC;AAExC;;GAEG;AACI,IAAM,eAAe,GAAmC,UAAC,EAK/D;QAJC,cAA8B,EAA9B,MAAM,mBAAG,eAAK,CAAC,eAAe,KAAA,EAC9B,mBAA+D,EAA/D,WAAW,mBAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,KAAA,EAC/D,QAAQ,cAAA,EACR,UAAU,gBAAA;IAGV,IAAM,iBAAiB,GAAG,WAAW,CAAC,GAAG,CAAC,UAAC,MAAyB;QAClE,OAAO,CACL,oBAAC,aAAM,CAAC,MAAM,IACZ,SAAS,EAAC,oBAAoB,EAC9B,GAAG,EAAE,MAAM,EACX,KAAK,EAAE,MAAM,IAEZ,MAAM,CAAC,WAAW,EAAE,CACP,CACjB,CAAC;IACJ,CAAC,CAAC,CAAC;IAGH,OAAO,CACL,oBAAC,aAAM,IACL,SAAS,EAAC,oBAAoB,EAC9B,WAAW,EAAE,MAAM,CAAC,qBAAqB,EACzC,gBAAgB,EAAC,UAAU,EAC3B,KAAK,EAAE,UAAU,EACjB,QAAQ,EAAE,QAAQ,IAEjB,iBAAiB,CACX,CACV,CAAC;AACJ,CAAC,CAAC;AA/BW,QAAA,eAAe,mBA+B1B;AAEF,kBAAe,IAAA,wBAAQ,EAAC,uBAAe,EAAE,aAAa,CAAC,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport * as React from 'react';\n\nimport { Select } from 'antd';\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\nimport { InterpolationMode } from 'chroma-js';\n\nimport _isEqual from 'lodash/isEqual';\nimport { GeoStylerLocale } from '../../../locale/locale';\nimport en_US from '../../../locale/en_US';\n\n// i18n\nexport interface ColorSpaceComboLocale {\n  colorSpacePlaceholder: string;\n}\n\n// default props\nexport interface ColorSpaceComboDefaultProps {\n  /** Locale object containing translated text snippets */\n  locale: GeoStylerLocale['ColorSpaceCombo'];\n  /** List of color supported color spaces */\n  colorSpaces: (InterpolationMode)[];\n}\n\n// non default props\nexport interface ColorSpaceComboProps extends Partial<ColorSpaceComboDefaultProps> {\n  /** The callback method that is triggered when the state changes */\n  onChange?: (colorSpace: InterpolationMode) => void;\n  /** The selected color space */\n  colorSpace?: InterpolationMode;\n}\nconst COMPONENTNAME = 'ColorSpaceCombo';\n\n/**\n * Symbolizer editorwindow UI.\n */\nexport const ColorSpaceCombo: React.FC<ColorSpaceComboProps> = ({\n  locale = en_US.ColorSpaceCombo,\n  colorSpaces = ['hsl', 'hsv', 'hsi', 'lab', 'lch', 'hcl', 'rgb'],\n  onChange,\n  colorSpace\n}) => {\n\n  const colorSpaceOptions = colorSpaces.map((cSpace: InterpolationMode) => {\n    return (\n      <Select.Option\n        className=\"color-space-option\"\n        key={cSpace}\n        value={cSpace}\n      >\n        {cSpace.toUpperCase()}\n      </Select.Option>\n    );\n  });\n\n\n  return (\n    <Select\n      className=\"color-space-select\"\n      placeholder={locale.colorSpacePlaceholder}\n      optionFilterProp=\"children\"\n      value={colorSpace}\n      onChange={onChange}\n    >\n      {colorSpaceOptions}\n    </Select>\n  );\n};\n\nexport default localize(ColorSpaceCombo, COMPONENTNAME);\n"]}