{"version":3,"file":"ClassificationCombo.js","sourceRoot":"","sources":["../../../../src/Component/RuleGenerator/ClassificationCombo/ClassificationCombo.tsx"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;;;;;;AAEH,gDAA0B;AAE1B,6BAA8B;AAE9B,mEAA6D;AAI7D,gEAA0C;AAE1C,sCAAoC;AAoBpC,IAAM,aAAa,GAAG,qBAAqB,CAAC;AAE5C;;GAEG;AACI,IAAM,mBAAmB,GAAuC,UAAC,EAKvE;QAJC,cAAkC,EAAlC,MAAM,mBAAG,eAAK,CAAC,mBAAmB,KAAA,EAClC,uBAAwE,EAAxE,eAAe,mBAAG,CAAC,eAAe,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,CAAC,KAAA,EACxE,QAAQ,cAAA,EACR,cAAc,oBAAA;IAGd,IAAM,qBAAqB,GAAG,eAAe,CAAC,GAAG,CAAC,UAAC,MAA4B;QAC7E,OAAO,CACL,8BAAC,aAAM,CAAC,MAAM,IACZ,SAAS,EAAC,uBAAuB,EACjC,GAAG,EAAE,MAAM,EACX,KAAK,EAAE,MAAM,IAEZ,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CACX,CACjB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,OAAO,CACL,8BAAC,aAAM,IACL,SAAS,EAAC,sBAAsB,EAChC,gBAAgB,EAAC,UAAU,EAC3B,KAAK,EAAE,cAAc,EACrB,QAAQ,EAAE,QAAQ,IAEjB,qBAAqB,CACf,CACV,CAAC;AACJ,CAAC,CAAC;AA7BW,QAAA,mBAAmB,uBA6B9B;AAEF,kBAAe,IAAA,wBAAQ,EAAC,2BAAmB,EAAE,aAAa,CAAC,CAAC","sourcesContent":["/* Released under the BSD 2-Clause License\n *\n * Copyright Â© 2018-present, terrestris GmbH & Co. KG and GeoStyler contributors\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice,\n *   this list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *   this list of conditions and the following disclaimer in the documentation\n *   and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport React from 'react';\n\nimport { Select } from 'antd';\n\nimport { localize } from '../../LocaleWrapper/LocaleWrapper';\n\nimport _isEqual from 'lodash/isEqual';\nimport { GeoStylerLocale } from '../../../locale/locale';\nimport en_US from '../../../locale/en_US';\n\nimport './ClassificationCombo.less';\n\nexport type ClassificationMethod = 'equalInterval' | 'quantile' | 'logarithmic' | 'kmeans';\n\n// default props\nexport interface ClassificationComboDefaultProps {\n  /** Locale object containing translated text snippets */\n  locale: GeoStylerLocale['ClassificationCombo'];\n  /** List of supported classification methods */\n  classifications: ClassificationMethod[];\n}\n\n// non default props\nexport interface ClassificationComboProps extends Partial<ClassificationComboDefaultProps> {\n  /** The callback method that is triggered when the state changes */\n  onChange?: (classification: ClassificationMethod) => void;\n  /** The selected classification method */\n  classification?: ClassificationMethod;\n}\n\nconst COMPONENTNAME = 'ClassificationCombo';\n\n/**\n * Symbolizer editorwindow UI.\n */\nexport const ClassificationCombo: React.FC<ClassificationComboProps> = ({\n  locale = en_US.ClassificationCombo,\n  classifications = ['equalInterval', 'quantile', 'logarithmic', 'kmeans'],\n  onChange,\n  classification\n}) => {\n\n  const classificationOptions = classifications.map((method: ClassificationMethod) => {\n    return (\n      <Select.Option\n        className=\"classification-option\"\n        key={method}\n        value={method}\n      >\n        {locale[method] || method}\n      </Select.Option>\n    );\n  });\n\n  return (\n    <Select\n      className=\"classification-combo\"\n      optionFilterProp=\"children\"\n      value={classification}\n      onChange={onChange}\n    >\n      {classificationOptions}\n    </Select>\n  );\n};\n\nexport default localize(ClassificationCombo, COMPONENTNAME);\n"]}