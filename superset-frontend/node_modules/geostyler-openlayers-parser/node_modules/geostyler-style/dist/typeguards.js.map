{"version":3,"file":"typeguards.js","sourceRoot":"","sources":["../typeguards.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Contains typeguards for geostyler-style\n * https://basarat.gitbook.io/typescript/type-system/typeguard#user-defined-type-guards\n */\n\nimport _isString from 'lodash/isString';\nimport _isNumber from 'lodash/isNumber';\nimport _isBoolean from 'lodash/isBoolean';\nimport _isRegExp from 'lodash/isRegExp';\nimport _isNull from 'lodash/isNull';\n\nimport {\n  CombinationFilter,\n  CombinationOperator,\n  ComparisonFilter,\n  ComparisonOperator,\n  FillSymbolizer,\n  Filter,\n  GrayChannel,\n  IconSymbolizer,\n  LineSymbolizer,\n  MarkSymbolizer,\n  NegationFilter,\n  NegationOperator,\n  Operator,\n  PropertyType,\n  RasterSymbolizer,\n  RGBChannel,\n  Rule,\n  ScaleDenominator,\n  TextSymbolizer,\n  Expression,\n  GeoStylerBooleanFunction,\n  GeoStylerNumberFunction,\n  GeoStylerStringFunction,\n  GeoStylerUnknownFunction,\n  GeoStylerFunction,\n  PointSymbolizer,\n  Symbolizer,\n  FunctionCall,\n  Sprite\n} from './index';\n\nexport const isExpression = (got: any): got is Expression<any> => {\n  return isGeoStylerFunction(got) || isPropertyType(got);\n};\n\n/**\n * @deprecated use isFunction instead\n */\nexport const isFunctionCall = (got: any): got is FunctionCall<any> => {\n  return got.type === 'functioncall' &&\n    got.hasOwnProperty('name') &&\n    _isString(got.name) &&\n    got.hasOwnProperty('args') &&\n    Array.isArray(got.args) &&\n    got.args.every((arg: any) => isExpression(arg));\n};\n\n// PropertyValue\nexport const isPropertyType = (got: any): got is PropertyType => {\n  return _isString(got) || _isNumber(got) || _isBoolean(got) || got === null;\n};\n\n// ScaleDenominator\nexport const isScaleDenominator = (got: any): got is ScaleDenominator => {\n  return !!((got?.min || got?.max) &&\n    ((!!got.min) ? isGeoStylerNumberFunction(got.min) || _isNumber(got.min) : true) &&\n    ((!!got.max) ? isGeoStylerNumberFunction(got.max) || _isNumber(got.min) : true));\n};\n\n// Operators\nexport const isOperator = (got: any): got is Operator => {\n  return isComparisonOperator(got) ||\n    isCombinationOperator(got) ||\n    isNegationOperator(got);\n};\nexport const isComparisonOperator = (got: any): got is ComparisonOperator => {\n  return ['==', '*=' , '!=' , '<' , '<=' , '>' , '>=', '<=x<='].includes(got);\n};\nexport const isCombinationOperator = (got: any): got is CombinationOperator => {\n  return ['&&', '||'].includes(got);\n};\nexport const isNegationOperator = (got: any): got is NegationOperator => {\n  return got === '!';\n};\n\n// Filters\nexport const isFilter = (got: any): got is Filter => {\n  return isComparisonFilter(got) ||\n    isCombinationFilter(got) ||\n    isGeoStylerBooleanFunction(got) ||\n    isNegationFilter(got) ||\n    isGeoStylerBooleanFunction(got) ||\n    _isBoolean(got);\n};\n\nexport const isComparisonFilter = (got: any): got is ComparisonFilter => {\n  const expectedLength = got && got[0] === '<=x<=' ? 4 : 3;\n  return (\n    Array.isArray(got) &&\n    got.length === expectedLength &&\n    isComparisonOperator(got[0]) &&\n    isExpression(got[1]) &&\n    isExpression(got[2]) &&\n    (got[0] !== '<=x<=' || _isNumber(got[3]))\n  );\n};\nexport const isCombinationFilter = (got: any): got is CombinationFilter => {\n  return Array.isArray(got) &&\n    got.length >= 3 &&\n    isCombinationOperator(got[0]) &&\n    got.every((arg, index) => index === 0 || isFilter(arg));\n};\nexport const isNegationFilter = (got: any): got is NegationFilter => {\n  return Array.isArray(got) &&\n    got.length === 2 &&\n    isNegationOperator(got[0]) &&\n    isFilter(got[1]);\n};\n\n// Symbolizers\nexport const isSymbolizer = (got: any): got is Symbolizer => {\n  return isPointSymbolizer(got) ||\n  isLineSymbolizer(got) ||\n  isFillSymbolizer(got) ||\n  isRasterSymbolizer(got);\n};\nexport const isPointSymbolizer = (got: any): got is PointSymbolizer => {\n  return isIconSymbolizer(got) || isMarkSymbolizer(got) || isTextSymbolizer(got);\n};\nexport const isIconSymbolizer = (got: any): got is IconSymbolizer => {\n  return got?.kind === 'Icon';\n};\nexport const isTextSymbolizer = (got: any): got is TextSymbolizer => {\n  return got?.kind === 'Text';\n};\nexport const isMarkSymbolizer = (got: any): got is MarkSymbolizer => {\n  return got?.kind === 'Mark' && _isString(got?.wellKnownName);\n};\nexport const isLineSymbolizer = (got: any): got is LineSymbolizer => {\n  return got?.kind === 'Line';\n};\nexport const isFillSymbolizer = (got: any): got is FillSymbolizer => {\n  return got?.kind === 'Fill';\n};\nexport const isRasterSymbolizer = (got: any): got is RasterSymbolizer => {\n  return got?.kind === 'Raster';\n};\n\n// Rule\nexport const isRule = (got: any): got is Rule => {\n  return !!(_isString(got?.name) &&\n    (got?.filter ? isFilter(got.filter) : true) &&\n    (got?.scaleDenominator ? isScaleDenominator(got.scaleDenominator) : true) &&\n    got?.symbolizers?.every((arg: any) => isSymbolizer(arg)));\n};\n\n/**\n * Checks if ChannelSelection is of type RGBChannel.\n */\nexport const isRgbChannel = (got: any): got is RGBChannel => {\n  return !!(\n    got?.redChannel !== undefined\n      || got?.greenChannel !== undefined\n      || got?.blueChannel !== undefined\n  );\n};\n\n/**\n * Checks if ChannelSelection is of type GrayChannel.\n */\nexport const isGrayChannel = (got: any): got is GrayChannel => {\n  return !!(got?.grayChannel !== undefined);\n};\n\n// Functions\nexport const isGeoStylerNumberFunction = (got: any): got is GeoStylerNumberFunction => {\n  const functionNames: GeoStylerNumberFunction['name'][] = [\n    'abs',\n    'acos',\n    'add',\n    'asin',\n    'atan',\n    'atan2',\n    'ceil',\n    'cos',\n    'div',\n    'exp',\n    'floor',\n    'log',\n    'max',\n    'min',\n    'modulo',\n    'mul',\n    'pi',\n    'pow',\n    'random',\n    'rint',\n    'round',\n    'sin',\n    'sqrt',\n    'strIndexOf',\n    'strLastIndexOf',\n    'strLength',\n    'sub',\n    'tan',\n    'toDegrees',\n    'toRadians'\n  ];\n  return functionNames.includes(got?.name);\n};\n\nexport const isGeoStylerStringFunction = (got: any): got is GeoStylerStringFunction => {\n  const functionNames: GeoStylerStringFunction['name'][] = [\n    'numberFormat',\n    'strAbbreviate',\n    'strCapitalize',\n    'strConcat',\n    'strDefaultIfBlank',\n    'strReplace',\n    'strStripAccents',\n    'strSubstring',\n    'strSubstringStart',\n    'strToLowerCase',\n    'strToUpperCase',\n    'strTrim'\n  ];\n  return functionNames.includes(got?.name);\n};\n\nexport const isGeoStylerBooleanFunction = (got: any): got is GeoStylerBooleanFunction => {\n  const functionNames: GeoStylerBooleanFunction['name'][] = [\n    'all',\n    'any',\n    'between',\n    'double2bool',\n    'equalTo',\n    'greaterThan',\n    'greaterThanOrEqualTo',\n    'in',\n    'lessThan',\n    'lessThanOrEqualTo',\n    'not',\n    'notEqualTo',\n    'parseBoolean',\n    'strEndsWith',\n    'strEqualsIgnoreCase',\n    'strMatches',\n    'strStartsWith'\n  ];\n  return functionNames.includes(got?.name);\n};\n\nexport const isGeoStylerUnknownFunction = (got: any): got is GeoStylerUnknownFunction => {\n  const functionNames: GeoStylerUnknownFunction['name'][] = [\n    'case',\n    'property',\n  ];\n  return functionNames.includes(got?.name);\n};\n\nexport const isGeoStylerFunction = (got: any): got is GeoStylerFunction => {\n  return isGeoStylerBooleanFunction(got) ||\n    isGeoStylerNumberFunction(got) ||\n    isGeoStylerStringFunction(got) ||\n    isGeoStylerUnknownFunction(got);\n};\n\nexport const isSprite = (got: any): got is Sprite => {\n  return typeof got?.source === 'string' || isGeoStylerFunction(got?.source) &&\n    Array.isArray(got.position) &&\n    Array.isArray(got.size);\n};\n"]}